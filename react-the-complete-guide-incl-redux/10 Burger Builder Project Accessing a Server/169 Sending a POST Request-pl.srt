1
00:00:02,150 --> 00:00:05,490
W ostatnim wykadzie stworzylimy nasz instancj osi, teraz

2
00:00:05,510 --> 00:00:08,790
nadszed czas, aby mc wysya tam dania.

3
00:00:08,840 --> 00:00:11,220
Teraz zastanwmy si, gdzie to robimy.

4
00:00:11,630 --> 00:00:20,390
No c, w naszym pojemniku do budowania burgerw mamy tak metod, w ktrej obsugujemy kontynuacj zakupu.

5
00:00:20,390 --> 00:00:22,990
Teraz pokazujemy, e kontynuujesz alarm,

6
00:00:23,040 --> 00:00:27,190
ale oczywicie nie chcemy pokazywa, e kontynuujesz w

7
00:00:27,200 --> 00:00:31,380
kocowej aplikacji, prawdopodobnie chcemy skierowa uytkownika do formularza patnoci.

8
00:00:31,490 --> 00:00:35,930
Nie wiemy, jak zaadowa rne strony w naszej aplikacji na jedn stron i tak,

9
00:00:35,960 --> 00:00:40,620
strony w naszej aplikacji na jedn stron brzmi dziwnie, wkrtce zobaczysz, jak to dziaa, a

10
00:00:40,850 --> 00:00:45,160
take nie nauczylimy si obsugi wprowadzania formularzy, jak aby to sprawdzi i tak dalej.

11
00:00:45,410 --> 00:00:47,920
Na razie nie bdzie formularza kasowego, moemy po prostu

12
00:00:48,020 --> 00:00:54,110
przyj zamwienie w takim stanie, w jakim jest, i przechowywa je w ten sposb z pewnymi faszywymi danymi doczonymi do niego

13
00:00:54,110 --> 00:00:55,160
w bazie danych.

14
00:00:55,160 --> 00:01:02,510
Aby to zrobi, skomentuj t lini alertu tutaj, a zamiast tego miejsca tutaj, chc wysa moje dane do

15
00:01:02,660 --> 00:01:08,960
mojego backendu, chc zrobi to danie HTTP. Tak wic w pliku budowniczego hamburgera powinnimy

16
00:01:08,990 --> 00:01:10,390
zaimportowa nasz wasn

17
00:01:10,610 --> 00:01:17,600
instancj osi, wic zamierzam zaimportowa aksjos z, a teraz musz przej ca drog do folderu

18
00:01:17,600 --> 00:01:23,240
gwnego i tam z zamwie-axios. js, to bdzie uywa naszej skonfigurowanej instancji Axios.

19
00:01:23,630 --> 00:01:30,090
Teraz moemy uy tego w purchaseContinueHandler, aby wysa danie do naszego wasnego backendu.

20
00:01:30,260 --> 00:01:37,310
Teraz do przechowywania danych, powinnimy uy dania postu, dlatego uywamy metody post na tej instancji.

21
00:01:37,310 --> 00:01:42,950
Teraz adres URL jest oczywicie naszym podstawowym adresem URL plus wszystko, co tutaj dodajemy,

22
00:01:43,160 --> 00:01:48,770
i to jest fajne w firebase, o ktrym mwiem, e uywa on struktury podobnej

23
00:01:48,770 --> 00:01:50,540
do MongoDB, w rzeczywistoci nie

24
00:01:50,630 --> 00:01:57,800
mamy tabel, mamy tylko struktur jsonow, jak zagniedon struktur a jeli wylesz zapytanie do czego takiego, jak to

25
00:01:57,860 --> 00:01:59,640
jest w przypadku zamwie slashowych

26
00:01:59,690 --> 00:02:04,950
URL, utworzy to nasz wze zamwie i zapisze nasze zamwienia pod tym wzem

27
00:02:05,180 --> 00:02:06,950
i wanie to chc zrobi.

28
00:02:07,130 --> 00:02:14,960
Dodam slash orders tutaj i teraz tylko dla firebase, jest specjalna rzecz, ktr musisz doda. json tutaj.

29
00:02:14,960 --> 00:02:15,710
&nbsp;

30
00:02:15,710 --> 00:02:20,390
To jest punkt kocowy, ktrego potrzebujesz, by baza ogniowa dziaaa poprawnie.

31
00:02:20,390 --> 00:02:25,940
Oczywicie w nastpnym projekcie prawdopodobnie masz swj wasny backend lub korzystasz z innej usugi

32
00:02:25,940 --> 00:02:28,880
i musisz tam wybra odpowiedni punkt kocowy.

33
00:02:28,940 --> 00:02:32,790
W przypadku bazy Firebase jest to dowolna wybrana nazwa wza. json.

34
00:02:32,810 --> 00:02:40,170
To jest adres URL, na ktry chc wysa danie, adres URL, ktry jest doczany do mojego podstawowego adresu URL

35
00:02:40,180 --> 00:02:42,960
lub cieka, ktra jest doczana do naszego

36
00:02:43,100 --> 00:02:50,840
podstawowego adresu URL, teraz musimy rwnie przesa pewne dane, a te dane oczywicie powinny by naszym zamwieniem podana konfiguracja burgera.

37
00:02:50,870 --> 00:02:54,020
Teraz konfiguracja burgera jest przechowywana w tym stanie,

38
00:02:54,020 --> 00:02:56,590
mamy skadniki, mamy cakowit cen, wic

39
00:02:56,660 --> 00:02:58,450
dostajemy wszystko, czego potrzebujemy,

40
00:02:58,610 --> 00:03:00,250
wic jest to bardzo proste.

41
00:03:00,260 --> 00:03:06,840
Moemy stworzy nowy obiekt zamwienia, obiekt javascript, ktry ma skadniki i tutaj po

42
00:03:06,920 --> 00:03:13,390
prostu chc tego uy. stan. skadniki, ktre powinny

43
00:03:13,460 --> 00:03:21,160
mie swoj cen. stan. cena, cakowita cena, przepraszam i tylko maa

44
00:03:21,160 --> 00:03:26,770
uwaga oczywicie dla twojej gotowej aplikacji, powiniene zdecydowanie obliczy ostateczn cen na serwerze, poniewa prawdopodobnie

45
00:03:26,770 --> 00:03:32,470
masz tam swj produkt przechowywany na serwerze, aby upewni si, e uytkownik nie jest manipulowanie

46
00:03:32,470 --> 00:03:36,280
kodem przed wysaniem go i manipulowanie cen, ktrej uywasz.

47
00:03:36,340 --> 00:03:39,280
Nadal tutaj uywam tej ceny, znowu naley

48
00:03:39,360 --> 00:03:43,000
pamita, e to oczywicie nie jest konfiguracja, ktrej uywaby

49
00:03:43,120 --> 00:03:47,050
na prawdziwej aplikacji, tam by przeliczy cen na serwerze.

50
00:03:47,050 --> 00:03:52,780
Teraz powiedzmy, e dla naszego zamwienia potrzebujemy rwnie dodatkowych informacji, ktrych nie moemy teraz

51
00:03:52,780 --> 00:03:58,570
pobra, poniewa nie mamy formularza patnoci, ale nadal chc wypeni backendem pewnymi faszywymi danymi.

52
00:03:58,810 --> 00:04:05,980
Mamy wic pewne dane o klientach, wic klient moe by obiektem javascript, w ktrym mamy co na

53
00:04:05,980 --> 00:04:07,390
ksztat nazwiska, wic

54
00:04:07,420 --> 00:04:10,940
tutaj jest Max Schwarzmuller, to moje imi, oczywicie

55
00:04:10,940 --> 00:04:12,140
wybierzcie swoje imi.

56
00:04:12,310 --> 00:04:18,950
Wtedy moemy mie adres, na ktrym znajduje si co w rodzaju ulicy, ulicy testowej, moesz

57
00:04:18,970 --> 00:04:27,940
zgadn, e nie mieszkam tam i jak kod pocztowy przesuwa si po klawiaturze, a moe kraje dla mnie, to jest Niemcy

58
00:04:28,000 --> 00:04:31,990
i nie wahaj si doda adnych dodatkowych dane tutaj.

59
00:04:32,200 --> 00:04:38,260
Moemy rwnie mie ten adres e-mail, przetestujmy wic test @. com tutaj, a moe dodajmy pole

60
00:04:38,260 --> 00:04:45,070
liczbowe obok metody dostarczania klienta, ktre powinno by najszybsze, abymy mieli moliwo wyboru

61
00:04:45,070 --> 00:04:49,750
midzy najszybsz moliw dostaw a najtasz lub co podobnego.

62
00:04:49,750 --> 00:04:52,140
Tak wic, po prostu niektre dane z

63
00:04:52,150 --> 00:04:54,140
zamwienia, moesz wybra dowolne dane.

64
00:04:54,190 --> 00:04:58,870
Pniej dodamy stron z kas, na ktrej bdziemy mogli wypeni niektre z

65
00:04:58,870 --> 00:04:59,470
nich za

66
00:04:59,500 --> 00:05:07,450
pomoc formularza, ale teraz po prostu zbudujmy takie faszywe zamwienie. To jest teraz kolejno, ktr chc przechowywa na

67
00:05:07,450 --> 00:05:08,230
zapleczu, wic

68
00:05:08,380 --> 00:05:15,040
w celu zamwienia tutaj, zamierzam przekaza to jako drugi argument dla dania postu.

69
00:05:15,040 --> 00:05:18,290
Wic to s dane, ktre s wysyane

70
00:05:18,730 --> 00:05:24,010
na t ciek, a teraz dodajmy nastpnie metod, aby zobaczy nasz

71
00:05:24,100 --> 00:05:28,010
odpowied, a ja zamierzam teraz rejestrowa odpowied tutaj.

72
00:05:28,390 --> 00:05:35,320
Dodajmy rwnie metod catch, w ktrej rwnie chc teraz zarejestrowa bd, a

73
00:05:35,350 --> 00:05:38,970
my zaktualizujemy obie metody w cigu sekundy.

74
00:05:39,370 --> 00:05:41,130
Zobaczmy wic, czy to

75
00:05:41,140 --> 00:05:43,370
teraz dziaa, otrzymalimy nasz prob

76
00:05:43,370 --> 00:05:45,170
o wysanie postu, wysyamy

77
00:05:45,220 --> 00:05:50,040
faszywe zamwienie, konfigurujemy instancj Axios i stworzylimy projekt Firebase.

78
00:05:50,080 --> 00:05:54,420
Przejdmy do naszej aplikacji na hamburgery i zbudujmy tutaj hamburgera,

79
00:05:54,550 --> 00:05:57,470
moe ten jeden porzdek kliknij teraz, a

80
00:05:57,700 --> 00:06:00,580
teraz dalej dalej, dania powinny zosta wysane.

81
00:06:00,580 --> 00:06:03,500
Kliknij wic dalej i wyglda to

82
00:06:03,550 --> 00:06:06,850
dobrze, otrzymuj odpowied ze statusem 200,

83
00:06:07,210 --> 00:06:09,430
wic sprawdmy baz ogniow.

84
00:06:09,460 --> 00:06:15,700
Powinno to automatycznie zaktualizowa t stron i powiniene zobaczy wze zamwie, w ktrym

85
00:06:15,730 --> 00:06:18,160
teraz widzisz t tajemnicz nazw.

86
00:06:18,160 --> 00:06:23,840
Teraz, aby uy metody post, firebase automatycznie tworzy list i zarzdza ni,

87
00:06:24,190 --> 00:06:30,760
a kady element listy otrzymuje automatycznie unikalny identyfikator przypisany i utworzony przez firebase.

88
00:06:31,000 --> 00:06:35,220
Jeli powikszymy ten obiekt, zobaczymy dane o

89
00:06:35,230 --> 00:06:42,580
zamwieniach, ktre faktycznie przekazalimy wraz z adresem, danymi klienta, metod dostawy i skadnikami

90
00:06:42,790 --> 00:06:44,710
burgera, a skadniki

91
00:06:44,710 --> 00:06:50,640
wyglday dobrze, miso, saatka, boczek wygldajcy jak burger waciwie to zbudowalimy.

92
00:06:50,920 --> 00:06:52,170
To jest wietne.

93
00:06:52,180 --> 00:06:54,880
Nasze hamburgery zostay zapisane z tyu, mamy

94
00:06:54,880 --> 00:06:56,780
zapisane tutaj nasze zamwienia, ale

95
00:06:56,830 --> 00:07:00,500
fajne jest to, e te dane pozostaj tutaj.

96
00:07:00,640 --> 00:07:06,700
Jeli przeadujemy aplikacj, przeadujemy ten plik HTML i oczywicie stracimy stan aplikacji, poniewa stan

97
00:07:06,700 --> 00:07:08,550
javascript znikn, ale oczywicie

98
00:07:08,770 --> 00:07:11,470
nasz stan na serwerze nadal istnieje.

99
00:07:11,470 --> 00:07:14,950
Teraz moglimy pobra zamwienia i przekaza je

100
00:07:15,130 --> 00:07:21,610
uytkownikowi, w prawdziwej aplikacji, rwnie jako producent lub waciciel firmy, prawdopodobnie rwnie

101
00:07:21,640 --> 00:07:26,540
obsuylibymy teraz zamwienia i wysalibymy tego burgera do klienta.

102
00:07:26,830 --> 00:07:28,500
Tak wic jest to

103
00:07:28,600 --> 00:07:36,100
danie POST zanim przejdziemy do obsugi bdw i tego typu rzeczy, upewnijmy si, e przedstawimy rwnie co

104
00:07:36,100 --> 00:07:39,650
uytkownikowi, gdy danie jest ju w drodze, a

105
00:07:39,850 --> 00:07:44,090
nastpnie upewnijmy si, e otrzymujemy rwnie dane z zaplecza.

