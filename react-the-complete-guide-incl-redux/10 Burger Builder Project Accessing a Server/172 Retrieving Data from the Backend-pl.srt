1
00:00:02,170 --> 00:00:05,240
W ostatnim wykadzie upewnilimy si, e moemy poradzi

2
00:00:05,310 --> 00:00:12,030
sobie z bdami, a dziki temu otrzymujemy solidn aplikacj, ktra pozwala nam publikowa nasze zamwienia na naszym zapleczu, to

3
00:00:12,030 --> 00:00:12,750
ju duo.

4
00:00:12,750 --> 00:00:14,810
Teraz jest jeszcze jedna rzecz,

5
00:00:15,000 --> 00:00:18,460
ktr chc zrobi, ale chc te uzyska dane

6
00:00:18,900 --> 00:00:23,000
z zaplecza i dlaczego nie dostaniemy tam naszych skadnikw.

7
00:00:23,040 --> 00:00:25,960
Tak wic skadniki, ktre tak ustawilimy.

8
00:00:26,040 --> 00:00:33,120
Dlaczego nie otrzymamy skadnikw dynamicznie z zaplecza. W tym celu przejdmy najpierw do bazy

9
00:00:33,460 --> 00:00:35,620
Firebase i zamknijmy wze

10
00:00:35,640 --> 00:00:41,160
zamwie, dodajmy teraz nowy wze, klikajc plus bezporednio obok twojej nazwy

11
00:00:41,160 --> 00:00:50,400
gwnej i nazwijmy te skadniki, nastpnie dodajmy to plus twj po prawej, aby doda Zagniedony element i tam

12
00:00:50,400 --> 00:00:54,740
skadniki powinny by po prostu naszymi kluczowymi parami wartoci.

13
00:00:54,750 --> 00:00:57,870
Wic moemy mie saatk o wartoci zero,

14
00:00:57,870 --> 00:01:03,760
kliknij przycisk Dodaj, a teraz dodaj wicej i dodajmy miso o wartoci zero,

15
00:01:04,080 --> 00:01:08,010
dodajmy bekon o wartoci zero, wic uywam tych

16
00:01:08,010 --> 00:01:11,760
samych skadnikw co wczeniej poniewa wspieram je tylko,

17
00:01:11,850 --> 00:01:16,600
ale moesz teraz doda wicej do kodu front-end i backendu.

18
00:01:17,130 --> 00:01:20,490
I pozwl mi take doda ser tutaj i

19
00:01:21,450 --> 00:01:24,480
oczywicie moesz rwnie ustawi rne wartoci pocztkowe.

20
00:01:24,480 --> 00:01:28,240
Teraz dostajemy ten wze skadnikw, tutaj jest URL do niego.

21
00:01:28,320 --> 00:01:32,510
Musisz doczy. json jednak naprawd ma do

22
00:01:32,610 --> 00:01:39,630
niego dostp, a teraz celem jest zainicjowanie naszych skadnikw przy uyciu skadnikw, ktre wanie przechowywalimy w bazie ogniowej.

23
00:01:39,840 --> 00:01:42,070
Tak wic w komponencie budowniczym hamburgera

24
00:01:42,210 --> 00:01:48,210
chc dynamicznie ustawi stan i nauczye si, e dobrym miejscem do pobierania danych jest componentDidMount Wic

25
00:01:48,760 --> 00:01:51,340
jest to metoda, ktrej chc uy, wic

26
00:01:51,450 --> 00:01:58,990
dodam j tutaj componentDidMount tak i tam I teraz chcesz skontaktowa si z aksiosami Wic uywam osi z prob o pobranie

27
00:01:59,010 --> 00:02:04,740
i docieram do adresu URL, ktry wanie skopiowaem. json na

28
00:02:04,740 --> 00:02:05,480
kocu.

29
00:02:05,910 --> 00:02:12,600
Tak wic teraz wylemy prob o zdobycie naszych skadnikw, a nastpnie dodam, a nastpnie zablokuj, aby

30
00:02:12,600 --> 00:02:18,210
obsuy odpowied, ktr otrzymujemy, i ta odpowied powinna oczywicie zawiera nasz obiekt skadnikw.

31
00:02:18,210 --> 00:02:25,210
Teraz celem jest ustawienie tutaj naszego stanu skadnikw na ten obiekt, wic w

32
00:02:25,230 --> 00:02:31,130
rzeczywistoci ustawi tutaj warto zerow, poniewa teraz pobieramy j z bazy

33
00:02:31,530 --> 00:02:40,680
danych i tam teraz okrel ten stan zestawu i ustawi skadniki rwna si odpowiedzi, a tam

34
00:02:40,680 --> 00:02:45,860
bdzie obiekt danych, ktry faktycznie zawiera dane, ktre pobralimy.

35
00:02:45,960 --> 00:02:53,970
Jeli teraz to zapiszemy i wrcimy do naszej aplikacji, zobaczysz, e dostalimy bd, poniewa teraz, gdy prbujemy szuka naszych skadnikw

36
00:02:53,970 --> 00:03:00,420
na pocztku aplikacji, ktra oczywicie zawiedzie, poniewa pocztkowe skadniki s teraz zerowe, naprawd przynosz to na

37
00:03:00,630 --> 00:03:07,110
pocztku i jest to typowy przypadek uycia w aplikacjach. Dane s pobierane podczas adowania,

38
00:03:07,110 --> 00:03:08,220
wic czci

39
00:03:08,400 --> 00:03:13,490
interfejsu uytkownika, ktre zale od danych, zawiod.

40
00:03:13,830 --> 00:03:21,000
To oczywicie mona atwo zapobiec, sprawdzajc, czy mamy skadniki przed renderowaniem czegokolwiek, co zaley

41
00:03:21,000 --> 00:03:27,420
od skadnikw, takich jak burger tutaj. Teraz moemy na to poradzi na kilka sposobw.

42
00:03:27,630 --> 00:03:29,940
Chc to obsuy tutaj

43
00:03:29,970 --> 00:03:37,140
w moim pojemniku, chc pokaza spinner zamiast burgera i zamiast kontroli budowania, podczas gdy

44
00:03:37,140 --> 00:03:39,240
czekam na zaadowanie skadnikw.

45
00:03:39,240 --> 00:03:49,220
Aby to zrobi, dodam kolejn zmienn, ktr nazwabym burger, a to bdzie burger i kontrola kompilacji,

46
00:03:49,220 --> 00:03:54,270
wic odetn go i przypisz do tej zmiennej.

47
00:03:54,320 --> 00:04:02,720
A teraz, oczywicie, to si nie powiedzie, poniewa mamy ssiednie elementy tutaj w jsx, ktre nie

48
00:04:02,720 --> 00:04:03,350
s

49
00:04:03,350 --> 00:04:11,060
domylnie lubiane, ale moesz albo zwrci tablic, albo uy tutaj naszego pomocniczego komponentu pomocniczego.

50
00:04:11,180 --> 00:04:13,250
Wic zapakuj to, pamitaj, e

51
00:04:13,250 --> 00:04:17,570
nic nie wywietla si na ekranie, wic nie niszczy naszego ukadu.

52
00:04:17,870 --> 00:04:24,220
Ale Burger powinien oczywicie by tak naprawd tylko wtedy, gdy mamy skadniki, wic nadpisam

53
00:04:24,220 --> 00:04:31,500
zmienny burger, ktry ustawi przed tym burgerem, gdzie bd uywa spinnera, a potem chc go tylko

54
00:04:31,500 --> 00:04:37,560
zastpi, jeli ten stan skadniki nie s w zasadzie zerowe. Tak bdzie tylko

55
00:04:37,620 --> 00:04:40,310
w przypadku, gdy zosta zaadowany.

56
00:04:40,350 --> 00:04:46,430
Wic przenie mj kod, w ktrym nadpisuj zmienn burgera wewntrz tej instrukcji if.

57
00:04:46,440 --> 00:04:49,750
Teraz domylnie burger jest po prostu spinnerem.

58
00:04:49,950 --> 00:04:56,460
A teraz mog wyprowadzi go tutaj poniej modalu, wyprowadz burgera z pojedynczymi nawiasami

59
00:04:56,520 --> 00:05:02,280
klamrowymi, jednak napotkamy kolejny problem, podsumowanie zamwie rwnie uyje skadnikw i

60
00:05:02,280 --> 00:05:03,050
dlatego zawodzi.

61
00:05:03,090 --> 00:05:10,510
Powinnimy wic po prostu doda co i ustawi domylnie sum zamwie do wartoci null, a nastpnie

62
00:05:10,890 --> 00:05:16,650
doda t sam kontrol, tak naprawd mamy ju t kontrol oczywicie, gdy

63
00:05:16,710 --> 00:05:21,810
nadpisujemy zmienn podsumowania zamwienia podsumowaniem zamwienia, jeli skadniki s ustawione, wic

64
00:05:21,810 --> 00:05:25,210
dodaj to po tym kodzie burgera tutaj moe.

65
00:05:25,380 --> 00:05:30,380
Tak wic teraz nadpisujemy podsumowanie zlecenia w tym samym owiadczeniu, ktre wymienilimy przed chwil.

66
00:05:30,660 --> 00:05:34,460
Oczywicie chc te upewni si, e to zastpimy.

67
00:05:34,460 --> 00:05:41,880
ponownie, jeli adowanie zostao ustawione. Wic jeli to ststement, w ktrym sprawdzimy skadniki, dodam to

68
00:05:41,880 --> 00:05:47,040
stare stwierdzenie, w ktrym sprawdzamy stan zaadowania, aby nadpisa podsumowanie zamwienia, gdy zajdzie taka potrzeba.

69
00:05:47,040 --> 00:05:52,080
Teraz, kiedy to zapisujemy i wracamy do aplikacji, zobaczye t przdzark przez uamek

70
00:05:52,320 --> 00:05:53,220
sekundy, a

71
00:05:53,340 --> 00:05:59,600
potem moesz ju i i moesz stworzy, e burger, ktry widzisz, jest nadal obsugiwany poprawnie, wic

72
00:05:59,640 --> 00:06:01,110
to wszystko dziaa.

73
00:06:01,140 --> 00:06:06,810
Teraz fajnie jest, jeli idziemy do bazy ogniowej i aktualizujemy nasze skadniki, aby na przykad

74
00:06:07,110 --> 00:06:08,720
zawsze zaczyna od misa.

75
00:06:09,000 --> 00:06:13,850
Moemy po prostu ustawi miso na jeden tutaj i potwierdzi przy pomocy enter, a nastpnie wrci

76
00:06:13,860 --> 00:06:17,920
do naszego burgera, a jeli przeadujemy go, zobaczysz, e zaczynamy ju od jednego

77
00:06:17,940 --> 00:06:19,550
misa, wic jest cakiem fajnie.

78
00:06:19,560 --> 00:06:22,560
Tak wic teraz take cigamy to z backendu,

79
00:06:22,740 --> 00:06:28,770
a teraz naprawd poprawilimy nasz aplikacj i mamy zarwno prob o wpis, jak i prob o pobranie.

80
00:06:28,800 --> 00:06:36,660
Dobrze, e pokazujemy spinnera, ale jeli teraz usuwamy json i wyczamy nasz adres URL,

81
00:06:36,660 --> 00:06:43,920
skd otrzymujemy skadniki, jako przykad, jeli usuwamy to i wracamy, nie dostaniemy modalny

82
00:06:43,950 --> 00:06:46,590
bd, to nie jest fajne.

83
00:06:46,590 --> 00:06:51,140
Dlaczego tego nie otrzymujemy? To moe by trudne

84
00:06:51,290 --> 00:06:57,350
do wykrycia, poniewa w rzeczywistoci mona je znale w naszej funkcji zErrorHandler,

85
00:06:57,350 --> 00:06:58,030
konfigurujemy

86
00:06:58,060 --> 00:07:06,020
nasze przechwytujce w hakcie componentDidMount i zadziaao doskonale dla dania postu, ale pomyl o tym

87
00:07:06,020 --> 00:07:07,350
schemacie cyklu ycia.

88
00:07:07,610 --> 00:07:14,570
W tym miejscu parametr componentDidMount jest wywoywany po wykonaniu wszystkich komponentw podrzdnych,

89
00:07:14,570 --> 00:07:19,960
co oznacza, e w komponentach podrzdnych zosta zakoczony element componentDidMount.

90
00:07:19,970 --> 00:07:24,590
Teraz pomyl o naszym zErrorHandler. Tutaj pakujemy ten zapakowany

91
00:07:24,590 --> 00:07:30,180
komponent, ktry jest naszym kontenerem do budowania burgerw, na przykad

92
00:07:30,260 --> 00:07:33,920
dlatego, e uywamy zErrorHandler podczas eksportowania.

93
00:07:34,130 --> 00:07:40,250
Wic zasadniczo zawijamy konstruktora burgera i oczywicie mamy jedn implikacj, componentDidMount

94
00:07:40,250 --> 00:07:47,960
w module withErrorHandler bdzie wywoywane tylko wtedy, gdy wywoano tutaj componentDidMount, a poniewa

95
00:07:47,960 --> 00:07:54,800
docieramy do sieci w componentDidMount skadnika wrap, nigdy nie ustawilimy naszego przechwytujce.

96
00:07:54,830 --> 00:07:58,950
Poprawka jest prosta, uywamy componentWillMount, THIS zostanie wywoany

97
00:07:59,090 --> 00:08:05,020
zanim komponenty potomne zostan wyrenderowane i nie wywoujemy efektw ubocznych tutaj.

98
00:08:05,120 --> 00:08:11,420
Wanie rejestrujemy przechwytywacze i chcemy to zrobi przed wyrenderowaniem komponentw potomnych.

99
00:08:11,420 --> 00:08:18,530
Teraz, jeli to zapiszemy i ponownie zaadujemy aplikacj, otrzymamy ten bd modalny, ale wtedy

100
00:08:18,530 --> 00:08:23,360
dostaniemy kolejny bd, ktry uniemoliwia nam ustawienie naszego stanu.

101
00:08:23,420 --> 00:08:30,680
Powodem tego jest to, e w blok zostaje wykonany w naszym budowniczym burgeru, mimo e

102
00:08:30,680 --> 00:08:31,750
mamy bd.

103
00:08:32,090 --> 00:08:38,630
Powodem tego jest po prostu to, e nie mamy tutaj metody catch w

104
00:08:38,630 --> 00:08:39,850
componentDidMount konstruktora burgera.

105
00:08:40,250 --> 00:08:47,570
Jeli zapiemy tam bd i po prostu na nim nic nie zrobimy, to

106
00:08:47,570 --> 00:08:53,960
ju go nie dostaniemy, poniewa teraz nie wywoujemy ju tego dziennika.

107
00:08:53,960 --> 00:08:58,480
Wci moemy odrzuci bd sieci i nasza aplikacja jest

108
00:08:58,520 --> 00:09:06,730
teraz uszkodzona, wic prawdopodobnie bdziemy chcieli obsuy ten konkretny przypadek bdu dla tej konkretnej strony, na przykad

109
00:09:06,740 --> 00:09:08,890
rwnie ustawiajc tutaj interfejs uytkownika.

110
00:09:09,050 --> 00:09:13,740
Tak wic moemy ustawi pewien stan bdu.

111
00:09:13,790 --> 00:09:22,830
Tak wic teraz w budowniczym hamburgerw, ktry moe mie warto zerow pocztkowo lub faszyw, a potem w rodku,

112
00:09:22,890 --> 00:09:29,410
jeli otrzymamy bd, jeli go zapiemy, wywoujemy stan zestawu i ustawiamy bd na

113
00:09:29,550 --> 00:09:30,490
True.

114
00:09:30,830 --> 00:09:35,880
Teraz moemy przej do metody renderowania i chcemy wypisa komunikat o bdzie dla tego przypadku,

115
00:09:35,880 --> 00:09:38,480
w ktrym nasza aplikacja staje si bezuyteczna, tutaj

116
00:09:38,490 --> 00:09:40,200
ustawiamy burger na spinner.

117
00:09:40,200 --> 00:09:45,650
Teraz waciwie nie chcemy pokazywa spinnera, ale nasza aplikacja nie jest w

118
00:09:45,750 --> 00:09:50,520
ogle uyteczna, komunikat o bdzie, jeli mamy bd rwny true.

119
00:09:50,700 --> 00:09:56,640
Tak wic moemy sprawdzi, czy ten bd stanu lub jeli jest to prawda i rzeczywicie chcemy

120
00:09:56,640 --> 00:10:00,800
pokaza akapit, w ktrym mwimy, e skadniki nie mog by zaadowane,

121
00:10:01,070 --> 00:10:03,140
jest to nasz najgorszy scenariusz.

122
00:10:03,180 --> 00:10:07,360
W przeciwnym razie pokazujemy spinnerowi lub nadpisujemy go skadnikami, jeli je mamy.

123
00:10:07,410 --> 00:10:11,640
Jeli teraz to zrobimy, otrzymamy spinner, a nastpnie zobaczymy, e skadniki mog zosta zaadowane.

124
00:10:11,640 --> 00:10:15,000
Teraz nasza aplikacja jest zepsuta, ale przynajmniej pokazujemy j uytkownikowi.

125
00:10:15,120 --> 00:10:20,840
Oczywicie, gdy naprawimy ten link, dodajc. json na kocu znowu teraz

126
00:10:20,850 --> 00:10:23,760
oczywicie skadniki zaaduj si, jak wida

127
00:10:23,970 --> 00:10:29,260
tutaj widzimy spinner na uamek sekundy, skadniki s tam i

128
00:10:29,260 --> 00:10:32,360
moemy nadal uywa naszej aplikacji dobrze.

129
00:10:32,460 --> 00:10:34,320
Teraz wszystko dziaa.

130
00:10:34,320 --> 00:10:40,290
Teraz otrzymujemy naprawd solidn aplikacj, w ktrej przechowujemy zarwno zamwienia, jak i treci.

131
00:10:40,290 --> 00:10:46,930
Teraz oczywicie moemy rwnie zaimplementowa kod do pobierania zamwie z naszej bazy danych z naszego backendu tutaj.

132
00:10:46,950 --> 00:10:53,430
To jest co, nad czym chcemy pracowa, aby nastpna rutowanie byo w stanie przecza strony, chocia technicznie mamy

133
00:10:53,700 --> 00:10:56,910
tylko jedn stron w tej aplikacji na jedn stron.

