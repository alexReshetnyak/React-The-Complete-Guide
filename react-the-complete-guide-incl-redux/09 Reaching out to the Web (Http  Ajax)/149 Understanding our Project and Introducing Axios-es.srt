1
00:00:02,100 --> 00:00:07,220
Adjunto a esta conferencia aqu encontrars el proyecto inicial que puedes ver aqu.

2
00:00:07,250 --> 00:00:16,250
Lo comenc con NPM start, usa crear el proyecto Riak que hice y edit para usar mdulos CSSA en lugar de

3
00:00:16,250 --> 00:00:20,920
solo importar CSA como archivos para que afecten el proyecto globalmente.

4
00:00:21,020 --> 00:00:23,360
Pero eso no plantea un problema aqu.

5
00:00:23,630 --> 00:00:28,220
Y obtuve un par de contenedores o un contenedor y un par de componentes.

6
00:00:28,220 --> 00:00:33,530
Como puede ver en el ejemplo del componente de publicacin completo aqu que es responsable de

7
00:00:33,530 --> 00:00:40,160
representar esta parte aqu, incluso tengo componentes basados en clases como componentes porque planeo agregar algunos ganchos de estado

8
00:00:40,160 --> 00:00:45,940
local y algunos de ciclo de vida a estos componentes, por eso configuro ellos de esta manera.

9
00:00:45,950 --> 00:00:52,100
An as, solo tengo un componente que distribuir algunas propiedades a los componentes de Obert.

10
00:00:52,130 --> 00:00:58,730
Esta es la pgina raz que podra decir que debera mostrar algunas publicaciones en la parte superior y luego una publicacin completa con

11
00:00:58,730 --> 00:01:04,730
algunos detalles sobre cmo se hace clic en una publicacin y el rea para crear una nueva publicacin. Aqu puede

12
00:01:04,730 --> 00:01:06,790
ver todas estas caractersticas en esa pgina.

13
00:01:06,800 --> 00:01:13,230
Ahora tengo un contenido ficticio aqu porque quiero cargar los datos de la publicacin de un servidor.

14
00:01:13,370 --> 00:01:16,230
Y para eso no vamos a usar un servidor real.

15
00:01:16,310 --> 00:01:22,930
Aunque lo haremos en el prximo mdulo cuando apliquemos algunas funciones de HTP a nuestro proyecto de curso.

16
00:01:23,180 --> 00:01:31,070
buscar algo datos ficticios o para simular el almacenamiento de datos a veces, aunque en realidad no almacenar algo sobre eso.

17
00:01:31,220 --> 00:01:37,070
Pero aqu usar un marcador de posicin que puedes encontrar en J algn cdigo de punto

18
00:01:37,070 --> 00:01:44,350
tipo punto com punto com que simplemente es un back-end API relajante que normalmente utilizas como expliqu en la ltima

19
00:01:44,390 --> 00:01:47,510
conferencia en la que puedes enviar solicitudes para

20
00:01:47,510 --> 00:01:53,510
Por supuesto, solo est falsificando algunos datos, pero exactamente lo que necesitamos para aprender a enviar la edad

21
00:01:53,510 --> 00:01:54,730
para repetir las solicitudes.

22
00:01:54,770 --> 00:02:02,030
Por ejemplo, puede enviar una solicitud a su padre antes de una solicitud GET y obtendr una matriz

23
00:02:02,060 --> 00:02:04,220
de objetos JavaScript de publicaciones ficticias.

24
00:02:04,220 --> 00:02:06,730
Y esto realmente es con lo que quiero comenzar.

25
00:02:06,800 --> 00:02:10,010
As que comenzaremos con eso en la prxima conferencia.

26
00:02:10,040 --> 00:02:15,280
Pero, por supuesto, necesitamos alguna forma de enviar solicitudes DS Ajax.

27
00:02:15,470 --> 00:02:18,870
Y aqu tienes bsicamente dos opciones.

28
00:02:19,250 --> 00:02:25,040
Javascript por supuesto tiene el Exham l h al objeto de solicitud.

29
00:02:25,130 --> 00:02:32,010
Con este objeto aqu puedes construir tus propias solicitudes de Ajax y enviarlas a tu L especfica

30
00:02:32,050 --> 00:02:33,890
y manejar la respuesta.

31
00:02:33,890 --> 00:02:39,330
No hay nada malo con los muertos, ya que volver a actuar es simplemente escribir javascript en todas partes.

32
00:02:39,350 --> 00:02:46,640
Por supuesto, puede utilizar todas las funciones de javascript, incluido Exham L. H. con ese objeto manualmente es bastante engorrosa.

33
00:02:46,640 --> 00:02:50,400
La solicitud de TDP pero la escritura y la configuracin de solicitudes

34
00:02:50,630 --> 00:02:57,560
Entonces, la segunda opcin es usar el paquete de una biblioteca de terceros que lo haga ms fcil.

35
00:02:57,710 --> 00:03:04,130
Y para eso, recomiendo usar X aos x aos como una biblioteca javascript de terceros que puede agregar

36
00:03:04,160 --> 00:03:06,170
a cualquier proyecto de javascript.

37
00:03:06,170 --> 00:03:08,850
No est conectado para reaccionar en absoluto.

38
00:03:08,990 --> 00:03:15,890
Pero, por supuesto, se adapta muy bien a la CE, ya que est bien javascript y DXi es la pgina aqu en obtener es un

39
00:03:15,980 --> 00:03:18,970
buen punto de partida para obtener ms informacin sobre el paquete.

40
00:03:19,010 --> 00:03:23,300
Sin embargo, lo guiar por algunas de sus caractersticas principales en este mdulo.

41
00:03:23,330 --> 00:03:29,720
Pero de nuevo, esto no es algo que me conecte fuertemente para reaccionar ex-U. S. se puede usar en cualquier cdigo de javascript.

42
00:03:29,720 --> 00:03:36,710
Instalemos X-ists en esta conferencia y luego comencemos a utilizarla en la prxima conferencia para

43
00:03:36,710 --> 00:03:37,480
instalar X.

44
00:03:37,470 --> 00:03:44,750
S, acelerar mi servidor de desarrollo con el control C y luego ejecutar la instalacin de NPM ex-U. S. dash dash guardar en toda

45
00:03:44,750 --> 00:03:48,640
la tienda e ingresar el paquete del archivo adyacente.

46
00:03:48,650 --> 00:03:54,200
Esto descargar y almacenar el paquete y con eso podemos comenzar a utilizarlo en la prxima conferencia

47
00:03:54,200 --> 00:04:01,580
para buscar algunas publicaciones para que reiniciemos el servidor de desarrollo con el inicio de NPM y luego en la prxima conferencia

48
00:04:01,940 --> 00:04:04,460
para descargar algunas publicaciones y enviarlas all.

