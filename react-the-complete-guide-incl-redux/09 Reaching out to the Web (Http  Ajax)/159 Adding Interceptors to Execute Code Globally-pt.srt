1
00:00:02,290 --> 00:00:09,130
Manipular erros localmente nos componentes faz muito sentido porque voc provavelmente quer fazer coisas diferentes

2
00:00:09,130 --> 00:00:12,900
com erros dependendo do componente em que voc estiver.

3
00:00:12,910 --> 00:00:17,410
Talvez aqui voc queira mostrar que algo deu errado e um componente integral que voc quer mostrar

4
00:00:17,410 --> 00:00:17,980
algo diferente.

5
00:00:18,070 --> 00:00:22,650
Mas s vezes, em alguns lugares, talvez voc queira executar algum cdigo globalmente.

6
00:00:22,660 --> 00:00:31,480
Portanto, no importa qual pedido HTP voc envie de dentro do componente que voc deseja fazer algo quando esse

7
00:00:31,480 --> 00:00:35,950
pedido for enviado e ou quando a resposta retornar.

8
00:00:36,370 --> 00:00:41,190
Voc pode faz-lo com X anos com a ajuda dos chamados setores de interesse.

9
00:00:41,200 --> 00:00:47,470
Estas so funes que voc pode definir globalmente, o que ser executado para cada pedido, deixando seu

10
00:00:47,650 --> 00:00:50,370
aplicativo e cada resposta retornando a ele.

11
00:00:50,380 --> 00:00:56,830
 especialmente til, por exemplo, para definir alguns cabealhos comuns, como a oferta de sation head

12
00:00:57,220 --> 00:00:58,980
ou talvez ou para respostas.

13
00:00:58,990 --> 00:01:06,670
Se quiser registrar respostas ou 1 para lidar com erros globalmente, mostrar-lhe-ei como adicionar

14
00:01:06,670 --> 00:01:08,400
interceptores nesta palestra.

15
00:01:08,410 --> 00:01:14,200
Vamos ao prximo arquivo genius porque este  o arquivo mais global, temos um aplicativo de reao de uma hora.

16
00:01:14,260 --> 00:01:19,740
 um arquivo profundo onde realmente comeamos a reagir, montando-o no incio.

17
00:01:19,780 --> 00:01:28,000
Ento, agora, eu tambm quero importar x anos do pacote Xs e todas essas importaes X

18
00:01:28,000 --> 00:01:31,060
ano realmente compartilham a mesma configurao.

19
00:01:31,120 --> 00:01:37,600
Ento,  por isso que no podemos usar o acesso aqui, um X  um objeto de setter de interesse especial.

20
00:01:37,660 --> 00:01:43,300
E novamente isso ser compartilhado no apenas neste arquivo, mas em todos os arquivos em seu projeto.

21
00:01:43,300 --> 00:01:47,130
Por isso, afetar todas as solicitaes ditas de qualquer lugar em seu aplicativo.

22
00:01:47,560 --> 00:01:55,790
L, podemos acessar o objeto de solicitao e agora simplesmente adicionar uso para registrar um novo interceptor que interessa

23
00:01:55,790 --> 00:02:03,540
Sadr assume uma funo como entrada que recebe o conflito ou o pedido que voc poderia dizer.

24
00:02:03,670 --> 00:02:10,330
Agora, simplesmente bloqueie esse pedido para ser cancelado por enquanto, para que possamos ver o que est dentro dele.

25
00:02:10,330 --> 00:02:15,770
Estou chamando de solicitao, mas principalmente  apenas para solicitar um conflito que  importante ter em mente.

26
00:02:15,820 --> 00:02:17,340
Agora vamos salvar isso.

27
00:02:17,740 --> 00:02:21,020
E se voltarmos para o aplicativo, podemos ver algo no log.

28
00:02:21,090 --> 00:02:28,450
A solicitao do ISDE foi enviada para a configurao do pedido, pelo menos voc v os cabealhos que so adicionados

29
00:02:28,780 --> 00:02:29,280
e.

30
00:02:29,350 --> 00:02:29,760
Sim.

31
00:02:29,800 --> 00:02:31,580
Este  o nosso pedido.

32
00:02:31,660 --> 00:02:35,070
Isto  o que recebemos aqui quando recebemos as postagens.

33
00:02:35,320 --> 00:02:41,300
Agora, algo correu mal aqui, porque ns realmente estamos bloqueando seus pedidos agora.

34
00:02:41,590 --> 00:02:50,520
Na sua funo de setter de interesse, voc precisa sempre retornar a solicitao ou a solicitao.

35
00:02:50,830 --> 00:02:53,260
Caso contrrio, voc est bloqueando o pedido.

36
00:02:53,260 --> 00:02:58,360
Agora, claro, voc tambm pode editar o conflito de solicitao antes de devolv-lo.

37
00:02:58,360 --> 00:03:00,230
Essa  a idia por trs do interceptor.

38
00:03:00,310 --> 00:03:03,260
Voc pode adicionar cabealhos fazer coisas assim.

39
00:03:03,610 --> 00:03:09,360
Ento, agora, se salvarmos isso, recebemos as postagens e, se eu clicar em uma, voc ver um bloqueio de nmero porque a

40
00:03:09,370 --> 00:03:11,410
solicitao de nmero foi enviada e quatro mortos.

41
00:03:11,410 --> 00:03:15,690
O interceptor tambm correu apesar de ter sido disparado de um componente diferente.

42
00:03:15,760 --> 00:03:21,580
Como disse todos os componentes, todas as reas da Europa esto cobertas por isso.

43
00:03:22,180 --> 00:03:24,480
Agora, para interceptores mortos aqui.

44
00:03:24,640 --> 00:03:31,210
Tambm podemos passar uma segunda funo alm da funo de alterao da configurao do pedido.

45
00:03:31,210 --> 00:03:35,150
Podemos adicionar uma funo que lida com quaisquer erros.

46
00:03:35,260 --> 00:03:40,060
Ento, aqui podemos registrar um erro como esse.

47
00:03:40,090 --> 00:03:47,860
novamente, com o mtodo catch, faz sentido se voc tiver alguma tarefa local que voc deseja fazer, como show algo na interface do usurio, mas

48
00:03:47,860 --> 00:03:53,590
tambm globalmente voc deseja registr-lo no arquivo de log que voc envia para um servidor ou algo assim.

49
00:03:53,590 --> 00:04:00,340
Ns devemos tambm retornar o erro de rejeio da promessa aqui, porm, para que ainda o encaminhemos para o nosso pedido,

50
00:04:00,340 --> 00:04:04,040
conforme voc o escreveu em um componente onde podemos lidar com isso

51
00:04:04,450 --> 00:04:05,930
Ento, vamos ver como isso funciona.

52
00:04:05,950 --> 00:04:13,510
Se eu agora salvar esse arquivo e agora virar minhas postagens minhas postagens, voc no ter validade novamente.

53
00:04:15,200 --> 00:04:21,410
Agora voc v algo errado aqui, mas voc realmente no v os custos muito do manipulador

54
00:04:21,410 --> 00:04:23,020
de erros do interceptor.

55
00:04:23,090 --> 00:04:28,390
A razo para isso  que este airier est relacionado ao envio da solicitao.

56
00:04:28,430 --> 00:04:32,900
Por exemplo, se voc no tivesse conectividade com a Internet ou algo assim, deveria aparecer.

57
00:04:33,080 --> 00:04:40,670
Ento, se voc solicitar o envio de Fales, tambm podemos adicionar um interceptor para lidar com respostas, porm ns fazemos da mesma maneira

58
00:04:40,670 --> 00:04:46,190
que voc faz para a solicitao, mas usamos o objeto de resposta no objeto de interceptores.

59
00:04:46,190 --> 00:04:52,470
Ento, tambm usamos duas funes aqui uma funo e eu estou copiando isso de cima.

60
00:04:52,670 --> 00:05:00,250
Uma funo que receber a resposta de sucesso tambm podemos log-lo aqui e devemos

61
00:05:00,350 --> 00:05:05,370
devolv-lo para que todos possamos us-lo no componente no bloco.

62
00:05:05,450 --> 00:05:11,390
Ento,  uma maneira de devolv-lo e todos buscamos erros e tambm devemos verific-los aqui

63
00:05:11,600 --> 00:05:16,760
para que ainda possamos manipul-los no bloco de captura localmente em um componente.

64
00:05:16,790 --> 00:05:23,150
papai acrescentou com essa resposta e disse ou adicionou e a funo de erro est presente agora, voltamos.

65
00:05:23,150 --> 00:05:23,930
Agora, se

66
00:05:23,930 --> 00:05:28,330
Ns realmente vemos o log aqui e ainda o mantem localmente.

67
00:05:28,730 --> 00:05:30,790
Ento, ambos funcionam.

68
00:05:30,800 --> 00:05:33,760
Se eu agora vou para o recipiente do bloco e vire o meu.

69
00:05:33,760 --> 00:05:36,170
Voc  levado a um vlido voc est doente novamente.

70
00:05:36,380 --> 00:05:39,350
Vemos apenas um bloqueio para a resposta.

71
00:05:39,350 --> 00:05:43,460
Ento, isso vem do interceptor como voc pode dizer pelo nome do arquivo e nmero da linha.

72
00:05:43,730 --> 00:05:52,160
 outra maneira de potencialmente manipular essa resposta aqui ou registr-la ou fazer o que quiser.

73
00:05:52,160 --> 00:05:53,260
E esta

74
00:05:53,360 --> 00:05:57,740
Portanto, ser capaz de definir interceptores Deis pode ser bastante poderoso.

75
00:05:57,770 --> 00:06:04,640
Mais uma vez, um caso de uso muito comum  que o interceptor de solicitao adicione alguns cabealhos comuns.

76
00:06:04,640 --> 00:06:13,970
Por exemplo, um cabealho de autorizao, ns tambm temos uma maneira diferente de acessar a configurao de acesso global.

77
00:06:13,970 --> 00:06:16,580
Vou mostrar-lhe como isso funciona na prxima foto.

