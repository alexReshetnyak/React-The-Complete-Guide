1
00:00:02,080 --> 00:00:06,510
As que en las ltimas conferencias te muestro mucho cmo puedes obtener datos.

2
00:00:06,520 --> 00:00:12,450
Ahora, por supuesto, tambin quiero mostrarle cmo puede publicar datos en un servidor y para Debbie obtener el anuncio en

3
00:00:12,510 --> 00:00:15,290
un rea de publicacin aqu en la parte inferior.

4
00:00:15,370 --> 00:00:21,070
Es administrado por el nuevo componente de publicacin, que es un componente de clase que administra su propio estado

5
00:00:21,340 --> 00:00:27,020
y, por lo tanto, es un contenedor porque no estamos transfiriendo ni distribuyendo el estado a ningn otro componente.

6
00:00:27,100 --> 00:00:33,230
Y ahora quiero conectar este botn de publicacin de anuncios para enviar esencialmente una solicitud POST a nuestro servidor de

7
00:00:33,740 --> 00:00:34,640
Dammy para esto.

8
00:00:34,660 --> 00:00:42,290
En primer lugar, agregue Meffert el controlador de datos de publicacin o el controlador de publicacin posterior si desea hacerlo.

9
00:00:42,300 --> 00:00:45,330
Y luego, por supuesto, necesito usar x s.

10
00:00:45,340 --> 00:00:53,260
Ahora, en primer lugar, esperemos que este mtodo se agregue al oyente de clic que hay aqu despus de la fecha

11
00:00:53,270 --> 00:00:54,330
de un controlador.

12
00:00:54,670 --> 00:01:00,180
Y ahora vamos a importar aos para poder enviar una solicitud posterior.

13
00:01:00,550 --> 00:01:02,290
Ahora diga pensar en solicitudes de publicaciones.

14
00:01:02,310 --> 00:01:04,180
Sigue usando el objeto de ejes.

15
00:01:04,320 --> 00:01:08,440
Pero ahora, por supuesto, no el mtodo get, sino el mtodo post.

16
00:01:08,700 --> 00:01:15,360
podemos usar la misma o si no la usamos para la solicitud de obtencin, tambin acepta solicitudes de publicacin.

17
00:01:15,480 --> 00:01:21,090
La publicacin si todava toma una URL como entrada y para nuestra parte posterior ficticia simplemente

18
00:01:21,120 --> 00:01:27,390
Ahora que una solicitud posterior necesita ms de lo que necesita, necesita un segundo argumento, que es

19
00:01:27,390 --> 00:01:32,850
la informacin que queremos enviar, porque obviamente una solicitud posterior sin datos tiene mucho sentido.

20
00:01:32,850 --> 00:01:39,930
Los datos que deseo enviar son un objeto javascript que contiene el cuerpo del ttulo y una oferta de una publicacin.

21
00:01:39,930 --> 00:01:45,900
As que crear una nueva constante que debera ser un objeto javascript y all se configurar un ttulo

22
00:01:46,140 --> 00:01:47,940
para este ttulo de estado.

23
00:01:48,020 --> 00:01:55,290
Establecer el cuerpo a este contenido de estado y, por supuesto, puede elegir las propiedades que

24
00:01:55,290 --> 00:02:00,980
desee para ese objeto y establecer la oferta a este estado de oferta.

25
00:02:00,990 --> 00:02:02,450
Nuevamente puedes agregar ms.

26
00:02:02,520 --> 00:02:06,500
Puede expandir este formulario aqu al final del curso.

27
00:02:06,660 --> 00:02:13,230
Entonces voy a decir que publicar esta constante su segundo argumento para el mtodo de publicacin.

28
00:02:13,470 --> 00:02:18,840
Y, por supuesto, esto solo se llama publicacin porque lo que vuelve a enviar son algunos datos acerca de una publicacin que puede

29
00:02:18,840 --> 00:02:20,080
nombrar, hace lo que quiera.

30
00:02:20,100 --> 00:02:22,360
Tambin puede nombrar como datos.

31
00:02:22,860 --> 00:02:27,120
Ahora tambin puede pasar un tercer argumento para configurar esta solicitud, pero no necesitamos eso.

32
00:02:27,120 --> 00:02:29,500
Eres importante para nosotros

33
00:02:29,550 --> 00:02:35,460
Esto, por supuesto, es un objeto javascript, pero Access bsicamente enloquecer a los luchadores para que nos

34
00:02:35,460 --> 00:02:37,160
convierta en datos de Jason.

35
00:02:37,170 --> 00:02:43,200
Lo har por nosotros al igual que extrae los datos adyacentes y tambin recibe solicitudes para nosotros.

36
00:02:43,680 --> 00:02:46,820
Y ahora, por supuesto, todo se ejecuta de forma asncrona.

37
00:02:46,860 --> 00:02:54,210
Podemos escuchar la respuesta al igual que podemos hacerlo para obtener solicitudes y podemos presentarla a la

38
00:02:54,210 --> 00:02:55,290
consola aqu.

39
00:02:55,290 --> 00:02:56,480
Ahora probemos esto.

40
00:02:56,480 --> 00:02:57,680
Vamos a guardar esto.

41
00:02:57,900 --> 00:03:03,570
Vamos a abrir la consola y vamos a ingresar algunos contenidos aqu.

42
00:03:03,580 --> 00:03:09,670
Algn contenido de prueba puede cambiar su oferta al men y acceder a la publicacin de anuncios?

43
00:03:10,020 --> 00:03:18,000
Y aqu est el texto de estado de respuesta 201 que indica que fue exitoso y ahora que el muerto regresa aqu

44
00:03:18,000 --> 00:03:24,540
no almacenar los datos, por supuesto, solo devuelve los datos en la respuesta para que podamos ver que

45
00:03:24,540 --> 00:03:27,880
lo enviamos con xito y se ve como lo hicimos.

46
00:03:27,910 --> 00:03:28,620
Hace esto hasta la fecha.

47
00:03:28,620 --> 00:03:32,640
S enviamos nuevamente para un servidor real, por supuesto, para su propio servidor.

48
00:03:32,640 --> 00:03:38,430
Probablemente tengas algo de lgica en el servidor para dentales. El almacenado est en la base de datos.

49
00:03:38,430 --> 00:03:44,250
As es como podemos publicar datos que son todo lo que hacemos, simplemente intercambiando la palabra aqu el nombre

50
00:03:44,250 --> 00:03:47,460
del mtodo y pasando los datos como un segundo argumento.

51
00:03:47,610 --> 00:03:50,350
Y ahora tambin podemos enviar datos a los servidores.

