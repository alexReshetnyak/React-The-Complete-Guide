1
00:00:02,030 --> 00:00:08,340
Na ltima palestra, eu o guiei do projeto usar e por X anos o pacote que

2
00:00:08,460 --> 00:00:11,970
eu recomendo para fazer solicitaes HTP e reativar aplicativos.

3
00:00:12,000 --> 00:00:14,510
No vamos fazer tal pedido HTP.

4
00:00:14,730 --> 00:00:20,960
E para aquele manequim de volta e estamos usando, eu j mostrei que voc est pronto para enviar

5
00:00:21,130 --> 00:00:23,700
o pedido para obter uma srie de postagens.

6
00:00:23,700 --> 00:00:27,990
Agora eu quero renderizar esse conjunto de postagens no meu bloco de continer.

7
00:00:28,180 --> 00:00:30,930
L, eu tenho componentes de postagem individuais.

8
00:00:30,930 --> 00:00:37,410
ser gerados dinamicamente lista de publicaes uma lista de postagens que buscamos de um servidor para ser preciso.

9
00:00:37,410 --> 00:00:39,230
E, claro, os dados devem

10
00:00:39,240 --> 00:00:47,820
Agora, onde fazemos essa solicitao de HTP, ento vamos ver os slides do ciclo de vida novamente para o pai.

11
00:00:47,850 --> 00:00:51,180
Talvez encontremos um gancho apropriado para o ciclo de vida.

12
00:00:51,240 --> 00:00:56,250
Se tivermos uma olhada no Hooke do ciclo de vida, encontramos o uso da criao de componentes.

13
00:00:56,250 --> 00:00:59,660
H um ciclo de vida que devemos usar para efeitos colaterais.

14
00:00:59,700 --> 00:01:04,520
Componente montou e a solicitao HGP  um efeito colateral.

15
00:01:04,590 --> 00:01:11,520
o efeito colateral de buscar novos dados e, se o seu aplicativo de reator estiver produzindo dinamicamente alguns

16
00:01:11,530 --> 00:01:18,230
dados, provavelmente  a mudana de dados,  claro,  um efeito colateral que afeta seu aplicativo .

17
00:01:18,270 --> 00:01:22,670
Isso no afeta sua lgica de reagem ou algo parecido, mas tem

18
00:01:23,010 --> 00:01:29,560
Ento, o componente fez o MT um timo lugar para causar efeitos secundrios, mas no para atualizar o estado, pois

19
00:01:29,560 --> 00:01:30,770
desencadeia o re render.

20
00:01:31,020 --> 00:01:37,560
Ns ainda atualizaremos o estado aqui, uma vez que o pedido do HTP para o Stallin nos trouxe dados novos

21
00:01:37,560 --> 00:01:39,480
porque realmente queremos atualizar a pgina.

22
00:01:39,480 --> 00:01:46,640
Ento, aqui,  realmente um comportamento desejado, ento o componente fez MT o melhor lugar para enviar a solicitao HTP.

23
00:01:46,740 --> 00:01:53,790
Ento, no recipiente de bloco, vamos implementar o componente e montar e agora precisamos acessar a solicitao enviada.

24
00:01:53,880 --> 00:01:57,460
Ento vou importar axiomas do pacote real.

25
00:01:57,680 --> 00:02:05,640
E agora podemos us-lo aqui no componente no Mt X anos, oferece um mtodo para enviar voc

26
00:02:05,820 --> 00:02:07,900
adivinhou que ele obteve pedidos.

27
00:02:07,920 --> 00:02:10,540
Esse mtodo precisa de pelo menos um argumento.

28
00:02:10,580 --> 00:02:14,120
D Voc  o nico para enviar este pedido.

29
00:02:14,170 --> 00:02:20,870
Ento, aqui est voc, copiei da pgina do espao reservado com as postagens Slash no final.

30
00:02:20,880 --> 00:02:26,700
Agora voc tambm pode passar um segundo argumento para configurar esta solicitao e voc pode aprender mais sobre todas as opes

31
00:02:26,700 --> 00:02:28,520
de configurao e assim por diante.

32
00:02:28,590 --> 00:02:33,000
Sobre isso, os discursos de pgina inicialmente no so principalmente sobre Xs.

33
00:02:33,060 --> 00:02:39,170
Ento eu no vou caminhar para toda a configurao que possivelmente possamos adicionar aqui, mas esta pgina  um excelente ponto de partida.

34
00:02:39,180 --> 00:02:43,880
Ainda estamos prestes a ver algumas das coisas que voc pode fazer com o X para fora deste mdulo.

35
00:02:44,220 --> 00:02:47,130
Aqui, no entanto, no preciso de nenhuma configurao especfica.

36
00:02:47,130 --> 00:02:51,310
Eu s quero enviar a vanilla normal recebe pedidos para isso ou ento.

37
00:02:51,750 --> 00:02:59,430
 claro que isso deve retornar algumas postagens, mas tentar armazen-las em uma constante de postagem

38
00:02:59,430 --> 00:03:05,110
no funcionar,  claro, que a solicitao acontece de maneira assncrona.

39
00:03:05,310 --> 00:03:07,050
No termina imediatamente.

40
00:03:07,080 --> 00:03:10,710
Precisa de algum tempo para ir ao servidor e obter os dados.

41
00:03:11,220 --> 00:03:15,510
Javascript, embora execute seu cdigo de forma sncrona.

42
00:03:15,570 --> 00:03:22,440
Ento, depois desta linha, a prxima linha  executada imediatamente, ela no vai pausar at que este seja concludo, ento no

43
00:03:22,440 --> 00:03:25,550
ir armazenar as postagens e as postagens constantes aqui.

44
00:03:25,830 --> 00:03:33,210
Este  o comportamento desejado porque no queremos bloquear a execuo do nosso aplicativo apenas porque esperamos

45
00:03:33,210 --> 00:03:35,400
que este pedido seja concludo.

46
00:03:35,790 --> 00:03:36,820
X sim.

47
00:03:36,810 --> 00:03:42,600
Portanto, usa promessas um objeto javascript padro introduzido com o ESX.

48
00:03:42,690 --> 00:03:46,330
E graas ao nosso fluxo de trabalho que estamos usando com o create reag.

49
00:03:46,590 --> 00:03:52,950
Tambm disponvel em navegadores mais antigos, uma vez que o cdigo  compilado para codificar, o que tambm funciona

50
00:03:53,610 --> 00:04:01,620
em navegadores mais antigos, de modo que o Access usa promessas e obtenha retornos uma promessa para que possamos mudar ento, ento  simplesmente

51
00:04:01,620 --> 00:04:08,640
um mtodo que leva uma funo de entrada SD e esta funo ir obter executado uma vez que a promessa resolva.

52
00:04:08,700 --> 00:04:16,170
Assim, uma vez que os dados da parte de trs esto l, podemos dizer que a funo recebe um objeto de resposta

53
00:04:16,200 --> 00:04:17,340
como uma entrada.

54
00:04:17,340 --> 00:04:23,850
Isso passar para a funo automaticamente por X-ists e, por enquanto, simplesmente imprima no console

55
00:04:23,850 --> 00:04:27,560
para que possamos ver o que est dentro dele.

56
00:04:27,570 --> 00:04:34,320
ao aplicativo de reao e recarregar a pgina e imediatamente veremos esse objeto estar sendo impresso no console.

57
00:04:34,320 --> 00:04:36,820
Eu salvarei este cdigo para voltar

58
00:04:36,900 --> 00:04:43,860
Se expandimos, veremos o cdigo de status aqui e todas essas propriedades aqui so apenas propriedades fornecidas

59
00:04:43,860 --> 00:04:45,480
pelo pacote de acesso.

60
00:04:45,480 --> 00:04:48,820
Ento conseguimos o status quo 200 Ento, foi bem sucedido.

61
00:04:48,840 --> 00:04:53,900
Ns vemos o pedido que foi enviado, vemos os cabealhos de resposta e importantes para ns.

62
00:04:53,940 --> 00:04:58,240
Temos o objeto de dados que contm os dados retornados do servidor.

63
00:04:58,260 --> 00:05:05,780
Ns enviamos o pedido para e para este servio de espao reservado,  simplesmente uma srie de

64
00:05:05,810 --> 00:05:09,560
objetos javascript onde cada objeto deve representar uma postagem.

65
00:05:09,830 --> 00:05:15,540
Como voc pode ver, temos um ttulo de um corpo e um D e uma propriedade de identificao de usurio.

66
00:05:15,560 --> 00:05:21,380
Agora, podemos trabalhar com esses dados e, claro, um para trabalhar com ele para torn-lo dinamicamente

67
00:05:21,380 --> 00:05:27,020
para a tela aqui e exibir algumas postagens em vez do contedo falso que tenho agora.

