1
00:00:02,130 --> 00:00:05,510
Na ltima palestra, voc aprende como fazer a publicao selecionvel.

2
00:00:05,660 --> 00:00:10,380
Mas, claro, no tem nada a ver com axiomas ou com solicitaes HTP.

3
00:00:10,400 --> 00:00:13,070
Foi Manila re-agir uma boa prtica.

4
00:00:13,070 --> 00:00:17,230
Mas agora vamos seguir em frente e vamos enviar pedido de HGP.

5
00:00:17,330 --> 00:00:22,670
Uma vez que obtivemos uma identificao vlida agora, qual gancho de ciclo de vida devemos usar aqui.

6
00:00:22,910 --> 00:00:27,630
Vamos dar uma olhada se olharmos o gancho do ciclo de vida para atualizar os componentes.

7
00:00:27,740 --> 00:00:34,100
E, claro, falamos sobre o gancho do ciclo de vida da atualizao porque o computador est l

8
00:00:34,100 --> 00:00:35,060
desde o incio.

9
00:00:35,210 --> 00:00:38,900
Mas os dados devem ser obtidos depois de recebermos uma nova ID de suporte.

10
00:00:38,960 --> 00:00:46,030
Ento,  isso que procuramos, ento o componente que a atualizao  um bom lugar para causar efeitos colaterais.

11
00:00:46,250 --> 00:00:48,110
No entanto, ele tambm tem um problema.

12
00:00:48,260 --> 00:00:55,690
Se atualizarmos o estado, atualizamos o componente novamente e, portanto, inserimos o loop infinito.

13
00:00:55,700 --> 00:00:57,890
Isso  algo que teremos que aguentar.

14
00:00:58,040 --> 00:01:03,000
Mas, antes de mais, vamos fazer o pedido HTP. Eu irei para a publicao completa.

15
00:01:03,200 --> 00:01:12,620
no componente que podemos implementar, o componente atualizou e faz o pedido HTP para que eles possam usar X anos, entre agora,

16
00:01:12,620 --> 00:01:21,050
voc ou ento tem que alvejar uma nica postagem pela ID se ns tivermos uma olhada em nosso backend Dammy.

17
00:01:21,460 --> 00:01:29,240
E, em primeiro lugar, precisamos importar x ano X anos do pacote X anos, em seguida, no post completo

18
00:01:29,540 --> 00:01:37,910
H uma rota para isso e depois escreva a identificao para que possamos copiar que voc rl e agora faa uma

19
00:01:37,910 --> 00:01:44,810
solicitao para que voc seja Adell, claro que no ser um cdigo difcil, mas use mais essa

20
00:01:44,900 --> 00:01:49,440
ID de adereos para levar a ID nos pegamos nos adereos.

21
00:01:49,700 --> 00:01:53,820
Claro que tambm no queremos enviar essa solicitao se a ID for nula.

22
00:01:53,830 --> 00:01:55,630
Ento no queremos fazer isso.

23
00:01:55,910 --> 00:01:57,930
E se a idia  invlida.

24
00:01:58,490 --> 00:02:04,240
Ento eu verificaria se a ideia do prop  tratada como verdade, o que significa que  uma ID vlida.

25
00:02:04,520 --> 00:02:11,030
E ento podemos realmente enviar esse pedido com x 'e para obter Meffert em dvida.

26
00:02:11,030 --> 00:02:23,750
Voc  l. Agora, se eu fizer repeties, bloqueie a sua dvida de sada com a resposta do log do console e devemos

27
00:02:23,750 --> 00:02:28,380
ver uma resposta assim que clicamos em um elemento.

28
00:02:28,400 --> 00:02:32,480
Ento, se eu clicar no alimento aqui, vemos a resposta.

29
00:02:32,480 --> 00:02:34,660
Agora isso funciona bem aqui.

30
00:02:34,850 --> 00:02:36,680
No entanto,  claro que voc deseja exibi-lo.

31
00:02:36,920 --> 00:02:44,270
aqui e talvez tenhamos uma publicao carregada nesse elemento nesse componente, que inicialmente  configurado

32
00:02:44,270 --> 00:02:54,740
para NULL, ano em que podemos enviar o ttulo do post carregado e o contedo do post carregado em nossa publicao.

33
00:02:54,920 --> 00:02:57,950
Ento, tambm devemos gerenciar algum estado

34
00:02:57,950 --> 00:03:05,750
J. S. X contedo e na sua onde eu trancou a resposta, eu no vou logar mais.

35
00:03:05,930 --> 00:03:07,630
Em vez disso, o que eu quero fazer aqui .

36
00:03:07,670 --> 00:03:16,190
Eu quero chamar esse estado definido e h set sets carregados dados de resposta de postor de postagem que sero a

37
00:03:16,230 --> 00:03:23,330
ps-edio que buscamos a partir do final e uma hora J como cdigo X,  claro, ns devemos

38
00:03:23,570 --> 00:03:32,380
enviar mensagens X neste estado desse tipo agora, se isso, se for nosso aplicativo e recarregando-o e eu clicar em uma publicao,

39
00:03:33,130 --> 00:03:38,050
ns realmente recebemos um erro com o qual no podemos ler o ttulo.

40
00:03:38,050 --> 00:03:46,620
completa, ns imediatamente X-ists este estado carregou o ttulo do post e ns fazemos assim que obtemos uma propriedade vlida.

41
00:03:46,630 --> 00:03:52,090
Agora, isso faz muito sentido porque aqui no nosso cdigo GSX para publicao

42
00:03:52,090 --> 00:03:58,960
Agora, obtemos uma propriedade vlida antes de termos uma publicao carregada vlida porque, como voc aprendeu, obter

43
00:03:58,960 --> 00:04:00,320
dados  assncrono.

44
00:04:00,340 --> 00:04:06,940
Ento, primeiro, obtemos o ID e, em seguida, um pouco mais tarde, recebemos o post carregado, mas ns reiniciamos o dormitrio

45
00:04:06,940 --> 00:04:08,770
imediatamente depois de termos a ideia.

46
00:04:09,310 --> 00:04:15,970
Podemos simplesmente corrigir isso, adicionando um cheque para a validade do ID com as ideias deste

47
00:04:15,970 --> 00:04:24,910
prop, j o temos e dizer que, neste caso, a postagem deve ser realmente um pargrafo ainda, mas talvez um pargrafo em

48
00:04:24,910 --> 00:04:31,130
que simplesmente dizemos carregar porque selecionamos uma publicao mas os dados ainda no esto disponveis.

49
00:04:31,180 --> 00:04:37,600
E, em seguida, na instruo bottom if se verificamos se o post carregado pelo estado foi configurado porque inicialmente

50
00:04:37,600 --> 00:04:40,020
 agora ou seria tratado como falso.

51
00:04:40,180 --> 00:04:44,470
Mas assim que obtivemos um, isso retornar a verdade ou se tornar verdadeiro.

52
00:04:44,650 --> 00:04:47,020
E, portanto, vamos renderizar este cdigo GSX.

53
00:04:47,230 --> 00:04:53,710
E agora, se eu salvar isso e eu clicar em uma publicao, vemos o carregamento por uma frao de segundo

54
00:04:53,710 --> 00:04:55,390
e depois vemos a publicao.

55
00:04:55,390 --> 00:04:57,320
Ns tambm conseguimos um problema aqui.

56
00:04:57,550 --> 00:05:05,890
Se abrimos a guia de rede, voc ver que estamos reenviando aps solicitao aps solicitao aps solicitao.

57
00:05:06,100 --> 00:05:08,990
Podemos simplesmente recarregar a pgina para garantir que isso pare.

58
00:05:09,190 --> 00:05:20,920
Mas por que estamos vendo isso, estamos vendo esses pedidos infinitos porque estamos atualizando o estado a partir do componente que atualiza e isso cria

59
00:05:20,920 --> 00:05:27,940
um loop infinito, porque quando chamamos o dito estado, o componente ser atualizado e o

60
00:05:27,940 --> 00:05:31,950
componente ser que a atualizao ser executada novamente.

61
00:05:32,320 --> 00:05:41,080
Portanto, temos que nos certificar de que enviamos apenas essa solicitao HTP e, portanto, atualizamos o estado se realmente

62
00:05:41,100 --> 00:05:42,880
carregssemos uma nova postagem.

63
00:05:42,880 --> 00:05:44,510
Ento, como fazemos isso.

64
00:05:44,710 --> 00:05:53,470
dentro do controle externo Se aqui e a podemos mostrar se j agendamos a postagem se isso for verdade.

65
00:05:53,470 --> 00:05:55,350
Podemos entrar se verificar

66
00:05:55,360 --> 00:05:59,020
Ento, esse  um primeiro indicador que j carregamos as postagens.

67
00:05:59,230 --> 00:06:06,310
Ento,  claro, todos ns queremos ter certeza de que os dias da Ford carregados postam o ID no so a mesma identificao

68
00:06:06,310 --> 00:06:12,940
que acabamos de receber por nossos adereos porque isso significaria que a ID para a qual desejamos obter novos dados 

69
00:06:12,940 --> 00:06:16,940
o ID que j carregamos no precisamos fazer um pedido HTP neste caso.

70
00:06:17,320 --> 00:06:20,080
Verificao to audvel se tivermos uma publicao carregada.

71
00:06:20,080 --> 00:06:29,170
E, em seguida, se este estado carregou ID de postagem  igual  ID do suporte.

72
00:06:29,230 --> 00:06:35,770
obter dados para uma nova postagem, o que  bom, caso em que eu quero fazer solicitao DHC em todos os nossos casos.

73
00:06:36,130 --> 00:06:37,200
Ento, se tentarmos essencialmente

74
00:06:37,210 --> 00:06:41,740
Eu no irei em frente e consegui-lo porque ento estamos tentando buscar dados para solicitao de pedidos.

75
00:06:41,770 --> 00:06:47,560
Ns j temos um post para que possamos enviar esse pedido,  claro.

76
00:06:47,560 --> 00:06:51,070
Agora, vejamos se eu carrego essa pgina e eu clicar em uma postagem.

77
00:06:51,430 --> 00:06:54,010
Bem, nunca recebemos os dados da postagem.

78
00:06:54,010 --> 00:06:57,000
Ento, de alguma forma, nossa verificao aqui est falhando.

79
00:06:57,250 --> 00:07:03,040
Bem, temos que corrigi-lo um pouco porque, inicialmente, ele falhar porque a publicao carregada

80
00:07:03,040 --> 00:07:04,230
 inicialmente nula.

81
00:07:04,270 --> 00:07:07,530
Ento, isso s seria bem sucedido se tivssemos pelo menos um post carregado.

82
00:07:07,840 --> 00:07:16,270
Ento, eu verificarei se no temos esta publicao carregada pelo estado ou se a temos, mas se ela tambm possui

83
00:07:16,270 --> 00:07:19,600
uma ID diferente da ID que planejamos carregar.

84
00:07:19,630 --> 00:07:25,660
Ento, vamos em frente e fazer o pedido, mesmo que no tenhamos uma publicao carregada ou se possamos ter, mas as

85
00:07:25,660 --> 00:07:26,590
IDs so diferentes.

86
00:07:26,760 --> 00:07:27,060
Oups.

87
00:07:27,100 --> 00:07:28,620
Este deve ser postado com cargas.

88
00:07:28,660 --> 00:07:34,930
o aplicativo na guia rede, clique em uma postagem que ele carrega e no comea a enviar pedidos de infinito.

89
00:07:35,020 --> 00:07:37,510
Ento, agora, se salvarmos isso e voltarmos para

90
00:07:37,720 --> 00:07:42,940
E ainda pode mudar, mas ns s recebemos um pedido por switch e isso  exatamente o que queremos.

91
00:07:42,940 --> 00:07:49,600
Ento, agora, obtivemos uma maneira de obter dados de segurana no componente e atualizamos e uma atualizao completa

92
00:07:49,600 --> 00:07:54,410
 o lugar certo porque queremos obter dados sempre que recebemos novos prompts.

