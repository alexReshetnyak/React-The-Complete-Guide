1
00:00:02,120 --> 00:00:07,850
W jaki sposb wysyanie da HTTP dziaa zazwyczaj w reakcji na aplikacje

2
00:00:07,920 --> 00:00:14,540
i zazwyczaj mwi, poniewa jeli tworzysz aplikacj obsugujc wiele stron, nie ma w

3
00:00:14,540 --> 00:00:16,030
niej nic szczeglnego.

4
00:00:16,070 --> 00:00:22,870
Prawdopodobnie masz aplikacj, stron, na ktrej przesyasz formularz, i ktry wysya danie do twojego

5
00:00:22,880 --> 00:00:29,230
backendu, a ty otrzymujesz z powrotem now stron html z potencjalnie nowym kodem reakcji.

6
00:00:29,300 --> 00:00:31,670
Nie masz aplikacji na jedn

7
00:00:31,670 --> 00:00:34,300
stron, nie masz silnego oddzielenia.

8
00:00:34,490 --> 00:00:40,690
Jeli masz tak aplikacj na jedn stron, masz due zrnicowanie

9
00:00:40,730 --> 00:00:47,840
midzy aplikacj, aplikacj i backendem. Reakcja aplikacji i serwerw wci wymagaj komunikacji

10
00:00:47,840 --> 00:00:53,660
od czasu do czasu, ale nie komunikuj si poprzez wymian stron html.

11
00:00:53,720 --> 00:00:56,470
Jeli wic aplikacja reagujca wyle danie na

12
00:00:56,630 --> 00:01:03,860
serwer, nie otrzymasz nowej strony html, zamiast tego moesz zazwyczaj przywrci niektre dane json lub przesa niektre dane

13
00:01:03,860 --> 00:01:05,950
json do serwera, jeli chcesz

14
00:01:06,020 --> 00:01:11,840
utworzy pewne zasoby na serwerze dla przykad. Tak to dziaa, masz to oddzielenie,

15
00:01:11,840 --> 00:01:14,050
a twj serwer to zazwyczaj

16
00:01:14,060 --> 00:01:22,340
RESTful API, po prostu ujawniajcy niektre punkty kocowe API, do ktrych moesz wysya proby o uzyskanie lub

17
00:01:22,550 --> 00:01:28,870
wysanie danych z twojej autonomicznej aplikacji. Takie podejcie poka ci w tym

18
00:01:28,880 --> 00:01:33,130
module, a poka ci, jak to zrobi.

