1
00:00:01,990 --> 00:00:05,440
Nell'ultima lezione modifichiamo il codice per ottenere alcuni dati.

2
00:00:05,590 --> 00:00:11,950
Ovviamente questo  un enorme primo passo, ma sarebbe ancora pi utile se potessimo scrivere quei dati

3
00:00:11,950 --> 00:00:18,940
sullo schermo se fosse possibile renderlo sullo schermo e sostituito da un raggio di post di Dammy qui

4
00:00:18,940 --> 00:00:26,380
con array generato dinamicamente in base ai post che abbiamo preso per abbiamo bisogno di gestire qualche stato ovviamente

5
00:00:26,380 --> 00:00:29,340
e dovremmo avere alcuni messaggi in quello stato.

6
00:00:29,470 --> 00:00:32,290
Inizialmente questo pu essere un array vuoto.

7
00:00:32,320 --> 00:00:38,530
Ora voglio aggiornare questo stato una volta recuperati i dati dal server e quindi il posto in

8
00:00:38,620 --> 00:00:42,140
cui chiamare questo stato impostato  all'interno del metodo allora.

9
00:00:42,460 --> 00:00:50,200
Se la chiamassimo al di fuori di questo cos spesso X-ers ottiene Meffert non avremmo ancora depot per via della cosa

10
00:00:50,200 --> 00:00:51,860
che ho menzionato prima.

11
00:00:52,090 --> 00:00:58,900
Il codice javascript non aspetta che finisca cos, se immediatamente chiamando questo stato impostato dopo il metodo

12
00:00:58,900 --> 00:01:02,020
get i dati non saranno stati ancora recuperati.

13
00:01:02,440 --> 00:01:10,550
Quindi all'interno del blocco allora  il posto giusto e l possiamo impostare i post sui dati di risposta.

14
00:01:10,600 --> 00:01:16,510
Nella console hai appena visto che la propriet data  disponibile su quell'oggetto di

15
00:01:16,510 --> 00:01:24,460
risposta e che la propriet data contiene una serie di post, quindi commenter la registrazione della risposta e imposter

16
00:01:24,490 --> 00:01:26,170
il mio stato nei post.

17
00:01:26,170 --> 00:01:30,380
Ora inseriamo i messaggi dinamicamente nel metodo di rendering inoltrato.

18
00:01:30,400 --> 00:01:38,260
Creer una nuova costante per i tuoi post e questo dovrebbe essere un array di elementi GSX, quindi user

19
00:01:38,350 --> 00:01:40,180
questo stato per postare.

20
00:01:40,180 --> 00:01:46,720
Abbiamo appena aggiornato quello con i dati del server e l, come hai imparato, ha chiamato il metodo map per

21
00:01:46,780 --> 00:01:52,570
mapparlo in una serie di vari elementi x e il metodo map, naturalmente, restituisce un nuovo array che

22
00:01:52,570 --> 00:01:54,790
io memorizzo in quel post costante.

23
00:01:54,890 --> 00:01:56,830
Ora nel metodo della mappa il tuo.

24
00:01:56,840 --> 00:02:03,560
input in quella funzione che stiamo passando al metodo map e l voglio restituire un elemento j come x.

25
00:02:03,560 --> 00:02:05,480
Ricevo i miei singoli post come

26
00:02:05,480 --> 00:02:08,100
Voglio restituire il mio singolo post qui.

27
00:02:09,030 --> 00:02:11,420
Come fa laggi.

28
00:02:11,420 --> 00:02:18,060
Ovviamente, desidero inviare questa serie di post che sono archiviati in tali post costanti.

29
00:02:18,060 --> 00:02:21,210
Ora questo post, ovviamente, produce almeno il titolo.

30
00:02:21,210 --> 00:02:25,260
Se ispezioniamo il componente del post, vediamo che visualizzo il riquadro qui.

31
00:02:25,650 --> 00:02:27,210
Quindi quindi il tuo.

32
00:02:27,270 --> 00:02:32,180
Probabilmente voglio prendere degli oggetti di scena, magari un oggetto di scena con il titolo del nome.

33
00:02:32,180 --> 00:02:35,810
Quindi i pastori dovrebbero intitolare la propriet a un singolo post.

34
00:02:35,970 --> 00:02:43,680
Quindi nel contenitore del blocco ho bisogno di impostare una propriet del titolo qui e passare post insegnato quel titolo la

35
00:02:43,680 --> 00:02:50,130
propriet title su questo elemento post  disponibile a causa dei dati che abbiamo recuperato dal server solo

36
00:02:50,130 --> 00:02:50,710
per rassicurarti.

37
00:02:51,060 --> 00:02:52,940
Hai gi viziato che ha funzionato.

38
00:02:53,190 --> 00:02:58,260
Ma oggi torniamo dal servizio Desirae e ogni elemento qui ha una propriet del titolo.

39
00:02:58,710 --> 00:03:01,450
Quindi, come puoi vedere chiaramente, funziona gi qui.

40
00:03:01,650 --> 00:03:02,970
Lo styling  un po 'fuori.

41
00:03:02,970 --> 00:03:08,580
Produciamo anche tutti i post che potrebbero essere troppo e non abbiamo impostato per mantenere il corretto.

42
00:03:08,640 --> 00:03:10,750
Quindi sistemiamo queste tre cose.

43
00:03:10,770 --> 00:03:12,280
Impostiamo la chiave.

44
00:03:12,510 --> 00:03:16,450
E come pu verificare controllando i dati che otteniamo dal server.

45
00:03:16,560 --> 00:03:19,760
Vedrai che c' una propriet id su ogni post.

46
00:03:19,800 --> 00:03:23,750
Questo ovviamente compensa una chiave perfetta perch  unica.

47
00:03:23,790 --> 00:03:30,120
Ora riguardo lo styling e la quantit di post per lo styling Andiamo al componente

48
00:03:30,120 --> 00:03:33,320
post e passiamo a 2 forse 250 pixel.

49
00:03:33,690 --> 00:03:37,020
Ora hanno un po 'pi spazio per il titolo.

50
00:03:37,020 --> 00:03:41,920
Ancora ci sono troppi messaggi e questo  qualcosa di cui mi prender cura nella prossima lezione.

51
00:03:42,000 --> 00:03:44,750
Quando ti mostro come trasformare i dati che torni.

