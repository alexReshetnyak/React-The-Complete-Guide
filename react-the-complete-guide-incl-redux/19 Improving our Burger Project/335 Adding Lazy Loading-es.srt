1
00:00:02,350 --> 00:00:07,570
Entonces se aplic mucha optimizacin, como se mencion antes, no dude en solicitar ms.

2
00:00:07,570 --> 00:00:12,760
Sin embargo, hay uno que definitivamente podemos presentar, algo que no hice antes porque quera terminar

3
00:00:12,760 --> 00:00:17,940
esta aplicacin primero, pero ahora es el momento de optimizar la forma en que cargamos nuestras

4
00:00:17,950 --> 00:00:19,680
rutas, podemos usar carga diferida all.

5
00:00:19,720 --> 00:00:21,670
Echemos un vistazo a nuestra aplicacin. js file, tenemos

6
00:00:21,880 --> 00:00:28,720
la ruta de compra y la ruta de los pedidos, y ambos no son necesariamente visitados por nosotros, es posible que nunca

7
00:00:28,720 --> 00:00:30,580
lleguemos a la caja, es posible

8
00:00:30,580 --> 00:00:32,870
que nunca consultemos el rea de pedidos.

9
00:00:33,220 --> 00:00:37,760
Ahora la parte de autenticacin quizs nunca sea visitada,

10
00:00:37,840 --> 00:00:41,720
podemos cargarlas todas asincrnicamente, de forma perezosa.

11
00:00:42,120 --> 00:00:43,750
El generador de hamburguesas, no

12
00:00:43,750 --> 00:00:48,200
tanto, esa es nuestra pgina raz, siempre visitamos eso, pero las otras rutas, seguro.

13
00:00:48,250 --> 00:00:52,810
Ahora que aprendi cmo puede implementar la carga diferida con el enrutador de reaccin,

14
00:00:52,930 --> 00:00:55,330
sintase libre de agregarlo por su cuenta, le

15
00:00:55,330 --> 00:01:00,670
dar una breve pausa para pausar el video y probarlo por su cuenta y luego definitivamente haremos

16
00:01:00,670 --> 00:01:03,280
esto juntos y asegrese de cargar el pago,

17
00:01:03,280 --> 00:01:06,060
los pedidos y la autenticacin solo cuando los necesitemos.

18
00:01:10,090 --> 00:01:11,490
Entonces, tenas xito?

19
00:01:11,500 --> 00:01:13,190
Probemos juntos, antes que

20
00:01:13,270 --> 00:01:23,720
nada agregar un componente de orden superior, componente asncrono y all el AsyncComponent. js file, l pego el cdigo que escrib en la seccin de

21
00:01:23,770 --> 00:01:31,870
enrutamiento, as que esta funcin asyncComponent que toma una funcin como una entrada que luego ejecuta aqu, esta funcin

22
00:01:31,870 --> 00:01:34,730
usar esta sintaxis de importacin dinmica y

23
00:01:34,780 --> 00:01:40,660
luego nos dar una promesa donde eventualmente obtener el componente que queremos que

24
00:01:40,660 --> 00:01:43,950
cargue y dnde luego renderizamos este componente.

25
00:01:43,960 --> 00:01:47,120
Eso es lo que estamos haciendo aqu, guardemos este archivo y ahora

26
00:01:47,130 --> 00:01:50,600
vamos a usarlo en la aplicacin. js file para cargar algunos componentes perezosamente.

27
00:01:50,840 --> 00:02:00,520
As que para eso, importar AsyncComponent y ahora tengo que ir a mi carpeta especial, AsyncComponent y cargarlo

28
00:02:00,550 --> 00:02:02,410
desde ese archivo

29
00:02:02,800 --> 00:02:11,090
all y luego quiero configurar algunos componentes para cargarlos perezosamente, el asyncCheckout por ejemplo, I

30
00:02:11,090 --> 00:02:15,480
' Nombrar esta constante asyncCheckout y usar AsyncComponent aqu.

31
00:02:15,540 --> 00:02:22,510
Ahora tenemos que pasar un argumento a asyncComponent y ese argumento debera ser una funcin, as que pasar

32
00:02:22,570 --> 00:02:27,500
una funcin aqu, una funcin que eventualmente devolver esta instruccin de importacin como

33
00:02:27,500 --> 00:02:34,520
una funcin donde podemos definir la ruta al componente que queremos cargamos perezosamente, por supuesto ese es nuestro

34
00:02:34,520 --> 00:02:37,820
contenedor de pago en este caso, con eso podemos

35
00:02:37,850 --> 00:02:38,860
deshacernos del pago

36
00:02:38,870 --> 00:02:40,410
y envo aqu.

37
00:02:40,460 --> 00:02:44,410
Ahora copiemos esto dos veces para pedidos y auth, as

38
00:02:44,570 --> 00:02:52,490
que tambin tenemos los asyncOrders donde tomar la ruta de importacin de las rdenes anteriores y la cargar de forma

39
00:02:52,490 --> 00:02:59,340
perezosa y luego podremos eliminar las rdenes originales importadas y ahora lo mismo para auth, aqu nombrar

40
00:02:59,350 --> 00:03:00,440
esto como asyncAuth,

41
00:03:00,470 --> 00:03:08,750
tomar el camino de la antigua importacin de autenticacin y, por supuesto, lo reemplazar aqu, luego podremos deshacernos de la

42
00:03:08,750 --> 00:03:11,070
importacin de autenticacin aqu tambin.

43
00:03:11,090 --> 00:03:13,360
Ahora obtenemos todos estos componentes asincrnicos, ahora

44
00:03:13,400 --> 00:03:14,470
vamos a usarlos.

45
00:03:14,570 --> 00:03:22,510
As que aqu tendremos asyncCheckout, para asyncAuth o disculpe, para la autenticacin, vamos a agregar asyncAuth y para el

46
00:03:22,730 --> 00:03:29,360
componente de pedidos anterior, vamos a agregar asyncOrders. Y ahora todos esos datos, todos estos componentes se

47
00:03:29,720 --> 00:03:31,570
cargan solo cuando es necesario.

48
00:03:31,790 --> 00:03:33,410
As que ahorremos todo, volvamos

49
00:03:33,680 --> 00:03:39,720
a nuestra aplicacin y echemos un vistazo a la aplicacin y veamos si funciona como podramos esperar, abro

50
00:03:39,720 --> 00:03:40,420
las pestaas

51
00:03:40,430 --> 00:03:46,220
de la red para que podamos ver las solicitudes de red y deberamos ver una cuando haga

52
00:03:46,250 --> 00:03:47,450
clic en authenticar, de

53
00:03:47,450 --> 00:03:48,340
hecho, cargamos.

54
00:03:48,380 --> 00:03:48,780
pedazo 2.

55
00:03:48,780 --> 00:03:56,970
Ahora si inicio sesin aqu, enviar, estoy de vuelta al generador de hamburguesas.

56
00:03:57,010 --> 00:04:01,560
Si vuelvo a cargar la aplicacin, todava debera haber iniciado sesin automticamente, as que esto sigue funcionando.

57
00:04:01,570 --> 00:04:05,200
Ahora vamos a visitar los pedidos y descargamos el

58
00:04:05,200 --> 00:04:13,030
trozo 3 con el cdigo de pedido y, finalmente, construyamos una hamburguesa para ver si tambin cargamos la parte de

59
00:04:13,030 --> 00:04:14,450
pago de forma perezosa.

60
00:04:14,530 --> 00:04:16,840
Hagamos clic en continuar y lo descargamos.

61
00:04:16,840 --> 00:04:17,680
fragmento 1 que

62
00:04:17,710 --> 00:04:19,770
es el cdigo relacionado con el pago.

63
00:04:19,960 --> 00:04:26,710
Y con eso, mejoramos nuestra aplicacin porque ahora solo cargamos el cdigo que necesitamos cargar y

64
00:04:26,710 --> 00:04:28,910
no cargamos ningn cdigo innecesario.

65
00:04:29,110 --> 00:04:35,530
Esa es una gran mejora y un paso importante antes de que realmente construyamos nuestra aplicacin para la produccin, aunque

66
00:04:35,620 --> 00:04:40,430
como tambin mencion en el mdulo de enrutamiento, la carga diferida no siempre es mejor.

67
00:04:40,510 --> 00:04:46,390
Si los mdulos cargados con poca carga son muy pequeos, como lo son en nuestra aplicacin para ser honestos, es posible

68
00:04:46,420 --> 00:04:48,540
que no ganes nada al agregar carga diferida.

69
00:04:48,550 --> 00:04:54,430
Sin embargo, quiero mostrarlo porque es un concepto importante y algo que debe considerar al

70
00:04:54,520 --> 00:04:56,230
optimizar cualquier aplicacin que construya.

