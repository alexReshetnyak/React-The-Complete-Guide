1
00:00:02,140 --> 00:00:06,690
Nell'ultima lezione abbiamo usato updateObject, questa funzione di utilit.

2
00:00:06,690 --> 00:00:13,830
Ora c' un'altra caratteristica che condividiamo anche su pi file e quindi avrebbe senso

3
00:00:13,830 --> 00:00:14,350
esternalizzarla,

4
00:00:14,670 --> 00:00:16,940
sto parlando della logica

5
00:00:17,100 --> 00:00:18,500
di validazione, checkValidity.

6
00:00:18,570 --> 00:00:22,820
 lo stesso metodo nel contenitore auth e nel contenitore dei dati di contatto,

7
00:00:23,070 --> 00:00:30,690
quindi  logico selezionare checkValidity e inserirlo nella nostra cartella condivisa nell'utilit. per esempio, puoi creare

8
00:00:30,690 --> 00:00:31,680
una

9
00:00:31,710 --> 00:00:36,300
nuova convalida. file js, qualunque cosa tu voglia.

10
00:00:36,300 --> 00:00:38,360
Quindi user checkValidity, ovviamente non

11
00:00:38,490 --> 00:00:42,330
 pi un metodo qui, ma  una funzione quindi

12
00:00:42,330 --> 00:00:46,910
esportiamola come una funzione di freccia che si aspetta due argomenti.

13
00:00:46,960 --> 00:00:52,250
 cos semplice ristrutturarlo, esportare il segno di uguale const e un errore e

14
00:00:52,650 --> 00:00:58,380
all'interno della funzione, nulla deve cambiare perch stiamo solo lavorando con gli argomenti della funzione,

15
00:00:58,380 --> 00:01:01,050
come dovremmo in una buona funzione.

16
00:01:01,380 --> 00:01:07,710
Quindi ora possiamo usare checkvalidit nei dati di contatto e nel contenitore auth, iniziamo il contenitore

17
00:01:07,710 --> 00:01:09,620
auth perch li ho appena

18
00:01:09,750 --> 00:01:16,370
rimosso e per quello, lo importer dal file di utilit in cui ho importato anche updateObject.

19
00:01:16,770 --> 00:01:24,030
E ora ho semplicemente bisogno di sostituire la mia chiamata a questo. checkValidity con appena checkValidity che ho appena aggiunto all'importazione e questo

20
00:01:24,060 --> 00:01:26,200
 tutto e questo rende questo

21
00:01:26,250 --> 00:01:30,840
file un po 'pi snello e rimuove questa duplicazione di codice non necessaria.

22
00:01:31,140 --> 00:01:33,320
Ora facciamo lo stesso per

23
00:01:33,540 --> 00:01:39,960
i dati di contatto, li importer anche checkValidity dal file di utilit e poi

24
00:01:39,960 --> 00:01:46,530
nel posto in cui lo uso con questo controlloValidity, chiamer semplicemente checkValidity e ovviamente ci

25
00:01:46,530 --> 00:01:50,050
significa che ora posso rimuovere il metodo checkValidity.

26
00:01:50,190 --> 00:01:54,130
Salviamo entrambi i file e vediamo se funziona ancora.

27
00:01:54,300 --> 00:01:58,490
Se torniamo all'applicazione e iniziamo a costruire un hamburger, diamo

28
00:01:58,620 --> 00:02:01,480
un'occhiata ai nostri dati di contatto.

29
00:02:01,890 --> 00:02:06,580
Se lo svuoto, la convalida sembra funzionare correttamente, quindi tutto

30
00:02:06,660 --> 00:02:08,270
funziona ancora, ma

31
00:02:08,340 --> 00:02:14,290
ora ovviamente abbiamo notevolmente migliorato il codice esternalizzando checkValidity nel proprio file.

