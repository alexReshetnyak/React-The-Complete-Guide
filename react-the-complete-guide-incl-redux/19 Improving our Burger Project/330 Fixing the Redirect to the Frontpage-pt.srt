1
00:00:02,210 --> 00:00:03,980
Ento aqui est o nosso

2
00:00:04,040 --> 00:00:06,100
aplicativo e, geralmente, funciona bem.

3
00:00:06,110 --> 00:00:09,690
Agora h um pequeno problema quando fazemos um

4
00:00:09,920 --> 00:00:17,240
novo pedido, se voc inspecionar seu arquivo redutor de pedidos, voc ver que no purchaseBurgerStart, que 

5
00:00:17,330 --> 00:00:20,750
claro que  despachado quando clicamos na ordem,

6
00:00:20,750 --> 00:00:23,200
quando enviamos o pedido para o

7
00:00:23,570 --> 00:00:26,330
servidor, configuramos o carregamento para falso.

8
00:00:26,330 --> 00:00:33,470
Agora, isso no faz sentido algum, porque aqui queremos definir o carregamento como verdadeiro e definimos a verdade

9
00:00:33,470 --> 00:00:35,440
mais cedo neste curso, e

10
00:00:35,540 --> 00:00:38,310
confundi isso com a refatorao do redutor.

11
00:00:38,390 --> 00:00:44,270
Ento, isso deve ser verdade, queremos mostrar um controle giratrio se implementarmos essa funcionalidade em

12
00:00:44,270 --> 00:00:47,680
nosso componente quando estivermos enviando isso para um

13
00:00:47,930 --> 00:00:51,160
servidor, ento essa  a primeira melhoria minscula.

14
00:00:51,190 --> 00:00:53,190
Agora h outra melhoria, se

15
00:00:53,420 --> 00:00:58,070
estamos falando de fazer um pedido, vamos construir um hambrguer l.

16
00:00:58,070 --> 00:01:07,020
Agora vamos fazer o login primeiro, enviar isso e somos redirecionados aqui de volta para a nossa pgina inicial.

17
00:01:07,050 --> 00:01:14,130
Agora que isso no deveria acontecer, corrigimos isso na seo de autenticao de que deveramos ser redirecionados

18
00:01:14,130 --> 00:01:14,970
para o

19
00:01:15,000 --> 00:01:22,800
checkout e ficamos l por uma frao de segundo, mas de alguma forma ele decidiu nos redirecionar para a

20
00:01:22,800 --> 00:01:23,600
primeira pgina.

21
00:01:23,640 --> 00:01:30,000
Ento, aqui ns ajustamos corretamente o set auth redireccionar, mas ainda assim decidiu que um bom lugar para ns seria a primeira

22
00:01:30,000 --> 00:01:31,290
pgina, ento  algo

23
00:01:31,290 --> 00:01:33,730
que eu quero consertar. Agora a razo

24
00:01:33,750 --> 00:01:41,100
para este problema com este redirecionamento errado  que ns redirecionamos no container auth aqui este cdigo, l

25
00:01:41,150 --> 00:01:46,410
ns configuramos ou usamos nosso caminho de redirecionamento para redirecionar o usurio.

26
00:01:46,410 --> 00:01:53,130
O problema  que isso acontece no continer de autenticao e no nosso continer de aplicativo, em nosso

27
00:01:53,160 --> 00:01:59,670
componente de aplicativo raiz, onde renderizamos rotas diferentes para diferentes estados de autenticao, onde somos autenticados, no

28
00:01:59,970 --> 00:02:02,400
renderizamos mais o componente de autenticao.

29
00:02:02,400 --> 00:02:07,860
Portanto, o cdigo no componente auth que nos redirecionaria corretamente para a pgina de checkout

30
00:02:07,860 --> 00:02:08,920
nunca ser usado.

31
00:02:09,330 --> 00:02:18,780
Ento, para consertar isso, podemos reintroduzir a rota auth em nosso conjunto de rotas no estado de autenticao, agora  claro que a desvantagem 

32
00:02:18,780 --> 00:02:24,990
que agora os usurios autenticados podem visitar a pgina de autenticao, por outro lado, eles no

33
00:02:24,990 --> 00:02:26,790
podem causar nenhum dano .

34
00:02:26,910 --> 00:02:31,440
 claro que voc tambm pode encontrar outras solues para redirecionar em qualquer

35
00:02:31,440 --> 00:02:37,110
outro lugar, mas essa  uma soluo rpida, fcil e segura para voltar ao comportamento original.

36
00:02:37,110 --> 00:02:44,100
Agora, outro problema que enfrentamos  se eu construir um hambrguer e eu estiver logado aqui, nesse construtor de hambrguer aqui,

37
00:02:44,460 --> 00:02:50,080
voc ver que em certos tamanhos de tela, o hambrguer est posicionado incorretamente e no est centrado.

38
00:02:50,110 --> 00:02:55,230
A razo para isto  que o hambrguer tem uma largura que  ajustada para

39
00:02:55,230 --> 00:02:59,830
a janela de visualizao, mas est sempre dentro de uma div que ocupa

40
00:03:00,000 --> 00:03:01,570
100% da largura do elemento

41
00:03:01,770 --> 00:03:07,920
de empacotamento e que seria essa div que tambm dita uma certa largura, 80% Neste caso, o checkoutResumo.

42
00:03:07,920 --> 00:03:16,410
Portanto, o checkoutResumo aqui est ditando uma certa largura para o nosso hambrguer e isso est influenciando a forma como

43
00:03:16,410 --> 00:03:18,990
o nosso hambrguer  exibido aqui.

44
00:03:19,230 --> 00:03:26,430
Para consertar isso, podemos ir para os nossos componentes, para o checkoutResumo podemos encontr-lo sob

45
00:03:26,430 --> 00:03:33,520
ordem, resumo de checkout e onde definimos a largura de 500px para displays mais amplos.

46
00:03:33,840 --> 00:03:35,770
No final, eu no quero fazer

47
00:03:35,820 --> 00:03:42,990
isso, eu quero ficar com os 80% que tenho por padro e agora com isso, se voltarmos para o aplicativo e ns

48
00:03:43,200 --> 00:03:46,700
construirmos um novo hambrguer eu j estou logado aqui j, isso

49
00:03:46,820 --> 00:03:53,510
Agora, o hambrguer deve estar bem centralizado em todas as telas do dispositivo, o que o torna muito melhor agora,

50
00:03:53,530 --> 00:03:58,590
ento agora o hambrguer est com boa aparncia o tempo todo, no importa onde estamos.

51
00:03:58,620 --> 00:04:04,770
Agora h uma outra falha visual da qual eu quero me livrar e que est em dispositivos pequenos,

52
00:04:04,770 --> 00:04:11,850
se abrirmos o nosso navegador lateral e eu clicar em um link, ele navega l corretamente sem erros, mas no fecha

53
00:04:11,850 --> 00:04:12,690
o navegador

54
00:04:12,690 --> 00:04:15,150
lateral, eu tenho para fazer isso manualmente.

55
00:04:15,160 --> 00:04:19,420
 claro que deve fechar a navegao lateral sempre que clicarmos em um link aqui.

56
00:04:19,770 --> 00:04:26,520
Agora, para consertar isso, temos que ir para o nosso sideDrawer onde no final temos nosso sideDrawer aqui e

57
00:04:26,520 --> 00:04:28,500
ali, temos os itens de

58
00:04:28,890 --> 00:04:35,370
navegao e agora queremos garantir que sempre que clicamos em um item de navegao, basicamente fechamos essa gaveta.

59
00:04:35,610 --> 00:04:43,820
Ento, ns essencialmente queremos emitir ou executar este mtodo fechado, o mtodo que obtemos

60
00:04:43,840 --> 00:04:46,960
no objeto fechado neste componente sideDrawer.

61
00:04:47,040 --> 00:04:54,180
Agora, para fazer isso, poderamos, por exemplo, simplesmente ouvir um clique em qualquer lugar no sideDrawer, agora isso,  claro,

62
00:04:54,180 --> 00:05:00,510
significaria que no apenas clicar em links iria fech-lo. Poderamos tambm entrar nos itens de navegao e

63
00:05:00,690 --> 00:05:07,050
tentar registrar o ouvinte onClick l tambm, eu vou com a estratgia geral de fechamento aqui.

64
00:05:07,170 --> 00:05:15,990
Ento, em um clique no sideDrawer em geral, vamos tentar entrar em contato com adereos. fechado, que deve ser tratado no componente

65
00:05:16,170 --> 00:05:21,320
pai deste componente e fechar este menu lateral.

66
00:05:21,450 --> 00:05:26,910
Com essa mudana no lugar, vamos abrir o sideDrawer, se eu clicar em qualquer lugar nele, ele fecha,

67
00:05:26,910 --> 00:05:28,270
mas isso deve dar

68
00:05:28,420 --> 00:05:31,000
certo, se eu clicar em pedidos, ele tambm fecha.

69
00:05:31,260 --> 00:05:37,320
Ento, agora temos um sideDrawer que funciona como esperamos que funcione quando

70
00:05:37,320 --> 00:05:38,130
estamos navegando.

71
00:05:38,220 --> 00:05:43,920
Estes foram alguns problemas visuais que tivemos e os corrigimos para que agora a nossa aplicao parea e

72
00:05:43,980 --> 00:05:46,340
se comporte melhor e mais como espervamos.

