1
00:00:02,280 --> 00:00:07,120
Entonces, para mostrarte lo relajado que estoy, adjunt un proyecto a esta conferencia.

2
00:00:07,140 --> 00:00:09,870
Es un proyecto muy simple con un contenedor.

3
00:00:09,870 --> 00:00:12,540
El contenedor Kountry y dos componentes.

4
00:00:12,660 --> 00:00:18,540
Y luego lo que hace es que nos da esta pgina donde tenemos un contador en la parte

5
00:00:18,570 --> 00:00:24,660
superior que podemos manipular con estos botones y estos botones solo usan el estado normal como Riak nos

6
00:00:24,660 --> 00:00:28,920
lo da como solamos antes con la propiedad del estado y nuestros mtodos

7
00:00:28,920 --> 00:00:33,760
Entonces este es un estado de reaccin normal, no hay nada que lo reduzca.

8
00:00:33,810 --> 00:00:36,080
Redux ni siquiera estaba instalado.

9
00:00:36,240 --> 00:00:43,170
Eso es lo prximo que quiero hacer, aunque dejar el inicio de NPM y ejecutar la instalacin de NPM. Guin de

10
00:00:43,410 --> 00:00:45,750
dash, guarde la lectura, solo lea x.

11
00:00:45,780 --> 00:00:52,800
Ahora establezco que la biblioteca de lectura X funciona de forma independiente y, de hecho, la usar por s sola por el

12
00:00:52,800 --> 00:00:57,960
momento, pero pronto la agregar a nuestra aplicacin de reactivacin para ver cmo funciona junto con ella.

13
00:00:57,990 --> 00:01:04,230
Entonces, con tres mazos instalados, crear un nuevo archivo en la carpeta raz junto al paquete que tiene el nombre y

14
00:01:04,730 --> 00:01:05,980
el nombre de Jasonville.

15
00:01:06,030 --> 00:01:07,810
Estupidez bsica.

16
00:01:07,860 --> 00:01:16,580
aqu no tendr ningn cdigo de reactivacin, no lo incluiremos en nuestro proyecto de reactivacin, se ejecutar con un nodo.

17
00:01:16,620 --> 00:01:18,000
Ahora este archivo

18
00:01:18,070 --> 00:01:24,750
J. S. en su lugar solo para mostrar los diferentes conceptos de redox en un archivo y para mostrar

19
00:01:24,750 --> 00:01:25,630
que es independiente de lo que hacemos.

20
00:01:26,010 --> 00:01:33,220
Entonces, en esta lectura x rays x fall quiero crear todo lo que necesitamos para usar Regex.

21
00:01:33,240 --> 00:01:42,210
Eso, por supuesto, es la tienda que ser mi reductora que luego ser una accin probablemente o

22
00:01:42,420 --> 00:01:45,330
algn cdigo que enve una accin.

23
00:01:46,020 --> 00:01:50,130
Y ciertamente tambin queremos ver a partir de la accin cristiana.

24
00:01:50,310 --> 00:01:52,010
Comencemos con la historia

25
00:01:52,260 --> 00:01:56,090
Y para eso necesito importar algo de read x.

26
00:01:56,140 --> 00:02:03,150
Ahora todava lo usaremos para importar algo de alguna sintaxis ms adelante cuando regresemos a reaccionar.

27
00:02:03,210 --> 00:02:09,450
Pero como planeo ejecutar este archivo con el nodo, necesito usar el ndice de importacin de nodos,

28
00:02:09,480 --> 00:02:17,170
que es todo crear un nombre de constante que redirija, y esta constante ahora requerir una reduccin de este tipo.

29
00:02:17,220 --> 00:02:18,890
De nuevo, esto requiere ndices.

30
00:02:18,900 --> 00:02:23,090
No hay texto de Chaisson y solo es obligatorio porque quiero mostrar aquellos sin cambios.

31
00:02:23,100 --> 00:02:26,340
Solo el primero pronto regresar para reaccionar.

32
00:02:26,340 --> 00:02:27,810
Sin preocupaciones.

33
00:02:27,810 --> 00:02:36,090
Entonces aqu puedo crear una tienda de creacin de nombre constante que se refiera a leer X crear tienda crear tienda

34
00:02:36,090 --> 00:02:38,950
como una funcin pero no ejecutarla todava.

35
00:02:39,540 --> 00:02:46,830
Crear tienda como los nombres de ajedrez nos permite crear una nueva tienda redux y almacenarla en una tienda con

36
00:02:46,830 --> 00:02:47,580
nombre constante.

37
00:02:47,580 --> 00:02:52,930
Pero, por supuesto, puede darle a esta constante el nombre que desee y, en ltima instancia, ejecutar.

38
00:02:52,950 --> 00:02:55,560
Crea una tienda como esta.

39
00:02:55,560 --> 00:02:58,180
Crear una tienda as no har mucho.

40
00:02:58,410 --> 00:03:03,530
Una tienda necesita ser inicializada con un reductor porque el reductor.

41
00:03:03,630 --> 00:03:06,380
Y recuerda que solo tenemos un productor.

42
00:03:06,390 --> 00:03:10,230
Incluso si combinamos varios, se fusionarn en uno solo.

43
00:03:10,380 --> 00:03:12,990
El reductor est fuertemente conectado a la tienda.

44
00:03:13,020 --> 00:03:16,870
Es lo nico que puede actualizar el estado al final.

45
00:03:17,100 --> 00:03:23,580
Es por eso que tenemos que pasar el reductor a esta funcin de creacin aqu porque est tan

46
00:03:23,580 --> 00:03:25,240
estrechamente conectado con el estado.

47
00:03:25,380 --> 00:03:30,050
Por lo tanto, realmente necesito crear mi reductor antes de crear para almacenar.

48
00:03:30,420 --> 00:03:32,800
As que aqu crear mi reductor de races.

49
00:03:32,850 --> 00:03:39,060
El nombre del curso siempre depende de ti y esa es solo una funcin que puedes crear con la palabra clave

50
00:03:39,060 --> 00:03:39,990
de la funcin.

51
00:03:39,990 --> 00:03:44,120
Ahora tambin puedes usar una funcin de flecha como quieras.

52
00:03:44,190 --> 00:03:48,640
Ahora esta funcin aqu recibe dos argumentos.

53
00:03:48,780 --> 00:03:51,090
El primero es el estado actual.

54
00:03:51,090 --> 00:03:53,400
Porque como dije, el reductor tiene dos argumentos.

55
00:03:53,400 --> 00:03:57,980
Estado y la accin antiestatista del antiguo estado que luego se puede actualizar.

56
00:03:58,380 --> 00:04:00,030
Entonces el estado es el primer argumento.

57
00:04:00,060 --> 00:04:06,750
El segundo argumento es la accin y luego la funcin tiene que devolver una cosa y ese es

58
00:04:06,750 --> 00:04:07,700
el estado actualizado.

59
00:04:07,730 --> 00:04:11,770
El ms simple usara o puede escribir simplemente devuelve el estado anterior.

60
00:04:11,820 --> 00:04:15,340
Entonces este es un reductor vlido, aunque por supuesto no hace nada.

61
00:04:15,390 --> 00:04:17,690
Simplemente devuelve el estado que ya tena.

62
00:04:17,970 --> 00:04:25,120
Pero ya puede usar ese reductor y pasarlo como argumento para crear un reductor de raz almacenado.

63
00:04:25,350 --> 00:04:31,950
Con eso nuestro productor nuestra tienda se crea con ese productor en mente y ahora tenemos una tienda creada.

64
00:04:31,950 --> 00:04:36,000
Sin embargo, esta tienda tendr un estado indefinido.

65
00:04:36,150 --> 00:04:44,700
Podemos verificar esto mediante la tienda de registro de Konsole y obtener el estado que es una funcin que debemos

66
00:04:44,970 --> 00:04:48,350
ejecutar y extraer el estado de la tienda.

67
00:04:48,510 --> 00:04:50,000
Echemos un vistazo a eso.

68
00:04:50,010 --> 00:04:55,980
Ahora necesitamos ejecutar el archivo con el nodo j us y lo hacemos escribiendo node en la lnea de comando y luego

69
00:04:55,980 --> 00:04:57,190
el nombre del archivo.

70
00:04:57,210 --> 00:05:03,210
Sin embargo, debes navegar en la carpeta de ese archivo primero en el terminal para que mi

71
00:05:03,230 --> 00:05:10,280
caso no redux dash's basic's dot J. S. esto ejecutar el archivo y escupir cualquier salida de registro de la consola.

72
00:05:10,280 --> 00:05:11,500
Justo en la terminal.

73
00:05:11,510 --> 00:05:16,710
Entonces aqu lo ve indefinido y eso proviene exactamente de esta declaracin de bloqueo de consola.

74
00:05:16,760 --> 00:05:22,880
El estado se encuentra en los bits de bsqueda porque nuestro productor raz solo devuelve el estado anterior y

75
00:05:22,880 --> 00:05:25,620
nunca lo inicializamos para inicializarlo en un estado.

76
00:05:25,790 --> 00:05:32,210
Configurar una nueva constante que nombrar el estado inicial, ya que para todas las constantes este nombre depende de usted.

77
00:05:32,270 --> 00:05:34,280
Sin embargo, es un objeto javascript.

78
00:05:34,280 --> 00:05:38,320
Tericamente tambin podra ser simplemente un nmero o algo as.

79
00:05:38,450 --> 00:05:43,760
Por lo tanto, no tiene por qu ser un objeto, pero la mayora de las veces se debe a que tiene ms de un campo en su estado

80
00:05:43,760 --> 00:05:44,970
global la mayor parte del tiempo.

81
00:05:45,080 --> 00:05:49,330
Pero si su estado global es solo un nmero, podra configurar solo un nmero aqu.

82
00:05:49,340 --> 00:05:55,460
Sin embargo, se trata de javascript Optik y este objeto javascript debera, por ejemplo, contener.

83
00:05:55,700 --> 00:06:00,200
Mi contador puede ser cero cero inicialmente.

84
00:06:00,290 --> 00:06:07,580
Ahora en el reductor de raz usar una caracterstica provista por ESX. Puedo inicializar este argumento para la

85
00:06:07,850 --> 00:06:14,520
funcin con un valor predeterminado siempre que se llame a la funcin con este argumento no definido.

86
00:06:14,540 --> 00:06:20,690
Tomar el valor predeterminado en su lugar, un valor predeterminado se asigna simplemente agregando un signo igual y luego el valor

87
00:06:20,690 --> 00:06:22,910
que desea usar es un valor predeterminado.

88
00:06:23,150 --> 00:06:28,520
est creando esa tienda donde ejecutar el reductor por primera vez para todas las acciones subsiguientes.

89
00:06:28,520 --> 00:06:34,460
Entonces ahora tomar el estado inicial cuando el estado no est definido, que ser el caso cuando

90
00:06:34,460 --> 00:06:39,920
El reductor se habr ejecutado una vez, por lo tanto, el estado actual ser su estado inicial y podr comenzar

91
00:06:39,920 --> 00:06:43,070
a cambiar la deuda con la que est en su lugar.

92
00:06:43,070 --> 00:06:46,710
Guardemos este archivo y vamos a volver a ejecutar los conceptos bsicos de Noad redux.

93
00:06:46,790 --> 00:06:48,840
S, hacemos esto

94
00:06:48,920 --> 00:06:55,280
Ahora vemos nuestro nuevo estado all con el negocio de contador Ciro, el estado actualizado o el estado inicial.

95
00:06:55,280 --> 00:07:01,250
Debo decir que s lo es cmo creamos una tienda con un productor y cmo inicializamos el estado.

96
00:07:01,340 --> 00:07:05,150
Cmo nos suscribimos ahora al estado y enviamos acciones?

97
00:07:05,390 --> 00:07:07,900
Echemos un vistazo ms de cerca en las prximas conferencias.

