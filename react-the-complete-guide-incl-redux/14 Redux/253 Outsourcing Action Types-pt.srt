1
00:00:02,210 --> 00:00:05,270
Ns temos um olhar para o nosso produtor aqui.

2
00:00:05,490 --> 00:00:10,180
Vemos que temos todos esses casos diferentes, aumentando a edio e assim por diante.

3
00:00:10,200 --> 00:00:13,780
A histria principal resolveu todas essas coisas.

4
00:00:14,160 --> 00:00:20,820
E  claro que enfatizo que os identificadores que buscamos aqui no redutor j identificados como

5
00:00:20,820 --> 00:00:27,410
mostramos voc esto em nossos componentes de continer em nosso aplicativo onde queremos despachar essas aes.

6
00:00:27,780 --> 00:00:35,010
claro, mas sempre existe o perigo de simplesmente adicionar um pequeno erro de digitao e busc-lo

7
00:00:35,010 --> 00:00:44,100
por horas, porque no o encontramos, portanto,  uma boa prtica terceirizar seus tipos de ao em constantes que voc

8
00:00:44,100 --> 00:00:51,700
pode usar em sua aplicao, ento que voc sempre importa uma constante e elimina o perigo de engravidar.

9
00:00:51,700 --> 00:00:53,570
Ns o fazemos, 

10
00:00:53,580 --> 00:00:56,730
Isso  especialmente til  medida que seu aplicativo cresce.

11
00:00:56,880 --> 00:01:00,950
Se voc tiver apenas dois tipos de aes que voc despachou, talvez voc no precise disso.

12
00:01:01,110 --> 00:01:07,540
Mas para aplicaes maiores definitivamente adicionadas para isso, eu adicionarei e voc cai na pasta da minha loja e eu

13
00:01:07,540 --> 00:01:08,750
as chamarei de aes.

14
00:01:08,820 --> 00:01:17,910
J. S. l, podemos simplesmente exportar uma constante que voc conhece, tipicamente, d o mesmo nome que

15
00:01:17,910 --> 00:01:18,660
o identificador que teremos.

16
00:01:18,930 --> 00:01:27,510
Ento, voc poderia ter uma constante que  incremento e o valor que atribumos  apenas aquele identificador de string.

17
00:01:27,510 --> 00:01:34,920
Ento, ns apenas armazenamos essa string em uma constante agora que exportamos e ns fazemos isso por todas as nossas aes.

18
00:01:35,010 --> 00:01:39,690
Ento, todos ns temos esse comentrio aqui e o identificador  o mesmo.

19
00:01:40,020 --> 00:01:46,290
Agora, teoricamente, o nome da constante e do identificador no tem que combinar, mas  uma boa prtica,

20
00:01:46,910 --> 00:01:49,540
ento aqui temos que dizer para ADD.

21
00:01:49,860 --> 00:02:02,360
E, claro, para subtrair assim e, claro, tambm para o resultado da loja, que tambm no usamos SDH e

22
00:02:02,400 --> 00:02:08,130
o fogo e o resultado de excluso desse tipo.

23
00:02:08,130 --> 00:02:12,610
Ento, agora temos essa queda extra onde exportamos todas essas aes.

24
00:02:12,630 --> 00:02:19,530
Isso agora nos permite entrar para reduzi-la e importar as aes a partir da.

25
00:02:19,890 --> 00:02:28,140
Agora podemos simplesmente importar tudo de um determinado arquivo e armazen-lo em algum objeto javascript, talvez

26
00:02:28,140 --> 00:02:33,930
tipos de ao de aes de barra de pontos realmente tipos.

27
00:02:33,930 --> 00:02:41,990
Agora  um objeto javascript que tem todas essas propriedades aqui ou todas essas coisas aqui devo dizer.

28
00:02:42,240 --> 00:02:44,200
Como propriedades.

29
00:02:44,220 --> 00:02:54,460
Ento, agora, podemos verificar se os tipos de ao do caso so pontuais e agora aqui, que seria o incremento e o mesmo, 

30
00:02:54,460 --> 00:02:57,190
claro, em detrimento e assim por diante.

31
00:02:57,430 --> 00:03:03,990
A grande vantagem desta abordagem  simplesmente. Agora estamos importando nossas constantes aqui.

32
00:03:04,150 --> 00:03:11,710
por esse processo ousado, se ns armazenarmos e salvamos tudo ou recebemos um erro, nosso comando de exportao no foi encontrado.

33
00:03:11,710 --> 00:03:17,550
E se ns digitar um nome constante, ns realmente receberemos um erro em nossa identificao ou

34
00:03:17,560 --> 00:03:21,760
Ento eu tenho que corrigir meu erro de digitao para ter um aplicativo de trabalho novamente.

35
00:03:21,760 --> 00:03:29,950
Por isso, voc usa essa abordagem, ento eu vou substituir todas as minhas rgidas cadeias de caracteres codificadas aqui com os tipos

36
00:03:29,950 --> 00:03:30,550
de ao.

37
00:03:30,580 --> 00:03:38,240
Estou importando para subtrair adicionar e assim por diante para eliminar o perigo de digitar aqui.

38
00:03:38,290 --> 00:03:41,430
Ento, os tipos de ao armazenam o assalto.

39
00:03:41,650 --> 00:03:47,820
E, claro, tambm tipos de ao excluem resultados para que todos sejam substitudos.

40
00:03:47,990 --> 00:03:51,560
E ento eu fao o mesmo onde os despacha.

41
00:03:51,950 --> 00:03:57,400
 claro que no faz nenhum sentido ainda ter valores codificados, porque eu ainda posso perder o tipo.

42
00:03:57,530 --> 00:04:00,860
Ento, agora vou importar meus tipos de ao aqui.

43
00:04:01,360 --> 00:04:06,130
Ento importe tudo como tipos de ao e esse nome depende de voc.

44
00:04:06,130 --> 00:04:09,850
Voc pode nomear o Optik o que quiser.

45
00:04:09,990 --> 00:04:17,230
E agora simplesmente mova-se para a pasta da loja para o arquivo js aes e agora eu uso meus tipos de ao

46
00:04:17,230 --> 00:04:18,740
aqui tambm para despachar.

47
00:04:18,950 --> 00:04:23,780
Ento, aqui para o tipo de ao, incremente os tipos de cromado e assim por diante.

48
00:04:24,050 --> 00:04:31,730
misturar ou ter identificadores diferentes, porque agora temos apenas um lugar onde configuramos e armazenamos nossos identificadores.

49
00:04:31,730 --> 00:04:40,580
E, portanto, nem sempre estamos nos referindo a essa propriedade para a Constans que estamos exportando e as aes

50
00:04:40,580 --> 00:04:43,630
caem e, portanto, podemos bagunar por que

51
00:04:43,820 --> 00:04:47,550
E isso  nessa ao, o arquivo Julias.

52
00:04:47,570 --> 00:04:53,700
Ento, agora  que o aplicativo ainda deve funcionar como antes.

53
00:04:53,960 --> 00:05:00,680
Como voc pode ver, eu ainda posso adicionar e excluir resultados e mudar meu contador, mas agora eliminamos esse

54
00:05:00,770 --> 00:05:03,310
risco de uma fonte potencial de erros.

55
00:05:03,560 --> 00:05:11,090
Portanto, a terceirizao de seus tipos de ao em um arquivo separado do qual voc no importa  uma boa prtica

56
00:05:11,330 --> 00:05:15,920
especialmente  medida que sua aplicao cresce, mas no precisa fazer talha.

57
00:05:15,920 --> 00:05:17,290
Para que isso faa sentido.

