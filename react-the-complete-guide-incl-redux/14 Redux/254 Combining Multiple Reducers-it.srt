1
00:00:02,180 --> 00:00:05,330
The Last Lecture abbiamo esternalizzato i nostri tipi di azione.

2
00:00:05,450 --> 00:00:14,720
C' qualcos'altro che facciamo molto quando la nostra applicazione cresce e che si usano riduttori multipli.

3
00:00:14,810 --> 00:00:22,310
Ora ho detto che abbiamo un solo utente con redox e questo  il caso in cui tutte le

4
00:00:22,310 --> 00:00:30,560
azioni alla fine vengono incanalate attraverso un produttore, ma rilassare il pacchetto ci d un metodo di utilit che possiamo usare

5
00:00:30,560 --> 00:00:38,360
per combinare pi Cirus di ricusazione in uno in modo che noi ancora seguire lo schema di avere un solo

6
00:00:38,360 --> 00:00:39,520
produttore dietro le quinte.

7
00:00:39,530 --> 00:00:46,880
modo tale da non averne uno che ti introduca ad immaginare come si potrebbe riutilizzare l'utente man mano che aggiungiamo sempre pi

8
00:00:47,090 --> 00:00:53,270
tipi di azione che vogliamo gestire ma che possiamo dividere per feature nella nostra applicazione demo in ordine.

9
00:00:53,270 --> 00:00:58,290
Ma per noi come sviluppatori siamo in grado di suddividere il nostro codice logicamente in

10
00:00:58,340 --> 00:01:05,360
Potrebbe avere senso avere un riduttore che gestisce per contrastare e uno che gestisce i risultati anche se

11
00:01:05,360 --> 00:01:07,420
sono in qualche modo correlati.

12
00:01:07,580 --> 00:01:14,750
Tecnicamente sono diversi o gestiscono diverse parti dell'app, quindi dividerlo potrebbe avere

13
00:01:14,750 --> 00:01:15,280
senso.

14
00:01:15,290 --> 00:01:18,020
E questo  esattamente quello che faremo.

15
00:01:18,050 --> 00:01:25,520
Quindi dividiamo il nostro produttore qui in due riduttori uno per contare le parti correlate delle dichiarazioni caso

16
00:01:25,520 --> 00:01:28,800
interruttore e uno per quello relativo ai risultati.

17
00:01:28,820 --> 00:01:36,830
Quindi per questo aggiunger semplicemente qui nella cartella del negozio Moine in una nuova cartella di

18
00:01:36,830 --> 00:01:45,080
riduttori e poi aggiunger un calo che chiamer contatore S e uno che chiamer risultato Daut Julius.

19
00:01:45,150 --> 00:01:51,660
Ora copier tutto il codice dal mio produttore lo scorso autunno e lo metto nel banco J come autunno.

20
00:01:51,690 --> 00:01:58,320
Ho bisogno di regolare il payoff per le mie azioni per ora semplicemente salendo di un livello e poi eccoci

21
00:01:58,320 --> 00:02:01,200
nella cartella in cui l'azione  solo per.

22
00:02:01,760 --> 00:02:02,610
Lo stato iniziale

23
00:02:02,610 --> 00:02:07,590
Ora qui in questo autunno non ha pi bisogno di sapere dei risultati o  solo sul bancone che

24
00:02:07,670 --> 00:02:09,250
ha incontrato la colpa di Julia.

25
00:02:09,400 --> 00:02:15,360
La loro funzione ridotta appare ancora come prima di uno stato assegnato allo stato iniziale

26
00:02:15,360 --> 00:02:16,550
e riceviamo un'azione.

27
00:02:16,560 --> 00:02:22,380
Mi limito a eliminare i casi correlati al sale qui per renderlo un po 'pi sottile.

28
00:02:22,410 --> 00:02:25,320
Questo  gi il mio produttore finito.

29
00:02:25,320 --> 00:02:29,280
Possiamo nominare il tuo contatore per ridurre la sua disfunzione.

30
00:02:29,280 --> 00:02:33,000
Possiamo tutti lasciarlo riduttore di nome o qualsiasi cosa tu voglia.

31
00:02:33,000 --> 00:02:38,610
Ora sto di nuovo andando a copiare il codice dalla caduta del riduttore Jr e lo metto nei miei risultati.

32
00:02:38,620 --> 00:02:44,790
ma rimuovo tutti i casi relativi al contatore in modo che solo quelli relativi al negozio siano L.

33
00:02:44,790 --> 00:02:52,080
Chase cade di nuovo solo al POV nel file attuale e ora ho intenzione di sbarazzarmi del contatore corretto il mio

34
00:02:52,140 --> 00:02:54,910
riduttore di stato iniziale, quindi rimane ancora com',

35
00:02:54,930 --> 00:03:03,690
Si noti che  ancora X-ists contro-IED allo stato qui perch alla fine i due riduttori

36
00:03:03,690 --> 00:03:07,230
si uniranno in uno stato globale.

37
00:03:07,470 --> 00:03:12,330
Quindi ci sar ancora un contro stato in l.

38
00:03:12,330 --> 00:03:15,980
Potremmo aver bisogno di aggiornarlo pi tardi, ma vedremo.

39
00:03:16,410 --> 00:03:19,010
Quindi continuer ad esportare il mio riduttore qui.

40
00:03:19,260 --> 00:03:24,500
E questo mi permette di sbarazzarmi del mio ridotto o semplicemente cadere nella cartella del negozio.

41
00:03:24,520 --> 00:03:26,940
Ora ovviamente un indice s.

42
00:03:27,010 --> 00:03:28,900
Non ho pi un'importazione valida.

43
00:03:28,900 --> 00:03:31,120
Il tuo desiderio di usare o non esiste.

44
00:03:31,120 --> 00:03:33,140
Invece ora ho due riduttori.

45
00:03:33,220 --> 00:03:35,080
Quindi importiamoli.

46
00:03:35,080 --> 00:03:43,810
Andiamo nella cartella del negozio nella cartella dei riduttori e importiamo il contatore J come un counter counter di origine

47
00:03:43,900 --> 00:03:45,080
senza nome qui.

48
00:03:45,250 --> 00:03:51,570
Duplicher l'importazione in dentali importando il riduttore di risultati dal negozio.

49
00:03:51,580 --> 00:03:55,990
I riduttori si traducono in una caduta al vertice.

50
00:03:56,080 --> 00:04:01,640
Ora per combinarli ho bisogno di importare una funzione di supporto dal pacchetto Rydex.

51
00:04:01,720 --> 00:04:06,040
Si chiama combinare riduttori come i nomi sono gests.

52
00:04:06,070 --> 00:04:14,290
Questa  una funzione che accetta un oggetto javascript che mappa i nostri produttori in diverse sezioni del

53
00:04:14,290 --> 00:04:21,510
nostro stato come input e unisce tutto in uno stato e un produttore per noi.

54
00:04:21,510 --> 00:04:26,680
Quindi, prima di creare lo store,  stato modificato un nuovo riduttore locale costante sul nome,

55
00:04:26,680 --> 00:04:30,000
ma il nome dipende da voi e chiamer i riduttori combinati.

56
00:04:30,040 --> 00:04:38,500
creare sezioni del nostro Apso per dire qualsiasi nome tu voglia contrastare o solo CTE  quello che vuoi.

57
00:04:38,710 --> 00:04:45,850
Ora ho appena impostato questa funzione come input per un oggetto javascript e ora possiamo semplicemente

58
00:04:45,850 --> 00:04:53,650
Chiamer la citt qui e la mappa per contrastarla la ridurr e poi aggiunger la mia area

59
00:04:53,650 --> 00:04:56,710
di indirizzi con il riduttore dei risultati.

60
00:04:56,730 --> 00:05:03,750
Quindi ora stiamo dicendo a Rydex che alla fine ho avuto due diverse funzioni nella mia applicazione.

61
00:05:03,780 --> 00:05:05,400
Proteggi il nostro indirizzo.

62
00:05:05,630 --> 00:05:12,860
Si prega di utilizzare riduttori DS per ciascuno di essi e unire tutto in un unico magazzino in un

63
00:05:12,960 --> 00:05:14,980
unico stato in un riduttore.

64
00:05:15,020 --> 00:05:21,890
passiamo qui il riduttore di root per creare store e salvare tutti i file, non dovremmo avere un errore laggi.

65
00:05:21,890 --> 00:05:22,640
Se ora

66
00:05:22,670 --> 00:05:29,560
L'esecuzione di NPM  avviata nell'applicazione, tuttavia, se la ricarichiamo, verr generato un errore.

67
00:05:29,750 --> 00:05:32,930
Quella mappa non pu essere eseguita sul ritrovamento.

68
00:05:33,380 --> 00:05:40,430
E fondamentalmente qui il problema  che i risultati memorizzati dove mappiamo attraverso tutti i risultati

69
00:05:40,490 --> 00:05:49,370
memorizzati che questo non funzioner perch questi risultati memorizzati puntelli ora si riferisce a undefined e non a una serie di

70
00:05:49,370 --> 00:05:50,320
risultati pi.

71
00:05:50,480 --> 00:05:53,510
Questo ci succede combinando i riduttori.

72
00:05:53,510 --> 00:06:02,240
per evitare conflitti di denominazione, redux aggiunge un livello di nidificazione in cui ha un oggetto di stato.

73
00:06:02,600 --> 00:06:05,760
Ora avremo uno stato alla fine, ma

74
00:06:05,900 --> 00:06:13,400
Ma fondamentalmente con le chiavi di DS qui nei riduttori combinati come propriet che ci danno accesso

75
00:06:13,400 --> 00:06:21,740
a questi stati CEP per queste aree di funzionalit si potrebbe dire cos nella caduta di contatore geus se

76
00:06:22,430 --> 00:06:30,200
vogliamo accedere al contatore dobbiamo accedere allo stato globale DOT citt nostro DOT contatore dot City Art.

77
00:06:30,410 --> 00:06:38,170
Poich questo  il nome che abbiamo dato a questa porzione del nostro stato globale e in avanti il risultato sarebbe punto.

78
00:06:38,270 --> 00:06:43,130
Quindi qui  lo stato che DOT scrive in questo modo.

79
00:06:43,160 --> 00:06:47,030
Ora se salviamo questo l'applicazione non  pi rotta.

80
00:06:47,360 --> 00:06:52,180
E se ora clicco su un pulsante, funziona allo stesso modo per memorizzare i risultati.

81
00:06:52,220 --> 00:06:59,520
Quindi qui vediamo che aggiunge risultati ma in qualche modo non li aggiunge davvero.

82
00:06:59,660 --> 00:07:02,250
Non li mostri davvero qui.

83
00:07:02,270 --> 00:07:09,740
Il motivo  che il risultato memorizzato  in realt non definito perch il produttore

84
00:07:09,740 --> 00:07:20,040
di risultati memorizziamo un'istantanea qui per il disco pubblicitario di STATE non funziona perch questo contatore di stato ora non

85
00:07:20,700 --> 00:07:29,160
 noto perch questo riduttore di indice dello stato iniziale locale non ha una contro propriet.

86
00:07:29,160 --> 00:07:35,250
Ora si potrebbe pensare di aggiungere semplicemente il contatore delle citt di stato se si esegue questa operazione e si

87
00:07:35,250 --> 00:07:42,590
fa clic su Salva tutto al risultato di 10 in punto si ottiene un errore anche se tale contatore di propriet economiche non definito.

88
00:07:42,590 --> 00:07:49,020
funzione, in pratica non ha accesso allo stato globale, ma solo a quello stato spesso riduce o funziona.

89
00:07:49,410 --> 00:07:52,680
La ragione di ci  che l'intuizione riduce la

90
00:07:52,680 --> 00:07:57,820
 diverso dal componente Kountry in cui colleghiamo il nostro componente re-act allo stato globale.

91
00:07:57,960 --> 00:08:02,130
L possiamo accedere ai diversi pezzi dello stato per le nostre fette.

92
00:08:02,130 --> 00:08:03,230
Abbiamo creato un indice.

93
00:08:03,300 --> 00:08:03,890
S.

94
00:08:04,020 --> 00:08:08,060
Questo non funziona all'interno dei riduttori.

95
00:08:08,160 --> 00:08:17,750
Quindi, se siamo in un riduttore in cui dobbiamo ottenere un valore dallo stato globale, dovremmo semplicemente ottenerlo come

96
00:08:18,260 --> 00:08:20,500
carico utile di azione.

97
00:08:20,630 --> 00:08:23,590
E questo  generalmente il modo in cui i riduttori funzionano comunque.

98
00:08:23,600 --> 00:08:32,740
La maggior parte delle volte  vecchio stato pi azione pi opzionalmente dati azione e tu ritorni e dichiari.

99
00:08:33,080 --> 00:08:39,950
Quindi qui mi aspetto di ottenere la stessa propriet del risultato sulla mia azione in entrata e di ricevere

100
00:08:39,950 --> 00:08:45,090
che ho bisogno di regolare il mio file counter js l dove eseguo in negozio.

101
00:08:45,110 --> 00:08:50,510
Risultato qui ho solo bisogno di ottenere il mio risultato.

102
00:08:50,780 --> 00:09:00,480
Quindi mi aspetto di ottenere il mio risultato qui come argomento e quindi posso semplicemente passare questo insieme al tipo usato per

103
00:09:00,480 --> 00:09:01,170
la chiave.

104
00:09:01,250 --> 00:09:02,730
Hai scelto di usare qui.

105
00:09:03,590 --> 00:09:05,040
Risultato azione

106
00:09:05,100 --> 00:09:07,660
Quindi dovremmo avere una propriet risolta qui.

107
00:09:07,660 --> 00:09:16,870
Q Nell'Optik che inviamo ci leghiamo o impostiamo il valore sull'argomento risultato che ci aspettiamo di ottenere qui.

108
00:09:17,120 --> 00:09:24,110
E ora per farlo come i quattro con la cosa principale che eseguiamo quest'anno sul pulsante come funzione anonima,

109
00:09:24,110 --> 00:09:29,750
in modo che possiamo passare alcuni dati qui in negozio che assalto dovrebbe essere fatto ora.

110
00:09:29,760 --> 00:09:33,040
Puntelli Argomenti C-T dice accesso al contatore.

111
00:09:33,230 --> 00:09:36,950
E questo  in realt il valore che vogliamo memorizzare.

112
00:09:37,040 --> 00:09:44,960
negozio molto veloce dopo ogni annuncio, riceverai questo errore semplicemente perch l'ID che assegniamo  la data corrente.

113
00:09:44,960 --> 00:09:52,210
Ora, se torniamo indietro e clicco su 10, posso ancora memorizzare 10 se riscontri un assalto al

114
00:09:52,370 --> 00:09:58,160
E se lo colpisci molto rapidamente, ci sar semplicemente la stessa data assegnata due volte che porta a

115
00:09:58,160 --> 00:09:58,780
questo errore.

116
00:09:58,820 --> 00:10:03,590
Ovviamente  solo una soluzione di ID temporanea che non sei quella che useresti e produrrai.

117
00:10:03,590 --> 00:10:05,750
Quindi per me qui non importa.

118
00:10:05,750 --> 00:10:12,200
Il principale punto d'appoggio  come dividere i tuoi produttori in diverse sezioni e come tu e

119
00:10:12,200 --> 00:10:16,670
comunque assicurarti di ottenere i dati necessari in ciascuna di queste sezioni.

