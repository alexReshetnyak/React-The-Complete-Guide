1
00:00:02,150 --> 00:00:11,200
La gestione dello stato pu essere un reattore molto complesso in grado di reagire alle modifiche dello stato e di aggiornare D-y di conseguenza.

2
00:00:11,360 --> 00:00:16,450
Ma gestire questo stato pu diventare molto difficile man mano che la nostra applicazione cresce.

3
00:00:16,490 --> 00:00:22,730
Ovviamente Riak ci fornisce la propriet di stato integrata che usiamo fino ad ora ma potremmo gi

4
00:00:22,730 --> 00:00:29,750
vedere nel nostro broker costruire un progetto che passare gli ingredienti dal componente al componente B pu essere molto difficile.

5
00:00:29,930 --> 00:00:33,230
E abbiamo dovuto utilizzare i parametri di query di routing per dead.

6
00:00:33,440 --> 00:00:36,840
Sicuramente una soluzione, ma non molto elegante.

7
00:00:36,860 --> 00:00:39,750
Quindi la gestione dello stato dovrebbe essere pi facile.

8
00:00:39,770 --> 00:00:45,980
 un classico esempio di consenso o disapplicazione speciale che non  quello che abbiamo costruito.

9
00:00:46,160 --> 00:00:47,870
L'esempio del Burga Buller

10
00:00:47,980 --> 00:00:54,090
 un'app con il componente dell'app root e quindi un utente si trova in un contenitore del prodotto e alcuni sottocomponenti.

11
00:00:54,440 --> 00:01:00,890
Ora diciamo che abbiamo aggiunto l'autenticazione a questa applicazione in modo che gli utenti possano registrarsi e accedere a

12
00:01:00,890 --> 00:01:06,800
X il dashboard e l'area utenti che dobbiamo controllare se l'utente  connesso e concedere l'accesso solo se

13
00:01:06,800 --> 00:01:08,670
questo si risolve in un VERO.

14
00:01:08,930 --> 00:01:14,570
Ora controllando che non sia troppo difficile perch probabilmente stiamo gestendo lo stato di autenticazione

15
00:01:14,590 --> 00:01:16,540
e il componente off laggi.

16
00:01:16,550 --> 00:01:22,130
qualche modo dobbiamo creare una connessione tra il componente spento e un componente della scheda qui.

17
00:01:22,130 --> 00:01:28,160
Il problema ora  che se tutti abbiamo bisogno di quell'informazione in un'area completamente diversa della nostra

18
00:01:28,160 --> 00:01:34,670
app come nel Bergere Buller dove abbiamo bisogno di ingredienti in un'area completamente diversa nella cassa, se abbiamo bisogno

19
00:01:34,700 --> 00:01:35,720
di informazioni, in

20
00:01:35,900 --> 00:01:42,260
Beh, questo  un complesso super complesso e una lunga catena di genitori di Prop o di Querrey o comunque siamo

21
00:01:42,260 --> 00:01:44,240
riusciti a trasmettere dati in giro.

22
00:01:44,300 --> 00:01:50,780
 un peccato che sia cos difficile perch alla fine stiamo scrivendo javascript a destra e abbiamo un

23
00:01:50,840 --> 00:01:54,830
file javascript in bundle come output o un paio di bundle.

24
00:01:54,830 --> 00:01:56,300
Se stiamo usando il caricamento pigro.

25
00:01:56,630 --> 00:02:03,560
Quindi, alla fine, perch non possiamo semplicemente impostare qualche variabile globale che  un oggetto javascript che memorizza il nostro

26
00:02:03,560 --> 00:02:07,130
intero stato dell'applicazione e a cui possiamo accedere da qualsiasi luogo.

27
00:02:07,130 --> 00:02:10,630
Perch dobbiamo prendere la strada complicata con i parametri di query.

28
00:02:10,730 --> 00:02:18,770
Se tutto ci che facciamo  solo utilizzare javascript, alla fine il motivo  che reagisce il sistema di reattivit non reagisce

29
00:02:18,800 --> 00:02:21,940
ai cambiamenti in alcune variabili locali che hai definito.

30
00:02:22,280 --> 00:02:23,790
Ed  bene che non sia cos.

31
00:02:23,840 --> 00:02:25,610
Questo lo rende cos efficiente.

32
00:02:26,030 --> 00:02:33,320
questo memorizzer suoni ancora molto interessanti e questo  esattamente ci che Redux sta per imparare.

33
00:02:33,350 --> 00:02:34,150
Tuttavia avendo

34
00:02:34,340 --> 00:02:40,390
Diamo quindi un'occhiata pi ravvicinata a redox prima di implementare Denne per vedere come funziona in azione.

