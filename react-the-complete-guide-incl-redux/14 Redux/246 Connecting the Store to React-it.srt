1
00:00:02,220 --> 00:00:05,700
Colleghiamo qui il nostro negozio per reagire.

2
00:00:05,700 --> 00:00:08,340
Abbiamo gi un negozio non connesso.

3
00:00:08,610 --> 00:00:15,050
Ho bisogno di un pacchetto speciale perch relex da solo non  collegato a reagire.

4
00:00:15,120 --> 00:00:20,960
Lo installer con un cruscotto del cruscotto di installazione e il nome  re-act dash redux.

5
00:00:21,030 --> 00:00:22,290
Nome molto semplice, immagino.

6
00:00:22,410 --> 00:00:30,030
Fa quello che suggerisce il nome che ci permette di collegare il nostro negozio di redux alla nostra applicazione di re-act.

7
00:00:30,060 --> 00:00:34,060
Ora con quello installato posso importare qualcosa da quel pacchetto.

8
00:00:34,170 --> 00:00:38,660
Quindi importa qualcosa dai reindirizzamenti re-act.

9
00:00:38,840 --> 00:00:45,080
Ora qui che qualcosa  effettivamente un componente del provider.

10
00:00:45,250 --> 00:00:50,070
Copiamo il componente della nostra app con provider come questo.

11
00:00:50,080 --> 00:00:59,400
Quindi tu sei semplicemente un fornitore rapido come componente di supporto che ci consente di iniettare il nostro

12
00:00:59,520 --> 00:01:07,330
negozio nei componenti re-act per collegare il componente del provider con il nostro negozio qui.

13
00:01:07,470 --> 00:01:13,990
Ho bisogno di impostare una propriet che una propriet speciale si aspetta che da quel componente, naturalmente, il suo negozio denominato.

14
00:01:14,250 --> 00:01:21,270
E qui ho passato un negozio arrogato con create store che nel nostro caso  archiviato in quel negozio

15
00:01:21,810 --> 00:01:23,690
costante di moltissimi negozi qui.

16
00:01:23,760 --> 00:01:27,720
Quindi passo costante la porta della morte come un valore da smentire.

17
00:01:28,230 --> 00:01:34,500
Ora con questo il negozio  collegato alla nostra applicazione re-act almeno un po '.

18
00:01:34,550 --> 00:01:36,780
C' ancora qualcosa che manca.

19
00:01:36,780 --> 00:01:44,920
Come facciamo a ottenere i dati dal negozio come il controvalore nel nostro contenitore contatore dove leggo ora

20
00:01:44,940 --> 00:01:53,490
Menges tutto internamente bene per il debito dobbiamo collegare questo singolo contenitore con per memorizzare o per essere precisi

21
00:01:53,490 --> 00:01:59,150
alla fine quello che vogliamo fare vogliamo impostare il nostro abbonamento qui.

22
00:01:59,220 --> 00:02:04,680
Lo facciamo in modo leggermente diverso rispetto a Dizon, il famigerato calo, anche se non

23
00:02:04,680 --> 00:02:06,270
lo faremo manualmente chiamando l'abbonamento.

24
00:02:06,270 --> 00:02:10,120
Utilizzeremo invece una funzionalit fornita da tale re-act.

25
00:02:10,140 --> 00:02:13,730
Lascia che ti mostri quale funzione intendo nel contenitore contatore.

26
00:02:13,860 --> 00:02:16,610
E a proposito questo schema non cambia.

27
00:02:16,740 --> 00:02:20,850
Sono ancora i nostri componenti del container che sono riusciti a dichiarare ora.

28
00:02:20,880 --> 00:02:26,390
Non lo gestiscono da soli ma ora sono i luoghi che lo ricevono da Redux.

29
00:02:26,520 --> 00:02:32,770
Usiamo ancora componenti di container che poi possono distribuirli nei loro componenti che incorporano.

30
00:02:32,970 --> 00:02:39,360
Ma non cambiamo mai il nostro modello di avere alcuni componenti selezionati che arrivano a dichiarare e

31
00:02:39,360 --> 00:02:39,900
trasmetterli.

32
00:02:39,900 --> 00:02:45,690
Questo modello  sempre lo stesso, anche se alla fine ci libereremo dello stato pi tardi.

33
00:02:45,690 --> 00:02:55,080
Per ora importiamo qualcosa da re-act redux e questo  qualcosa che voglio importare 

34
00:02:55,190 --> 00:02:56,380
chiamato connect.

35
00:02:56,640 --> 00:03:03,160
 una funzione un componente di ordine superiore in realt un componente di ordine superiore che usiamo nell'esportazione.

36
00:03:03,180 --> 00:03:14,520
Quindi sul contatore esportare tuttavia non troppo veloce come questo ma invece connettere s stesso  una funzione che restituisce una

37
00:03:14,520 --> 00:03:18,830
funzione che prende quindi un componente come input.

38
00:03:18,840 --> 00:03:22,470
Quindi connettersi non  davvero un componente di ordine superiore.

39
00:03:22,590 --> 00:03:26,160
 una funzione che restituisce un componente di ordine superiore.

40
00:03:26,160 --> 00:03:32,490
come funzione e poich restituisce una funzione, quindi eseguiamo il risultato della connessione di questa esecuzione di funzione.

41
00:03:32,670 --> 00:03:38,400
L'idea alla base di questa complessa configurazione  semplicemente che ora Kinect pu anche essere chiamato

42
00:03:38,430 --> 00:03:45,330
Eseguiamo questo e il contatore e per questa prima esecuzione della funzione possiamo passare alcune configurazioni

43
00:03:45,330 --> 00:03:46,840
per questo contenitore dato.

44
00:03:47,220 --> 00:03:48,520
Precisamente.

45
00:03:48,540 --> 00:03:56,100
Abbiamo passato due informazioni per collegare quale parte dell'intero stato dell'applicazione ci interessa perch

46
00:03:56,100 --> 00:03:58,960
qui abbiamo solo un contatore.

47
00:03:58,980 --> 00:04:05,110
quali azioni voglio inviare perch di nuovo in applicazioni pi grandi potresti avere migliaia di azioni spedite da

48
00:04:05,310 --> 00:04:10,530
tutta l'applicazione, ma un determinato contenitore individuale pu inviare solo un paio di queste.

49
00:04:10,550 --> 00:04:18,270
Ma nelle app pi grandi potresti avere carichi e carichi di diversi stati e parti di stati che gestisci e non hai

50
00:04:18,570 --> 00:04:25,050
bisogno di tutto questo e di tutti i tuoi contenitori in modo da poter definire quale sezione dello stato

51
00:04:25,620 --> 00:04:27,660
voglio ottenere in questo contenitore e

52
00:04:28,050 --> 00:04:31,710
Quindi le azioni che vogliamo inviare e dichiarare che vogliamo ottenere.

53
00:04:31,860 --> 00:04:36,270
Iniziamo con lo stato che vuoi ottenere, creer una nuova costante.

54
00:04:36,270 --> 00:04:41,460
E per favore nota che lo faccio dopo un anno declasse dopo il mio componente.

55
00:04:41,520 --> 00:04:43,280
Prima dell'esportazione

56
00:04:43,320 --> 00:04:45,680
Quindi questa  una costante e la chiamer.

57
00:04:45,720 --> 00:04:48,390
Map state 2 puntelli.

58
00:04:48,450 --> 00:04:51,510
Questo  un nome che vedrai spesso negli articoli e nelle esercitazioni.

59
00:04:51,510 --> 00:04:56,330
Il nome  totalmente da te, ma  molto chiaro su cosa memorizzerai qui.

60
00:04:56,550 --> 00:05:03,180
Si memorizzano le istruzioni su come lo stato gestito da Rydex deve essere mappato su prop's che  possibile

61
00:05:03,180 --> 00:05:05,760
utilizzare e fa contenitore perch  importante.

62
00:05:05,940 --> 00:05:13,170
Lo stato gestito da lettura X non viene ricevuto come stato qui perch lo stato  la cosa che si modifica internamente

63
00:05:13,170 --> 00:05:14,630
dall'interno di un componente.

64
00:05:14,730 --> 00:05:16,060
Quei tempi sono finiti.

65
00:05:16,110 --> 00:05:20,910
Leggi ora l'accesso al luogo in cui gestiamo e modifichiamo lo stato, quindi non vogliamo ottenere

66
00:05:20,910 --> 00:05:24,990
nulla che possiamo cambiare internamente e gli oggetti di scena sono cambiati internamente.

67
00:05:24,990 --> 00:05:28,270
Questo  il motivo per cui mappiamo lo stato di ridondanza a oggetti di scena.

68
00:05:28,530 --> 00:05:30,160
Questo  da dove viene il nome.

69
00:05:30,190 --> 00:05:39,270
Mappa gli stati per prop's in realt memorizza una funzione che si aspetta lo stato memorizzato e leggi Acts come

70
00:05:39,270 --> 00:05:47,260
input e restituisce un oggetto javascript che  una mappa di nomi propri e sezioni dello stato memorizzate

71
00:05:47,260 --> 00:05:48,610
e lette x.

72
00:05:48,610 --> 00:05:54,610
funzione sar eventualmente eseguita dal pacchetto di relax re-act perch lo passerai ad esso.

73
00:05:54,610 --> 00:05:55,260
Ora questa

74
00:05:55,300 --> 00:05:59,200
 il nostro modo di configurare il tipo di informazioni di cui abbiamo bisogno.

75
00:05:59,230 --> 00:06:04,840
Quindi ora in questa mappa che torniamo alla tua dovremmo definire nomi propri

76
00:06:04,840 --> 00:06:07,570
che sono ovviamente totalmente a tuo piacimento.

77
00:06:07,990 --> 00:06:15,190
E poi lo stato di x e questo stato ti sar dato di nuovo leggendo X, che naturalmente raggiunger

78
00:06:15,190 --> 00:06:20,640
il tuo stato Rydex che, naturalmente, a sua volta  lo stato che hai impostato.

79
00:06:20,800 --> 00:06:29,950
Quindi ci sar una contro propriet disponibile in modo che possiamo accedere a questa propriet contatore sul nostro stato.

80
00:06:29,950 --> 00:06:36,490
e dammelo sotto forma di un nome di propriet, citt, che sono poi in grado di utilizzare qui.

81
00:06:36,560 --> 00:06:43,570
E con questo diciamo hey per favore dammi il valore del contatore nel nostro stato globale gestito da redox

82
00:06:44,910 --> 00:06:49,890
Ora con quello che abbiamo passato  quello di connettere gli Stati delle mappe agli oggetti di scena come questo.

83
00:06:49,980 --> 00:06:57,900
Quindi costante pasters che detiene questa funzione e ora connette che riceve anche il componente contatore

84
00:06:57,930 --> 00:07:02,070
sulla funzione restituita da quella prima funzione connect.

85
00:07:02,070 --> 00:07:12,530
Quindi ci d questo contenitore con accesso a questa citt che la nostra propriet ora ci consente di produrre in

86
00:07:12,560 --> 00:07:13,490
C-charge property.

87
00:07:13,680 --> 00:07:17,240
Quindi abbiamo ancora il nostro stato l e per ora lo lascer qui.

88
00:07:17,610 --> 00:07:24,210
al mio codice GSX e al contenitore contatore e l dove ho passato il valore all'uscita contatore.

89
00:07:24,210 --> 00:07:25,450
Ma posso andare

90
00:07:25,740 --> 00:07:35,220
Non passer pi il contatore di stato, ma invece la citt di questo oggetto si riferisce a questa propriet.

91
00:07:35,280 --> 00:07:41,970
Ora salviamo il file ed eseguiamo l'avvio di NPM per iniziare a creare Prozess e quindi, una

92
00:07:41,970 --> 00:07:47,360
volta avviato, dovremmo vedere che nella nostra applicazione non viene visualizzato alcun errore.

93
00:07:47,670 --> 00:07:53,980
Colpire questi pulsanti non far nulla perch chiamiamo ancora lo stato impostato su ogni clic del pulsante a

94
00:07:54,020 --> 00:08:01,080
causa del gestore di cambio contatore sconto, ma stiamo trasmettendo lo stato da Rydex qui perch il valore del contatore

95
00:08:01,080 --> 00:08:07,290
che emettiamo viene passato qui per contrastare l'output e questo si riferisce al nostro prompt CD-R, che viene

96
00:08:07,290 --> 00:08:12,480
da redux e che 0 inizialmente e al momento non abbiamo modo di cambiarlo.

97
00:08:12,640 --> 00:08:17,240
Bene, cambiamo questo nella prossima lezione e iniziamo con le azioni.

