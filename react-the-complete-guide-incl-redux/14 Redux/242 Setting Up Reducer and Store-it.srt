1
00:00:02,280 --> 00:00:07,120
Quindi, per mostrarti come lavori rilassati ho allegato un progetto a questa conferenza.

2
00:00:07,140 --> 00:00:09,870
 un progetto molto semplice con un contenitore.

3
00:00:09,870 --> 00:00:12,540
Il contenitore Kountry e due componenti.

4
00:00:12,660 --> 00:00:18,540
E poi quello che fa  che ci d questa pagina in cui abbiamo un contatore in

5
00:00:18,570 --> 00:00:24,660
alto che possiamo manipolare con questi pulsanti e questi pulsanti usano solo lo stato normale come Riak ci

6
00:00:24,660 --> 00:00:28,920
d come prima con la propriet di stato e i nostri metodi

7
00:00:28,920 --> 00:00:33,760
Quindi questo  normale, non c' niente di male a riguardo.

8
00:00:33,810 --> 00:00:36,080
Redux non  stato nemmeno installato.

9
00:00:36,240 --> 00:00:43,170
Questa  la prossima cosa che voglio fare anche se avr smesso di avviare NPM e eseguir il dash di installazione di NPM

10
00:00:43,410 --> 00:00:45,750
per salvare la lettura X basta leggere x.

11
00:00:45,780 --> 00:00:52,800
Ora imposto che la libreria di lettura X funzioni da sola e in realt la user da sola per ora ma

12
00:00:52,800 --> 00:00:57,960
presto la aggiunger alla nostra applicazione di re-act per vedere come funziona insieme ad essa.

13
00:00:57,990 --> 00:01:04,230
Quindi con tre deck installati creer un nuovo file nella cartella root accanto al pacchetto che

14
00:01:04,730 --> 00:01:05,980
Jasonville possiede e.

15
00:01:06,030 --> 00:01:07,810
Stodginess di base.

16
00:01:07,860 --> 00:01:16,580
qui non conterr alcun codice di re-act che non lo includeremo nel nostro progetto di re-act che viene eseguito con il nodo.

17
00:01:16,620 --> 00:01:18,000
Ora questo file

18
00:01:18,070 --> 00:01:24,750
J. S. invece solo per mostrare i diversi concetti di redox in un file e per dimostrare

19
00:01:24,750 --> 00:01:25,630
che  indipendente dal nostro agire.

20
00:01:26,010 --> 00:01:33,220
Quindi in questa lettura x x rays x fall voglio creare tutto ci di cui abbiamo bisogno per usare Regex.

21
00:01:33,240 --> 00:01:42,210
Questo  ovviamente il negozio che sar il mio riduttore che sar quindi un'azione probabilmente o

22
00:01:42,420 --> 00:01:45,330
un codice che invier un'azione.

23
00:01:46,020 --> 00:01:50,130
E certamente vogliamo vedere anche l'azione cristiana.

24
00:01:50,310 --> 00:01:52,010
Quindi iniziamo con la storia.

25
00:01:52,260 --> 00:01:56,090
E per questo ho bisogno di importare qualcosa da leggere x.

26
00:01:56,140 --> 00:02:03,150
Ora useremo ancora per importare qualcosa da qualcosa di sintassi in seguito quando torneremo a reagire.

27
00:02:03,210 --> 00:02:09,450
Ma dal momento che ho in programma di eseguire questo file con il nodo, ho bisogno di usare

28
00:02:09,480 --> 00:02:17,170
il nodo importa l'indice, che  tutto un nome costante che reindirizza forse e questa costante ora richieder un redux come questo.

29
00:02:17,220 --> 00:02:18,890
Ancora una volta questo richiede indici.

30
00:02:18,900 --> 00:02:23,090
Nessun testo di Chaisson e richiesto solo perch voglio mostrare quelli senza modifiche.

31
00:02:23,100 --> 00:02:26,340
Solo il primo torner presto a reagire.

32
00:02:26,340 --> 00:02:27,810
Nessun problema.

33
00:02:27,810 --> 00:02:36,090
Quindi qui posso quindi creare un nome costante creare un negozio che si riferisce a leggere X creare store create store

34
00:02:36,090 --> 00:02:38,950
come una funzione ma non eseguirlo ancora.

35
00:02:39,540 --> 00:02:46,830
Crea un negozio in quanto i nomi degli scacchi ci permettono di creare un nuovo negozio redux e di memorizzarlo in un negozio con

36
00:02:46,830 --> 00:02:47,580
nome costante.

37
00:02:47,580 --> 00:02:52,930
Ovviamente puoi dare a questa costante il nome che vuoi e qui alla fine esegui.

38
00:02:52,950 --> 00:02:55,560
Crea un negozio come questo.

39
00:02:55,560 --> 00:02:58,180
Creare un negozio come questo non far molto per.

40
00:02:58,410 --> 00:03:03,530
Un negozio deve essere inizializzato con un riduttore perch il riduttore.

41
00:03:03,630 --> 00:03:06,380
E ricorda che abbiamo un solo produttore.

42
00:03:06,390 --> 00:03:10,230
Anche se combiniamo pi elementi, saranno uniti in uno solo.

43
00:03:10,380 --> 00:03:12,990
Il riduttore  fortemente connesso al negozio.

44
00:03:13,020 --> 00:03:16,870
 l'unica cosa che pu aggiornare lo stato alla fine.

45
00:03:17,100 --> 00:03:23,580
Ecco perch abbiamo bisogno di passare il riduttore a questa funzione di creazione qui perch  cos

46
00:03:23,580 --> 00:03:25,240
strettamente connesso allo stato.

47
00:03:25,380 --> 00:03:30,050
Quindi in realt ho bisogno di creare il mio riduttore prima di crearlo.

48
00:03:30,420 --> 00:03:32,800
Quindi qui creer il mio riduttore di radici.

49
00:03:32,850 --> 00:03:39,060
Il nome, naturalmente, dipende sempre da te e questa  solo una funzione che puoi creare con la

50
00:03:39,060 --> 00:03:39,990
parola chiave function.

51
00:03:39,990 --> 00:03:44,120
Ora puoi anche usare una funzione di freccia come preferisci.

52
00:03:44,190 --> 00:03:48,640
Ora questa funzione qui riceve due argomenti.

53
00:03:48,780 --> 00:03:51,090
Il primo  lo stato corrente.

54
00:03:51,090 --> 00:03:53,400
Perch come ho detto il riduttore ottiene due argomenti.

55
00:03:53,400 --> 00:03:57,980
Stato e azione anti-statalismo del vecchio stato che poi possono aggiornare.

56
00:03:58,380 --> 00:04:00,030
Quindi lo stato  il primo argomento.

57
00:04:00,060 --> 00:04:06,750
Il secondo argomento  l'azione e quindi la funzione deve restituire una cosa e quello  lo

58
00:04:06,750 --> 00:04:07,700
stato aggiornato.

59
00:04:07,730 --> 00:04:11,770
Il pi semplice userebbe o si pu scrivere semplicemente restituisce il vecchio stato.

60
00:04:11,820 --> 00:04:15,340
Quindi questo  un riduttore valido anche se ovviamente non fa nulla.

61
00:04:15,390 --> 00:04:17,690
Restituisce solo lo stato che hai gi avuto.

62
00:04:17,970 --> 00:04:25,120
Ma pu gi usare quel riduttore e passarlo come argomento per creare un riduttore di radice memorizzato.

63
00:04:25,350 --> 00:04:31,950
Con questo nostro produttore, il nostro negozio  stato creato pensando a quel produttore e ora abbiamo un negozio creato.

64
00:04:31,950 --> 00:04:36,000
Tuttavia questo negozio manterr uno stato indefinito.

65
00:04:36,150 --> 00:04:44,700
Possiamo verificare questo dal negozio di registrazione di Konsole e ottenere lo stato che  una funzione che dovremmo

66
00:04:44,970 --> 00:04:48,350
eseguire ed estrarr lo stato dal negozio.

67
00:04:48,510 --> 00:04:50,000
Diamo un'occhiata a questo.

68
00:04:50,010 --> 00:04:55,980
Ora dobbiamo eseguire il file con il nodo j us e lo facciamo digitando il nodo nella riga di comando e quindi

69
00:04:55,980 --> 00:04:57,190
il nome del file.

70
00:04:57,210 --> 00:05:03,210
 necessario navigare nella cartella fuori da quel file prima nel terminale, anche se il mio

71
00:05:03,230 --> 00:05:10,280
caso non presenta il punto J. S. questo eseguir il file e sputer tutte le uscite del log della console.

72
00:05:10,280 --> 00:05:11,500
Proprio nel terminale.

73
00:05:11,510 --> 00:05:16,710
Quindi qui vedi undefined e quello che viene esattamente da questa dichiarazione di lock della console.

74
00:05:16,760 --> 00:05:22,880
Lo stato si trova sui bit di find perch il nostro root producer restituisce solo il vecchio stato e

75
00:05:22,880 --> 00:05:25,620
non lo inizializziamo mai per inizializzarlo in uno stato.

76
00:05:25,790 --> 00:05:32,210
Imposter una nuova costante che chiamer lo stato iniziale come per tutte le costanti che questo nome spetta a te.

77
00:05:32,270 --> 00:05:34,280
Comunque  un oggetto javascript.

78
00:05:34,280 --> 00:05:38,320
In teoria potrebbe anche essere solo un numero o qualcosa del genere.

79
00:05:38,450 --> 00:05:43,760
Quindi non deve essere oggetto ma molto spesso  perch hai pi di un campo nel tuo stato globale la

80
00:05:43,760 --> 00:05:44,970
maggior parte del tempo.

81
00:05:45,080 --> 00:05:49,330
Ma se il tuo stato globale  solo un numero potresti impostare solo un numero qui.

82
00:05:49,340 --> 00:05:55,460
Si tratta di Optik javascript per e questo oggetto javascript dovrebbe per esempio tenere.

83
00:05:55,700 --> 00:06:00,200
Il mio contatore pu inizialmente essere zero zero.

84
00:06:00,290 --> 00:06:07,580
Ora nel riduttore root user una funzione fornita da ESX. Posso inizializzare questo argomento con la funzione

85
00:06:07,850 --> 00:06:14,520
con un valore predefinito ogni volta che viene chiamata la funzione con questo argomento non definito.

86
00:06:14,540 --> 00:06:20,690
Prender il valore predefinito invece un valore predefinito viene semplicemente assegnato aggiungendo un segno di uguale e quindi il valore che

87
00:06:20,690 --> 00:06:22,910
si desidera utilizzare  un valore predefinito.

88
00:06:23,150 --> 00:06:28,520
sta creando quel negozio in cui eseguir il riduttore per la prima volta per tutte le azioni successive.

89
00:06:28,520 --> 00:06:34,460
Cos ora prender lo stato iniziale ogni volta che lo stato non  definito che sar il caso quando

90
00:06:34,460 --> 00:06:39,920
Il riduttore sar stato eseguito una volta, quindi lo stato attuale sar il tuo stato iniziale e

91
00:06:39,920 --> 00:06:43,070
potrai iniziare a cambiare il debito con quello in atto.

92
00:06:43,070 --> 00:06:46,710
Salviamo questo file e riprendiamo le nozioni di base di Redad.

93
00:06:46,790 --> 00:06:48,840
S, lo facciamo.

94
00:06:48,920 --> 00:06:55,280
Ora vediamo il nostro nuovo stato laggi con il contatore Ciro business lo stato aggiornato o lo stato iniziale.

95
00:06:55,280 --> 00:07:01,250
Devo dire che  cos che creiamo un negozio con un produttore e come inizializziamo lo stato.

96
00:07:01,340 --> 00:07:05,150
Come ora sottoscriviamo le azioni di stato e di spedizione.

97
00:07:05,390 --> 00:07:07,900
Diamo un'occhiata pi da vicino nelle prossime lezioni.

