1
00:00:02,200 --> 00:00:09,460
Prima di completare questo modulo, ci si immerge in concetti di redux avanzati pi avanti come l'esecuzione di

2
00:00:09,460 --> 00:00:12,140
codice asincrono che non abbiamo ancora trattato.

3
00:00:12,280 --> 00:00:16,070
Lascia che ti accompagni per diversi tipi di stato, una risposta a una domanda.

4
00:00:16,180 --> 00:00:20,050
Ogni stato dovrebbe essere gestito tramite Rydex.

5
00:00:20,110 --> 00:00:27,760
Perch nell'applicazione demo in questo modulo abbiamo eliminato la suddetta chiamata di stato nel componente e

6
00:00:27,760 --> 00:00:30,810
abbiamo eliminato lo stato del componente locale.

7
00:00:30,970 --> 00:00:37,140
Lo stato che abbiamo usato finora in tutte le applicazioni e progetti di re-act che abbiamo costruito nel discorso.

8
00:00:37,270 --> 00:00:44,830
Invece abbiamo usato lo stato X letto e l'invio di azioni e l'associazione del punto vendita per usare quello stato.

9
00:00:44,890 --> 00:00:47,290
 sempre l'approccio che dovresti seguire.

10
00:00:47,290 --> 00:00:50,370
Devi sempre leggere per cominciare.

11
00:00:50,650 --> 00:00:55,810
Bene, la domanda se usi o meno il redux dipende dalla dimensione della tua applicazione e dalla

12
00:00:55,810 --> 00:00:56,910
complessit del tuo stato.

13
00:00:56,950 --> 00:01:03,760
Si dispone di una semplice applicazione che la configurazione di Redox potrebbe richiedere pi tempo rispetto ai

14
00:01:03,760 --> 00:01:12,090
benefici che ne derivano ne vale la pena per qualsiasi media o grande applicazione decente utilizzando redox e gestendo lo stato

15
00:01:12,100 --> 00:01:13,960
probabilmente  una buona idea.

16
00:01:14,200 --> 00:01:19,440
Ma poi dobbiamo ancora chiedere quale stato dovrebbe essere usato per Rydex.

17
00:01:19,480 --> 00:01:23,500
Perch non dovresti necessariamente gestire tutto lo stato in esso.

18
00:01:23,920 --> 00:01:28,990
Diamo un'occhiata ai vari tipi di stato di alcuni esempi e se si dovrebbe usare Redux

19
00:01:28,990 --> 00:01:30,120
per loro o no.

20
00:01:30,370 --> 00:01:37,470
Consideriamo lo stato dell'interfaccia utente locale come mostrare o nascondere uno sfondo che apre una modale.

21
00:01:37,510 --> 00:01:45,210
Tutte queste cose che, naturalmente, cambiano di stato per aggiornare l'utente della tua applicazione di re-act e ha dovuto mostrare

22
00:01:45,210 --> 00:01:49,490
qualcosa di simile se dovessi usare il redox per il debito.

23
00:01:49,610 --> 00:01:58,500
La risposta  spesso che potresti non usare il redux che hai gestito maggiormente nei tuoi componenti.

24
00:01:58,510 --> 00:02:01,090
Detto questo puoi usare redux per quello.

25
00:02:01,120 --> 00:02:09,040
 possibile avere una propriet modale nello stato globale, inviare un'azione per impostarla su True e inviare un'azione

26
00:02:09,040 --> 00:02:10,970
per impostarla su False.

27
00:02:11,050 --> 00:02:19,360
Quindi connetti il tuo componente e ascoltati quella propriet che rendi condizionalmente uno stampo o meno ma

28
00:02:19,360 --> 00:02:21,570
che potrebbe essere eccessivo.

29
00:02:21,630 --> 00:02:26,970
Spesso non riesci a gestirlo nei tuoi componenti proprio come lo facevamo prima.

30
00:02:27,980 --> 00:02:32,650
E il numero importante di stato  lo stato permanente.

31
00:02:32,730 --> 00:02:39,100
Questo significa affermare che in genere si archiviano anche nei database del sito come gli utenti dell'applicazione.

32
00:02:39,120 --> 00:02:44,210
Tutti i messaggi di un blocco su tutti gli ordini di Berger roba del genere.

33
00:02:44,250 --> 00:02:50,310
Ora qui in genere leggi X, ma ovviamente non per tutti i dati che hai nel tuo

34
00:02:50,310 --> 00:02:55,800
database di servizio perch il redux ovviamente serve solo a gestire lo stato nella tua applicazione.

35
00:02:55,800 --> 00:03:03,630
Finch la tua applicazione  viva e tieni sempre presente quando l'utente aggiorna la tua pagina, il tuo stato

36
00:03:03,630 --> 00:03:05,030
non esiste pi.

37
00:03:05,100 --> 00:03:08,070
Quindi leggere X non  un rimpiazzo per un database.

38
00:03:08,100 --> 00:03:14,910
Invece memorizzi tali dati su un server ma le slice rilevanti sono gestite da Rydex.

39
00:03:14,970 --> 00:03:21,390
Quindi il post che stai attualmente visualizzando gli utenti attualmente necessari per visualizzare l'utente del poster attualmente

40
00:03:21,390 --> 00:03:22,360
pu essere modificato.

41
00:03:22,500 --> 00:03:27,290
Queste cose sono caricate e archiviate in una redox in modo da avere loro un livello di passaggio in modo che

42
00:03:27,300 --> 00:03:28,500
tu possa renderle sullo schermo.

43
00:03:28,680 --> 00:03:32,360
Ma questo potrebbe non includere tutti i dati che hai nel tuo database.

44
00:03:33,530 --> 00:03:41,280
E poi abbiamo lo stato tipico del client, ad esempio l'utente autenticato oi filtri impostati dall'utente.

45
00:03:41,330 --> 00:03:47,050
Quindi, se disponi di un menu a discesa, l'utente pu filtrare i tuoi post che non sono dati archiviati nel database.

46
00:03:47,120 --> 00:03:53,420
 possibile archiviare se l'utente non  adatto perch se inserisce il registro errato in informazioni

47
00:03:53,420 --> 00:03:56,110
non  necessario memorizzarlo sul server inutilmente.

48
00:03:56,120 --> 00:04:01,430
potrebbe non memorizzare i dati su un server perch non  cos importante archiviarli nel database.

49
00:04:01,430 --> 00:04:03,120
Inoltre, il filtro impostato dall'utente

50
00:04:03,170 --> 00:04:09,170
Devi assolutamente essere a conoscenza delle impostazioni del filtro sul tuo client e del tuo codice javascript

51
00:04:09,170 --> 00:04:13,700
nell'applicazione re-act, anche se questo  lo stato che sicuramente usi per rilassarti.

52
00:04:13,760 --> 00:04:21,080
L'hai gestito tramite redux perch potrebbe influire su pi componenti o aree della tua applicazione.

53
00:04:21,290 --> 00:04:26,870
Ad esempio, se l'utente  offeso, potrebbe essere importante per molti componenti nella

54
00:04:27,230 --> 00:04:33,640
tua app e la loro X brilla davvero perch lo storage centrale offre un enorme vantaggio.

55
00:04:33,650 --> 00:04:37,500
Quindi questi sono due diversi tipi di stato e come li gestisci.

56
00:04:37,820 --> 00:04:43,820
di tutto ci nei prossimi moduli quando aggiungiamo anche redux al nostro progetto di corso.

57
00:04:43,820 --> 00:04:44,960
Ora vedremo esempi

58
00:04:44,960 --> 00:04:46,520
Prima di farlo per.

59
00:04:46,700 --> 00:04:48,380
 tempo di praticare il relax.

