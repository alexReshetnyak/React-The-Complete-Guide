1
00:00:02,200 --> 00:00:09,460
Antes de concluir este mdulo e mergulhar em conceitos redux mais avanados mais tarde, como executar

2
00:00:09,460 --> 00:00:12,140
cdigo assncrono que ainda no cobrimos.

3
00:00:12,280 --> 00:00:16,070
Deixe-me andar por diferentes tipos de Estado e responder a uma pergunta.

4
00:00:16,180 --> 00:00:20,050
Cada estado deve ser tratado atravs da Rydex.

5
00:00:20,110 --> 00:00:27,760
Porque na aplicao de demonstrao neste mdulo eliminamos a referida chamada de Estado no componente e

6
00:00:27,760 --> 00:00:30,810
eliminamos o estado do componente local.

7
00:00:30,970 --> 00:00:37,140
O estado que usamos at agora em todas as aplicaes de reao e projetos que construmos no discurso.

8
00:00:37,270 --> 00:00:44,830
Em vez disso, usamos o estado X e a ao de despachar e armazenar a ligao para usar esse estado.

9
00:00:44,890 --> 00:00:47,290
 sempre a abordagem que voc deve seguir.

10
00:00:47,290 --> 00:00:50,370
Voc sempre deve usar a leitura para comear.

11
00:00:50,650 --> 00:00:55,810
Bem, a questo de saber se voc usa o redux ou no depende do tamanho da sua aplicao e da

12
00:00:55,810 --> 00:00:56,910
complexidade do seu estado.

13
00:00:56,950 --> 00:01:03,760
Voc tem uma simples configurao de um aplicativo pequeno redox pode levar voc mais do que os benefcios

14
00:01:03,760 --> 00:01:12,090
que voc sai da pena valer a pena por qualquer tamanho decente ou grande aplicao usando redox e gerenciando o estado, provavelmente

15
00:01:12,100 --> 00:01:13,960
 uma boa idia.

16
00:01:14,200 --> 00:01:19,440
Mas, ento, ainda temos que perguntar qual estado deve ser usado para a Rydex.

17
00:01:19,480 --> 00:01:23,500
Porque voc no deve necessariamente administrar todo o estado nele.

18
00:01:23,920 --> 00:01:28,990
Vamos dar uma olhada nos vrios tipos de estado, alguns exemplos e se voc deve usar o redux

19
00:01:28,990 --> 00:01:30,120
para eles ou no.

20
00:01:30,370 --> 00:01:37,470
Consideremos o estado da UI local, como mostrar ou esconder um pano de fundo abrindo um modal.

21
00:01:37,510 --> 00:01:45,210
Todas essas coisas que, naturalmente, mudam para o estado para atualiz-lo do seu aplicativo de reao e teve que

22
00:01:45,210 --> 00:01:49,490
mostrar algo pago se voc usar o redox para dvidas.

23
00:01:49,610 --> 00:01:58,500
A resposta , muitas vezes, voc no pode usar o redux que voc lidou principalmente com seus componentes.

24
00:01:58,510 --> 00:02:01,090
Dito isto, voc pode usar o redux para isso.

25
00:02:01,120 --> 00:02:09,040
Voc pode ter uma propriedade modal de exibio em seu estado global enviar uma ao para configur-la como verdadeira e enviar uma

26
00:02:09,040 --> 00:02:10,970
ao para configur-la como False.

27
00:02:11,050 --> 00:02:19,360
Em seguida, conecte seu componente e ouve essa propriedade que voc processa condicionalmente um molde ou no, mas

28
00:02:19,360 --> 00:02:21,570
isso pode ser um exagero.

29
00:02:21,630 --> 00:02:26,970
Muitas vezes voc no pode lidar com isso dentro de seus componentes, assim como fizemos isso antes.

30
00:02:27,980 --> 00:02:32,650
E o tipo importante de estado do nmero  o estado persistente.

31
00:02:32,730 --> 00:02:39,100
Isso significa que voc normalmente tambm pode armazenar em bancos de dados do site, como os usurios do seu aplicativo.

32
00:02:39,120 --> 00:02:44,210
Todas as postagens de um bloco de todos Berger ordens coisas assim.

33
00:02:44,250 --> 00:02:50,310
Agora, voc normalmente l o X, mas  claro que no  para todos os dados que voc possui no banco de

34
00:02:50,310 --> 00:02:55,800
dados do lado do servio porque o redux,  claro,  apenas para gerenciar o estado em sua aplicao.

35
00:02:55,800 --> 00:03:03,630
Enquanto sua aplicao estiver viva e tenha sempre em mente quando o usurio atualiza sua pgina,

36
00:03:03,630 --> 00:03:05,030
seu estado desapareceu.

37
00:03:05,100 --> 00:03:08,070
Ento, l X no  um substituto para um banco de dados.

38
00:03:08,100 --> 00:03:14,910
Em vez disso, voc armazena tais dados em um servidor, mas as fatias relevantes so gerenciadas pelo Rydex.

39
00:03:14,970 --> 00:03:21,390
Portanto, a publicao que voc est exibindo os usurios que voc precisa atualmente para exibir o usurio do poster

40
00:03:21,390 --> 00:03:22,360
atualmente pode editar.

41
00:03:22,500 --> 00:03:27,290
Essas coisas so carregadas e armazenadas em um redox para que voc tenha um nvel de modo para que

42
00:03:27,300 --> 00:03:28,500
voc possa process-los na tela.

43
00:03:28,680 --> 00:03:32,360
Mas isso pode no incluir todos os dados que voc tem em seu banco de dados.

44
00:03:33,530 --> 00:03:41,280
E ento temos coisas tpicas do estado do cliente, como o usurio autenticado ou os filtros definidos pelo usurio.

45
00:03:41,330 --> 00:03:47,050
Ento, se voc tiver um menu suspenso, o usurio pode filtrar suas postagens que no so dados armazenados no banco de dados.

46
00:03:47,120 --> 00:03:53,420
Voc pode armazenar se o usurio estiver acessado porque, se ele entrar no log errado em

47
00:03:53,420 --> 00:03:56,110
informaes, no precisa armazen-lo no servidor desnecessariamente.

48
00:03:56,120 --> 00:04:01,430
usurio pode no armazenar dados em um servidor porque no  importante armazen-lo no banco de dados.

49
00:04:01,430 --> 00:04:03,120
Alm disso, o filtro definido pelo

50
00:04:03,170 --> 00:04:09,170
Voc definitivamente precisa estar ciente das configuraes de filtro em seu cliente e seu cdigo javascript no aplicativo de

51
00:04:09,170 --> 00:04:13,700
reao, embora este seja um estado em que voc definitivamente use relaxar para isso.

52
00:04:13,760 --> 00:04:21,080
Voc gerenciou isso via redux porque isso pode afetar vrios componentes ou reas do seu aplicativo.

53
00:04:21,290 --> 00:04:26,870
Por exemplo, se o usurio estiver ofendido, pode ser importante para muitos componentes no

54
00:04:27,230 --> 00:04:33,640
seu aplicativo e o seu X realmente brilha porque o armazenamento central oferece uma grande vantagem.

55
00:04:33,650 --> 00:04:37,500
Ento, estes so dois tipos diferentes de estado e como voc lida com eles.

56
00:04:37,820 --> 00:04:43,820
de tudo isso nos prximos mdulos quando tambm adicionar redux ao nosso projeto de curso.

57
00:04:43,820 --> 00:04:44,960
Agora, veremos exemplos

58
00:04:44,960 --> 00:04:46,520
Antes de fazer isso, no entanto.

59
00:04:46,700 --> 00:04:48,380
 hora de praticar relaxar.

