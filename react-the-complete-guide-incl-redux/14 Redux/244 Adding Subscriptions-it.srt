1
00:00:02,230 --> 00:00:07,750
Quindi, durante le ultime lezioni, abbiamo aggiunto o creato il nostro negozio e abbiamo aggiunto delle azioni.

2
00:00:07,750 --> 00:00:15,880
Ora voglio anche aggiungere le mie sottoscrizioni agli abbonamenti assicurarmi di non dover richiamare manualmente lo stato get qui nel mio codice se

3
00:00:15,880 --> 00:00:23,530
voglio ottenere lo snapshot dello stato corrente ma di informarmi ogni volta che ho bisogno di ottenere un nuovo stato perch qualcosa

4
00:00:23,530 --> 00:00:28,880
 cambiato a causa di un fare manualmente come qui nel log di una console.

5
00:00:29,020 --> 00:00:31,370
Devo sempre indovinare se qualcosa  cambiato.

6
00:00:31,480 --> 00:00:39,720
Quindi, come faccio a creare un abbonamento, quindi accedo al mio negozio e l ho un metodo di sottoscrizione che posso eseguire.

7
00:00:40,150 --> 00:00:46,890
Ora subscribe accetta un argomento una funzione che verr eseguita quando lo stato viene aggiornato.

8
00:00:47,050 --> 00:00:55,260
Quindi, ogni volta che ection ha raggiunto per ridurre la funzione passata per la sottoscrizione, non ottiene alcun argomento.

9
00:00:55,300 --> 00:00:59,450
Quindi siete tutti abituati a sei frecce testo Arison con parentesi vuote.

10
00:00:59,740 --> 00:01:05,660
E poi nel corpo della funzione possiamo eseguire qualsiasi codice che vogliamo sugli aggiornamenti di stato.

11
00:01:05,680 --> 00:01:09,350
Quindi sei tutto un abbonamento a Lague.

12
00:01:09,400 --> 00:01:12,370
Solo un pennarello in modo che io veda da dove viene questo.

13
00:01:12,520 --> 00:01:18,370
E ora posso anche raggiungere il negozio e ottenere il mio stato l che ottenere lo stato metodo  lo

14
00:01:18,370 --> 00:01:19,360
stesso di prima.

15
00:01:19,420 --> 00:01:26,140
La differenza  che ora so che dovrei ottenere lo stato qui perch so qualcosa

16
00:01:26,770 --> 00:01:28,680
cambiato e abbonamento morto.

17
00:01:28,750 --> 00:01:35,380
In realt, di solito, viene creato in genere subito dopo la creazione del negozio, cos da essere

18
00:01:35,440 --> 00:01:37,530
informato su eventuali spedizioni future.

19
00:01:37,870 --> 00:01:43,990
Quindi nota che l'iscrizione viene prima di inviare le azioni e questa funzione nel metodo SUBSCRIBE verr

20
00:01:44,560 --> 00:01:49,190
eseguita ogni volta che viene inviata un'azione e la trama viene modificata.

21
00:01:49,270 --> 00:01:57,450
Con ci, ripetiamo quelli con il nodo relax basics J. S. e ci che vediamo  che prima di

22
00:01:57,450 --> 00:02:01,590
tutto otteniamo l'output per la console, dopo aver creato il negozio.

23
00:02:02,650 --> 00:02:10,140
E poi arrivo a scegliere gli abbonamenti e poi l'output qui dopo che l'azione  stata applicata.

24
00:02:10,170 --> 00:02:15,730
allo stato precedente all'istruzione di blocco Descanso, ma perch viene attivato quando viene inviata un'azione.

25
00:02:15,730 --> 00:02:20,910
Ora posso scegliere gli abbonamenti in uscita non perch l'abbonamento arriva prima che arrivi

26
00:02:20,980 --> 00:02:24,150
Che ovviamente accade prima di fare questa dichiarazione del log della console.

27
00:02:25,340 --> 00:02:27,260
Ecco come funziona un abbonamento.

28
00:02:27,260 --> 00:02:31,010
Si innesca ogni volta che lo stato viene aggiornato.

29
00:02:31,010 --> 00:02:35,600
Ora  tutto molto bello e questo ci mostra tutti gli elementi costitutivi di Redux.

30
00:02:35,600 --> 00:02:41,100
Tuttavia non ci mostra come questo si adatta alla nostra applicazione di re-act.

31
00:02:41,420 --> 00:02:44,150
Quindi vediamo come colleghiamo reagisce per reagire.

32
00:02:44,150 --> 00:02:45,380
Nei prossimi Nycteris.

