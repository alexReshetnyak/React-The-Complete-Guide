1
00:00:02,060 --> 00:00:08,940
As que comencemos a configurar un prximo proyecto de JS, puede encontrar todas las instrucciones en esa pgina github y

2
00:00:08,960 --> 00:00:15,230
ese es un gran lugar para sumergirse ms profundamente. Como puede ver all, nextjs en la ltima versin en el

3
00:00:15,230 --> 00:00:21,550
momento en que estoy grabando esto requiere reaccionar 16, lo que bajo el cap introdujo algunos cambios bruscos y cul es

4
00:00:21,620 --> 00:00:24,330
la versin que usamos a lo largo del curso.

5
00:00:24,770 --> 00:00:28,150
As que estamos bien, vamos a usar esa

6
00:00:28,340 --> 00:00:30,550
versin aqu tambin y ahora

7
00:00:30,570 --> 00:00:37,290
instalemos nextjs, este paquete con este comando, como ves, tambin puedes instalar reaccionar y reaccionar-dom.

8
00:00:37,640 --> 00:00:40,100
Ahora para ejecutar esto, necesitas un proyecto vaco

9
00:00:40,100 --> 00:00:43,120
y aqu ya tengo uno cargado en mi IDE, lo

10
00:00:43,130 --> 00:00:46,980
nico que tengo aqu es un archivo de gitignore porque usar git.

11
00:00:47,240 --> 00:00:53,720
Ahora, antes que nada, para poder ejecutar comandos npm, necesitamos poner este proyecto bajo control de npm, esto se

12
00:00:53,720 --> 00:00:59,150
hace ejecutando npm init, luego se le hacen un par de preguntas que simplemente puede responder

13
00:00:59,150 --> 00:01:02,840
con solo presionar enter . Una vez que haya realizado todas

14
00:01:02,840 --> 00:01:06,510
estas preguntas, obtendr un paquete. json archivo que se utiliza para administrar las dependencias.

15
00:01:06,710 --> 00:01:12,830
Hablo sobre la creacin de este archivo con ms detalle en el mdulo donde creamos nuestra propia configuracin

16
00:01:12,830 --> 00:01:14,180
de proyecto desde cero.

17
00:01:14,450 --> 00:01:21,320
Ahora podemos ejecutar el comando que vio en la pgina de github aqu, instalar npm --guarde con estos

18
00:01:21,500 --> 00:01:23,650
tres paquetes, luego, reaccionar y reaccionar,

19
00:01:23,700 --> 00:01:28,540
porque nextjs es una aplicacin de creacin de biblioteca en reaccionar, le da

20
00:01:28,550 --> 00:01:34,280
caractersticas adicionales pero detrs de las escenas o tambin, desde la perspectiva del cdigo, lo

21
00:01:34,280 --> 00:01:37,830
que vas a escribir, an as todo reacciona.

22
00:01:37,850 --> 00:01:43,400
Una vez que este comando finalice y todos estos paquetes estn instalados en sus ltimas versiones,

23
00:01:43,400 --> 00:01:46,600
podemos volver al repositorio de github para encontrar ms instrucciones.

24
00:01:46,640 --> 00:01:50,520
Ahora deberamos agregar esta seccin de scripts al paquete. json as que

25
00:01:50,680 --> 00:01:56,900
hagmoslo, en el paquete. json file, en realidad tenemos una seccin de

26
00:01:56,900 --> 00:02:03,890
script, podemos reemplazarla por la que acabamos de obtener de nuestro archivo github aqu, por lo que

27
00:02:04,090 --> 00:02:06,380
el script debe agregarse as.

28
00:02:06,380 --> 00:02:08,440
Con eso, podemos comenzar a

29
00:02:08,450 --> 00:02:11,090
usarlo y ahora que tenemos ese

30
00:02:11,120 --> 00:02:15,880
importante sistema de archivos del que estaba hablando, en nextjs, el

31
00:02:15,920 --> 00:02:24,110
sistema de archivos es nuestra API principal, no usamos el enrutador reaccionar con nextjs para crear rutas y permitir

32
00:02:24,110 --> 00:02:25,470
al usuario para

33
00:02:25,700 --> 00:02:36,290
visitar / auth, / user, etc., en su lugar creamos carpetas y archivos para reflejar nuestras URL en el sistema de archivos y nextJS, el

34
00:02:36,470 --> 00:02:42,870
paquete automticamente analizar eso y usar su propio enrutador interno para manejar todo el trabajo pesado.

35
00:02:42,950 --> 00:02:53,040
Ahora, a lo largo del camino, renderiza previamente el contenido que cargamos como pginas en el servidor, se divide automticamente en cdigos, por lo que

36
00:02:53,120 --> 00:02:58,670
las cargas diferidas, todo eso fuera de la caja sin que nosotros configuremos nada.

37
00:02:58,700 --> 00:03:04,170
Es por eso que el prximo es un paquete tan bueno y podra valer la pena examinarlo

38
00:03:04,190 --> 00:03:10,880
en su prximo proyecto, muchas cosas solo funcionan de inmediato al precio de tener que mantener cierta estructura de archivos.

39
00:03:11,540 --> 00:03:15,560
Esa estructura de archivos se trata principalmente de esa

40
00:03:15,710 --> 00:03:21,820
carpeta de pginas, vamos a crearla. Usted lo crea directamente en la carpeta raz junto

41
00:03:21,830 --> 00:03:27,470
a los mdulos de nodo y los otros archivos aqu, entonces, crea una nueva carpeta de pginas

42
00:03:27,470 --> 00:03:34,730
y all crea ahora los archivos javascript que reaccionarn componente que contendr y exportar los componentes de reaccin y estos nombres

43
00:03:34,760 --> 00:03:40,870
de archivo ahora definen las diferentes rutas que tiene. Tambin puede tener una subcarpeta como auth

44
00:03:40,940 --> 00:03:47,270
all y all agregar, por ejemplo, usuario. js, llegara a este archivo en su dominio /

45
00:03:47,270 --> 00:03:52,440
auth / usuario, si nombra este ndice. js, lo alcanzaras en / auth.

46
00:03:52,520 --> 00:03:56,150
Agreguemos tambin un ndice. js archivo en la carpeta

47
00:03:56,210 --> 00:04:02,060
de pginas, ahora tenemos algo como ejemplo. com / y llegara a ese archivo y / auth y

48
00:04:02,060 --> 00:04:02,990
llegara a ese archivo.

49
00:04:02,990 --> 00:04:05,060
Ahora, agreguemos un componente en ambos y, por

50
00:04:05,150 --> 00:04:10,520
lo general, aqu, usted usa componentes funcionales pero, por supuesto, tambin puede usar los que tienen estado con las palabras

51
00:04:10,520 --> 00:04:13,700
clave de clase en caso de que necesite administrar el estado.

52
00:04:14,120 --> 00:04:16,490
As que vamos a crear uno funcional

53
00:04:16,580 --> 00:04:21,260
aqu, voy a nombrar esta pgina de ndice, sin embargo, el nombre depende de

54
00:04:21,650 --> 00:04:26,330
usted y usted sabe que la sintaxis aqu, donde podra recibir accesorios, devolver algo.

55
00:04:26,330 --> 00:04:32,750
Ahora lo que voy a hacer es importar reaccionar de reaccionar, as como lo aprendiste en este curso, eso

56
00:04:32,750 --> 00:04:35,430
no cambia porque todava estamos usando jsx aqu,

57
00:04:35,570 --> 00:04:38,150
bueno todava no, pero lo haremos en un

58
00:04:38,150 --> 00:04:40,810
segundo y yo export indexPage como predeterminado.

59
00:04:40,820 --> 00:04:41,570
Eso es

60
00:04:41,570 --> 00:04:46,720
importante, todava necesita exportar esta otherwsie nextjs no puede hacer nada con eso.

61
00:04:46,730 --> 00:04:48,730
As que ahora simplemente

62
00:04:48,730 --> 00:05:00,860
agreguemos algn cdigo aqu, como un div donde decimos h1 la pgina principal, as. Ahora copiar todo ese cdigo y lo

63
00:05:00,860 --> 00:05:09,100
pondr en el otro ndice. js, nombrar este authIndexPage y, por supuesto, exportar esta constante

64
00:05:09,320 --> 00:05:12,750
y all dir la pgina de ndice de autenticacin.

65
00:05:12,770 --> 00:05:13,900
Ahora guardemos eso

66
00:05:13,910 --> 00:05:17,860
y ahora ejecutemos uno de los scripts que agregamos, dev.

67
00:05:17,870 --> 00:05:25,400
Ahora bien, si ejecuta npm run dev, se activar un servidor de desarrollo que construir su aplicacin y servidor, lo que tambin le

68
00:05:25,400 --> 00:05:29,770
dar cosas como la recarga en caliente, lo que lo convierte en un

69
00:05:29,810 --> 00:05:31,580
entorno de desarrollo realmente agradable.

70
00:05:31,730 --> 00:05:39,020
Si ahora vuelve al navegador, puede cargarlo en una nueva pestaa en localhost: 3000, all debera ver

71
00:05:39,470 --> 00:05:45,970
su pgina y si ahora va a / auth, ver la pgina de ndice de autenticacin.

72
00:05:46,070 --> 00:05:52,790
Entonces, sin nosotros configurar ningn enrutamiento, podemos cargar estos dos componentes diferentes como pginas y, como dije, estos

73
00:05:52,790 --> 00:05:55,880
componentes no tienen que ser componentes funcionales, tambin

74
00:05:55,880 --> 00:05:58,030
podran ser componentes basados en clases.

