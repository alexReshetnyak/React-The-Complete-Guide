1
00:00:02,060 --> 00:00:08,940
Zacznijmy wic od przygotowania projektu nextJS, znajdziesz wszystkie instrukcje na stronie github i to

2
00:00:08,960 --> 00:00:15,230
jest wietne miejsce do nurkowania gbiej. Jak widzicie, nextjs w najnowszej wersji w momencie,

3
00:00:15,230 --> 00:00:21,550
w ktrym nagrywam to wymaga reakcji 16, ktra pod mask wprowadzia kilka przeomowych zmian i ktra

4
00:00:21,620 --> 00:00:24,330
jest wersj, ktrej uywalimy podczas caego kursu.

5
00:00:24,770 --> 00:00:28,150
Wic nic nam nie bdzie, uyjemy rwnie

6
00:00:28,340 --> 00:00:30,550
tej wersji, a teraz zainstalujmy

7
00:00:30,570 --> 00:00:37,290
nextjs, ten pakiet za pomoc tego polecenia, jak widzicie, nadal instalujecie reagowa i reagowa-dom.

8
00:00:37,640 --> 00:00:40,100
Teraz, aby uruchomi to, potrzebujesz pustego projektu

9
00:00:40,100 --> 00:00:43,120
i tutaj mam ju zaadowany do mojego IDE,

10
00:00:43,130 --> 00:00:46,980
jedyne co mam tutaj to plik gitignore, poniewa bd uywa gita.

11
00:00:47,240 --> 00:00:53,720
Teraz przede wszystkim, aby mc uruchamia polecenia npm, musimy umieci ten projekt pod kontrol npm, robisz to

12
00:00:53,720 --> 00:00:59,150
uruchamiajc npm init, nastpnie zadajesz kilka pyta, na ktre moesz po prostu odpowiedzie yes,

13
00:00:59,150 --> 00:01:02,840
po prostu wciskajc enter . Po przejciu wszystkich tych

14
00:01:02,840 --> 00:01:06,510
pyta otrzymasz pakiet. plik json, ktry suy do zarzdzania zalenociami.

15
00:01:06,710 --> 00:01:12,830
Mwi o stworzeniu tego pliku w nieco bardziej szczegowy sposb w module, w ktrym tworzymy wasny

16
00:01:12,830 --> 00:01:14,180
projekt skonfigurowany od zera.

17
00:01:14,450 --> 00:01:21,320
Teraz moemy uruchomi polecenie, ktre widzielimy na stronie github tutaj, npm install - zapisz

18
00:01:21,500 --> 00:01:23,650
si z tymi trzema

19
00:01:23,700 --> 00:01:28,540
pakietami, nastpnie reaguj i reaguj-dom, poniewa nextjs jest aplikacj budujc

20
00:01:28,550 --> 00:01:34,280
bibliotek na reakcj, daje dodatkowe funkcje, ale za kulisami lub te

21
00:01:34,280 --> 00:01:37,830
z perspektywy kodu, co napiszesz, wci reaguj.

22
00:01:37,850 --> 00:01:43,400
Po zakoczeniu tego polecenia i zainstalowaniu wszystkich pakietw w ich najnowszych wersjach moemy

23
00:01:43,400 --> 00:01:46,600
wrci do repozytorium github, aby znale wicej instrukcji.

24
00:01:46,640 --> 00:01:50,520
Powinnimy teraz doda t sekcj skryptw do pakietu. json, zrbmy

25
00:01:50,680 --> 00:01:56,900
to w pakiecie. Plik json, waciwie mamy sekcj skryptu, moemy

26
00:01:56,900 --> 00:02:03,890
j zastpi t, ktr wanie pobieralimy z naszego pliku github tutaj, wic skrypt powinien by

27
00:02:04,090 --> 00:02:06,380
dodany w ten sposb.

28
00:02:06,380 --> 00:02:08,440
Dziki temu moemy zacz

29
00:02:08,450 --> 00:02:11,090
go uywa, a teraz, gdy mamy

30
00:02:11,120 --> 00:02:15,880
ten wany system plikw, o ktrym mwiem, w nextjs, system

31
00:02:15,920 --> 00:02:24,110
plikw jest naszym gwnym API, nie uywamy routera reagowania z nextjs do tworzenia tras i zezwalamy uytkownikowi

32
00:02:24,110 --> 00:02:25,470
do odwiedzenia /

33
00:02:25,700 --> 00:02:36,290
auth, / user i tak dalej, zamiast tego tworzymy foldery i pliki, aby odzwierciedli nasze adresy URL w systemie plikw i nextJS,

34
00:02:36,470 --> 00:02:42,870
pakiet automatycznie przeanalizuje to i uyje wasnego wewntrznego routera do obsugi wszystkich cikich dwigw.

35
00:02:42,950 --> 00:02:53,040
Teraz, po drodze, renderuje zawarto, ktr adujemy jako strony na serwerze, automatycznie koduje podziay, tak wic leniwy aduje si,

36
00:02:53,120 --> 00:02:58,670
wszystko to po wyjciu z pudeka bez koniecznoci konfigurowania czegokolwiek.

37
00:02:58,700 --> 00:03:04,170
Wanie dlatego nastpny jest tak wietnym pakietem i moe by wart obejrzenia w twoim

38
00:03:04,190 --> 00:03:10,880
nastpnym projekcie, wiele rzeczy jest po prostu pracujcych po wyjciu z pudeka, za cen utrzymywania okrelonej struktury plikw.

39
00:03:11,540 --> 00:03:15,560
Ta struktura plikw dotyczy gwnie tego

40
00:03:15,710 --> 00:03:21,820
folderu stron, wic stwrzmy go. Tworzysz go bezporednio w folderze gwnym obok moduw

41
00:03:21,830 --> 00:03:27,470
wza i innych plikw tutaj, wic tam tworzysz nowe strony folderw i tam tworzysz

42
00:03:27,470 --> 00:03:34,730
teraz pliki javascript, ktre bd reagowa na komponent, ktry bdzie przechowywa i eksportowa komponenty reakcji i te nazwy

43
00:03:34,760 --> 00:03:40,870
plikw definiuj teraz rne cieki, ktre posiadasz. Moesz take mie podfolder taki jak

44
00:03:40,940 --> 00:03:47,270
auth i tam doda na przykad uytkownika. js, moesz dotrze do tego pliku w domenie /

45
00:03:47,270 --> 00:03:52,440
auth / user, jeli nazwiesz ten indeks. js, osigniesz to w / auth.

46
00:03:52,520 --> 00:03:56,150
Dodajmy rwnie indeks. Plik js w folderze

47
00:03:56,210 --> 00:04:02,060
stron, teraz mamy co takiego jak przykad. com / i dotrze do tego pliku i / auth i

48
00:04:02,060 --> 00:04:02,990
dotrze do tego pliku.

49
00:04:02,990 --> 00:04:05,060
Teraz dodajmy komponent w obu

50
00:04:05,150 --> 00:04:10,520
i zazwyczaj tutaj, korzystasz z funkcjonalnych komponentw, ale oczywicie moesz rwnie uywa stanowych z

51
00:04:10,520 --> 00:04:13,700
klasowymi sowami kluczowymi na wypadek, gdyby potrzebowa zarzdzania stanem.

52
00:04:14,120 --> 00:04:16,490
Stwrzmy tutaj funkcjonaln, nazwij

53
00:04:16,580 --> 00:04:21,260
t stron IndexPage, nazwa zaley od Ciebie i wiesz,

54
00:04:21,650 --> 00:04:26,330
e skadnia tutaj, gdzie moesz otrzyma rekwizyty, zwraca co.

55
00:04:26,330 --> 00:04:32,750
Teraz wszystko, co zrobi, to reakcja wszystkich importw na reakcje, tak jak nauczylicie si tego na tym

56
00:04:32,750 --> 00:04:35,430
kursie, to si nie zmienia, poniewa wci

57
00:04:35,570 --> 00:04:38,150
uywamy jsx, jeszcze nie, ale zrobimy to

58
00:04:38,150 --> 00:04:40,810
za sekund, a ja eksportuj indexPage jako domylny.

59
00:04:40,820 --> 00:04:41,570
To wane,

60
00:04:41,570 --> 00:04:46,720
nadal musisz wyeksportowa ten drugi plik, ktrego nextjs nie moe z tym zrobi.

61
00:04:46,730 --> 00:04:48,730
Teraz dodajmy po prostu

62
00:04:48,730 --> 00:05:00,860
troch kodu, na przykad div, gdzie mwimy h1 na stronie gwnej, w ten sposb. Teraz skopiuj cay ten kod i wstawi

63
00:05:00,860 --> 00:05:09,100
go do drugiego indeksu. Plik js, nazw tego authIndexPage i oczywicie wyeksportuj t

64
00:05:09,320 --> 00:05:12,750
sta i tam, powiem stron indeksu auth.

65
00:05:12,770 --> 00:05:13,900
Teraz zapiszmy to,

66
00:05:13,910 --> 00:05:17,860
a teraz uruchommy jeden ze skryptw, ktre dodalimy, dev.

67
00:05:17,870 --> 00:05:25,400
Teraz, jeli uruchomisz npm run dev, to rozwiniesz serwer deweloperski budujcy twoj stron aplikacji i serwera,

68
00:05:25,400 --> 00:05:29,770
co da ci takie rzeczy jak hot reloading, wic

69
00:05:29,810 --> 00:05:31,580
naprawd fajne rodowisko programistyczne.

70
00:05:31,730 --> 00:05:39,020
Jeli teraz wrcisz do przegldarki, moesz zaadowa j w nowej zakadce pod localhost: 3000, tam powiniene

71
00:05:39,470 --> 00:05:45,970
zobaczy swoj stron i jeli przejdziesz teraz do / auth, zobaczysz stron indeksu auth.

72
00:05:46,070 --> 00:05:52,790
Dlatego bez konfigurowania routingu moemy zaadowa te dwa rne komponenty jako strony i jak ju powiedziaem, te

73
00:05:52,790 --> 00:05:55,880
komponenty nie musz by komponentami funkcjonalnymi, mog te

74
00:05:55,880 --> 00:05:58,030
by komponentami opartymi na klasach.

