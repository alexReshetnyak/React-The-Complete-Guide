1
00:00:02,060 --> 00:00:08,940
So let's start setting up a nextJS project, you can find all the instructions on that github page

2
00:00:08,960 --> 00:00:15,230
and that is a great place to dive deeper. As you can see there, nextjs in the latest version at the

3
00:00:15,230 --> 00:00:21,550
point of time I'm recording this requires react 16 which under the hood introduced some breaking changes

4
00:00:21,620 --> 00:00:24,330
and which is the version we used throughout the course.

5
00:00:24,770 --> 00:00:28,150
So we're fine, we'll be using that version here too

6
00:00:28,340 --> 00:00:30,550
and now let's install nextjs,

7
00:00:30,570 --> 00:00:37,290
this package with this command, as you see you also still install react and react-dom.

8
00:00:37,640 --> 00:00:40,100
Now to run this, you need an empty project

9
00:00:40,100 --> 00:00:43,120
and here I got one loaded in my IDE already,

10
00:00:43,130 --> 00:00:46,980
the only thing I have here is a gitignore file because I'll be using git.

11
00:00:47,240 --> 00:00:53,720
Now first of all to be able to run npm commands, we need to put this project under control of npm, you

12
00:00:53,720 --> 00:00:59,150
do this by running npm init, then you are asked a couple of questions which you can simply answer with

13
00:00:59,150 --> 00:01:02,840
yes by just hitting enter. Once you went through all these questions,

14
00:01:02,840 --> 00:01:06,510
you get a package.json file which is used to manage the dependencies.

15
00:01:06,710 --> 00:01:12,830
I do talk about creating this file in a bit more detail in the module where we create our own project

16
00:01:12,830 --> 00:01:14,180
set up from scratch.

17
00:01:14,450 --> 00:01:21,320
Now we can run the command you saw on the github page here, npm install --save with these three packages,

18
00:01:21,500 --> 00:01:23,650
next, react and react-dom

19
00:01:23,700 --> 00:01:28,540
because nextjs is a library building app on react,

20
00:01:28,550 --> 00:01:34,280
it gives you extra features but behind the scenes or also from a code perspective what you're going

21
00:01:34,280 --> 00:01:37,830
to write, it's still all react.

22
00:01:37,850 --> 00:01:43,400
Once this command finished and all these packages are installed in their latest versions, we can go back

23
00:01:43,400 --> 00:01:46,600
to the github repository to find more instructions.

24
00:01:46,640 --> 00:01:50,520
We should now add this scripts section to packaged.json

25
00:01:50,680 --> 00:01:56,900
so let's do this, in the package.json file, we actually have a script section, we can replace it with the

26
00:01:56,900 --> 00:02:03,890
one we just grabbed from our github file here,

27
00:02:04,090 --> 00:02:06,380
so script should be added like this.

28
00:02:06,380 --> 00:02:08,440
With that, we can start using it

29
00:02:08,450 --> 00:02:11,090
and now that we have that important file system thing

30
00:02:11,120 --> 00:02:15,880
I was talking about, in nextjs, the file system is our main API,

31
00:02:15,920 --> 00:02:24,110
we don't use react router with nextjs to create routes and allow the user to visit /auth, /user

32
00:02:24,110 --> 00:02:25,470
and so on,

33
00:02:25,700 --> 00:02:36,290
instead we create folders and files to reflect our URLs in the file system and nextJS, the package

34
00:02:36,470 --> 00:02:42,870
will automatically parse that and use its own internal router to handle all the heavy lifting.

35
00:02:42,950 --> 00:02:53,040
Now along the way, it pre-renders the content we load as pages on the server, it automatically code splits,

36
00:02:53,120 --> 00:02:58,670
so lazy loads that, all of that out of the box without us configuring anything.

37
00:02:58,700 --> 00:03:04,170
That is why next is such a great package and could be worth a look in your next project,

38
00:03:04,190 --> 00:03:10,880
a lot of stuff is just working out of the box there at the price of having to keep a certain file structure.

39
00:03:11,540 --> 00:03:15,560
That file structure is mostly about that pages folder,

40
00:03:15,710 --> 00:03:21,820
let's create it. You create it directly in the root folder next to node modules and the other files here,

41
00:03:21,830 --> 00:03:27,470
so there, you create a new folder pages and in there, you now create your javascript files which will

42
00:03:27,470 --> 00:03:34,730
be react component which will hold and export react components and these file names

43
00:03:34,760 --> 00:03:40,870
now define the different paths you have. You can also have a subfolder like auth there

44
00:03:40,940 --> 00:03:47,270
and in there add for example user.js, you would reach this file at your domain/auth/user,

45
00:03:47,270 --> 00:03:52,440
if you name this index.js, you would reach it at /auth.

46
00:03:52,520 --> 00:03:56,150
Let's also add an index.js file under the pages folder,

47
00:03:56,210 --> 00:04:02,060
now we have something like example.com/ and would reach that file and /auth and would reach

48
00:04:02,060 --> 00:04:02,990
that file.

49
00:04:02,990 --> 00:04:05,060
Now lets add a component in both

50
00:04:05,150 --> 00:04:10,520
and typically here, you use functional components but of course you can also use stateful ones with the

51
00:04:10,520 --> 00:04:13,700
class keywords in case you need to manage state.

52
00:04:14,120 --> 00:04:16,490
So let's create a functional one here,

53
00:04:16,580 --> 00:04:21,260
I'll name this indexPage, the name is up to you though

54
00:04:21,650 --> 00:04:26,330
and you know that syntax here, where you could receive props, return something.

55
00:04:26,330 --> 00:04:32,750
Now what I'll do is all import react from react so just like you learned it in this course, that doesn't

56
00:04:32,750 --> 00:04:35,430
change because we're still using jsx here,

57
00:04:35,570 --> 00:04:38,150
well not yet but we'll do so in a second

58
00:04:38,150 --> 00:04:40,810
and I export indexPage as a default.

59
00:04:40,820 --> 00:04:41,570
That's important,

60
00:04:41,570 --> 00:04:46,720
you still need to export this otherwsie nextjs can't do a thing with that.

61
00:04:46,730 --> 00:04:48,730
So now let's simply add some code

62
00:04:48,730 --> 00:05:00,860
here, like a div where we say h1 the main page, like this. Now I'll copy all that code and put it into

63
00:05:00,860 --> 00:05:09,100
the other index.js file, I'll name this authIndexPage and of course therefore export this constant

64
00:05:09,320 --> 00:05:12,750
and there, I'll say the auth index page.

65
00:05:12,770 --> 00:05:13,900
Now let's save that and

66
00:05:13,910 --> 00:05:17,860
now let's execute one of the scripts we added, dev.

67
00:05:17,870 --> 00:05:25,400
Now if you run npm run dev, this will spin up a development server building your application and server

68
00:05:25,400 --> 00:05:29,770
side rendering it also giving you stuff like hot reloading so a really

69
00:05:29,810 --> 00:05:31,580
nice development environment.

70
00:05:31,730 --> 00:05:39,020
If you now go back to the browser, you can actually load this in a new tab under localhost:3000,

71
00:05:39,470 --> 00:05:45,970
there you should see your page and if you now go to /auth you see the auth index page.

72
00:05:46,070 --> 00:05:52,790
So without us setting up any routing, we can load these two different components as pages and as I said,

73
00:05:52,790 --> 00:05:55,880
these components doesn't have to be functional components,

74
00:05:55,880 --> 00:05:58,030
they could be class based components too.

