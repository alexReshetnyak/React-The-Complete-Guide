1
00:00:02,070 --> 00:00:04,350
Wic poznajemy podstawy o tym, co dalej,

2
00:00:04,470 --> 00:00:10,230
ale co jest, jeli nadal chc komponowa moj aplikacj z komponentw, a nie tylko ze stron, czy nie

3
00:00:10,230 --> 00:00:11,420
powinienem ju tego robi?

4
00:00:11,520 --> 00:00:13,360
Absolutnie powinnimy.

5
00:00:13,380 --> 00:00:16,770
Sposb, w jaki budujesz swoj aplikacj reagowania,

6
00:00:16,800 --> 00:00:22,800
nie zmienia si, nadal dobr praktyk jest komponowanie aplikacji wielu maych elementw.

7
00:00:22,800 --> 00:00:27,420
Dodajmy wic nowy folder, komponenty, a nazwa tego folderu faktycznie naley do

8
00:00:27,450 --> 00:00:29,340
ciebie, nextjs to nie obchodzi,

9
00:00:29,370 --> 00:00:33,890
moesz nazwa C, CMP, cokolwiek chcesz. Tam dodam

10
00:00:34,080 --> 00:00:37,920
mojego uytkownika. js, komponent uytkownika, utworz

11
00:00:38,160 --> 00:00:46,670
staego uytkownika, zdobd jakie rekwizyty, a potem wypisz jsx i do tego oczywicie, jak zawsze, import zareaguje,

12
00:00:46,670 --> 00:00:57,230
reagujc w ten sposb i wyeksportuje sta uytkownika jako plik domylny. Tutaj moemy teraz utworzy nowy element div, w ktrym

13
00:00:57,250 --> 00:00:58,010
chc

14
00:00:58,090 --> 00:01:06,110
wyprowadzi pewne dane uytkownika, takie jak na przykad nazwa, ktr zamierzam uzyska za

15
00:01:06,110 --> 00:01:07,920
pomoc rekwizytw, a

16
00:01:08,240 --> 00:01:13,020
nastpnie, powiedzmy, wiek, rekwizyty. wiek.

17
00:01:13,140 --> 00:01:17,760
To bardzo prosty komponent oczywicie z rozmysem, poniewa nie cigniemy

18
00:01:17,780 --> 00:01:21,920
komponentw, chc pokaza, jak uy tego w aplikacji nextjs.

19
00:01:22,010 --> 00:01:26,260
Teraz, gdy ju to mamy, po uzyskaniu tego komponentu uywamy go jak zawsze, powiedzmy, e

20
00:01:26,390 --> 00:01:29,230
chcemy go uy w authIndex. Plik js, po

21
00:01:29,240 --> 00:01:32,350
prostu zaimportujemy uytkownika od teraz, przejdmy

22
00:01:32,450 --> 00:01:39,520
do katalogu skadnikw i tam zaimportujmy plik uytkownika, a nastpnie po prostu dodaj mj komponent

23
00:01:39,530 --> 00:01:41,930
uytkownika w taki sposb, przekazujc

24
00:01:42,110 --> 00:01:49,470
rekwizyty nazw, poniewa oczekuj tego i propa wieku, ktry to taka liczba, tak mog tego

25
00:01:49,480 --> 00:01:49,950
uy.

26
00:01:50,100 --> 00:01:52,760
Teraz, jeli zapiszemy wszystkie pliki i

27
00:01:52,760 --> 00:01:54,130
wrcimy, ju je

28
00:01:54,170 --> 00:01:56,120
tutaj widzicie. Max 28.

29
00:01:56,300 --> 00:02:02,050
Nadal pracujemy z komponentami w naszej aplikacji nextjs, mamy tylko specjalny

30
00:02:02,180 --> 00:02:09,980
folder stron, ktry zawiera take komponenty, funkcjonalne lub oparte na klasach, ale ktry jest jedynym

31
00:02:09,980 --> 00:02:16,700
folderem, ktry dostaje specjalne traktowanie, poniewa nextjs, poniewa bdziemy analizowa wszystkie pliki w

32
00:02:16,700 --> 00:02:21,740
jako strony, utworz dla nich trasy i automatycznie podziel kod.

33
00:02:21,860 --> 00:02:28,060
Przy okazji, e dzielenie kodu oczywicie obejmuje rwnie komponenty zawarte na tej stronie, takie jak komponent uytkownika,

34
00:02:28,070 --> 00:02:28,820
uywamy go

35
00:02:29,060 --> 00:02:33,490
tylko w skadniku auth, w authindeksie. js, wic zaadujemy

36
00:02:33,680 --> 00:02:36,100
tylko kod, jeli przejdziemy

37
00:02:36,260 --> 00:02:42,650
do tej strony. Jeli spdzimy cay czas na gwnym indeksie. Jeli nie uyjemy komponentu

38
00:02:42,650 --> 00:02:46,310
uytkownika, nigdy te nie zaadowalibymy tego kodu.

