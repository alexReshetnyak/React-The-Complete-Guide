1
00:00:02,070 --> 00:00:04,350
As que aprendemos los conceptos bsicos sobre el

2
00:00:04,470 --> 00:00:10,230
prximo, pero qu ocurre si an quiero componer mi aplicacin a partir de componentes y no solo de pginas, si

3
00:00:10,230 --> 00:00:11,420
no lo hago ms?

4
00:00:11,520 --> 00:00:13,360
Debemos absolutamente.

5
00:00:13,380 --> 00:00:16,770
La forma en que construyes tu aplicacin reaccionar

6
00:00:16,800 --> 00:00:22,800
no cambia, sigue siendo una buena prctica componer tu aplicacin de muchas piezas pequeas.

7
00:00:22,800 --> 00:00:27,420
As que agreguemos una nueva carpeta, los componentes y el nombre de esta carpeta realmente depende

8
00:00:27,450 --> 00:00:29,340
de usted, a continuacin no le importa

9
00:00:29,370 --> 00:00:33,890
eso, puede ponerle C, CMP, lo que quiera. All, agregar

10
00:00:34,080 --> 00:00:37,920
mi usuario. js, un componente de usuario,

11
00:00:38,160 --> 00:00:46,670
crear un usuario constante, obtendr algunos accesorios y luego producir algunos archivos jsx y, por supuesto, por supuesto, como siempre importar

12
00:00:46,670 --> 00:00:57,230
reaccionar de reaccionar as y exportar este usuario constante como el archivo predeterminado. Aqu podemos crear un nuevo div en el que desee

13
00:00:57,250 --> 00:00:58,010
generar

14
00:00:58,090 --> 00:01:06,110
algunos datos de usuario como, por ejemplo, el nombre que espero obtener a travs de accesorios

15
00:01:06,110 --> 00:01:07,920
y, a continuacin, digamos

16
00:01:08,240 --> 00:01:13,020
tambin la edad, los accesorios. aos.

17
00:01:13,140 --> 00:01:17,760
Es un componente muy simple, por supuesto, deliberadamente porque no estamos extrayendo

18
00:01:17,780 --> 00:01:21,920
componentes, quiero mostrarle cmo usar eso en la aplicacin nextjs.

19
00:01:22,010 --> 00:01:26,260
Ahora que lo tenemos, una vez que tenemos este componente, lo usamos como siempre, digamos

20
00:01:26,390 --> 00:01:29,230
que queremos usar en authIndex. js file, simplemente importamos

21
00:01:29,240 --> 00:01:32,350
usuario a partir de ahora vamos a ir

22
00:01:32,450 --> 00:01:39,520
a la carpeta de componentes y all importamos el archivo de usuario y luego simplemente agrego mi componente de

23
00:01:39,530 --> 00:01:41,930
usuario as, pasando los apoyos del

24
00:01:42,110 --> 00:01:49,470
nombre ya que espero que esto y el apoyo de edad que es el nmero as, as es como puedo

25
00:01:49,480 --> 00:01:49,950
usar esto.

26
00:01:50,100 --> 00:01:52,760
Ahora si guardamos todos los archivos

27
00:01:52,760 --> 00:01:54,130
y regresamos, ya

28
00:01:54,170 --> 00:01:56,120
lo ves aqu Max 28.

29
00:01:56,300 --> 00:02:02,050
As que todava trabajamos con componentes en nuestra aplicacin nextjs, solo tenemos la

30
00:02:02,180 --> 00:02:09,980
carpeta de pginas especiales que tambin contiene componentes, funcionales o de clase, pero que es la nica

31
00:02:09,980 --> 00:02:16,700
carpeta que recibe un tratamiento especial porque nextjs como analizaremos todos los archivos en sus

32
00:02:16,700 --> 00:02:21,740
pginas como, crear rutas para ellos y dividir el cdigo automticamente.

33
00:02:21,860 --> 00:02:28,060
Por cierto, que la divisin del cdigo tambin incluye componentes incluidos en esa pgina, como el componente del usuario, solo

34
00:02:28,070 --> 00:02:28,820
lo usamos

35
00:02:29,060 --> 00:02:33,490
en el componente auth, en el authindex. js, de modo que

36
00:02:33,680 --> 00:02:36,100
solo cargamos el cdigo si

37
00:02:36,260 --> 00:02:42,650
navegamos a esa pgina. Si pasamos todo nuestro tiempo en el ndice principal. js donde no usamos el componente

38
00:02:42,650 --> 00:02:46,310
del usuario, nunca cargaramos el cdigo para esto tampoco.

