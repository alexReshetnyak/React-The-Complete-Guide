1
00:00:02,180 --> 00:00:07,030
Nell'ultima lezione abbiamo dato un'occhiata al riferimento di tipi primitivi, qualcosa di super importante da

2
00:00:07,030 --> 00:00:09,800
tenere a mente quando si lavora con javascript.

3
00:00:10,030 --> 00:00:14,260
Un'altra cosa che vedrai molto in questo corso sono le funzioni aeree.

4
00:00:14,260 --> 00:00:17,240
Abbiamo gi visto filtrare un paio di Electress fa.

5
00:00:17,350 --> 00:00:20,550
Abbiamo anche ottenuto la mappa di Saward e cos via.

6
00:00:20,860 --> 00:00:22,670
Lascia che ti mostri rapidamente cosa intendo.

7
00:00:22,810 --> 00:00:27,560
Il buon vecchio numero  array con 1 2 e 3.

8
00:00:27,970 --> 00:00:34,510
Ora diciamo che vogliamo trasformare questo in un array in cui ogni numero  raddoppiato.

9
00:00:34,540 --> 00:00:41,370
Quindi dobbiamo raddoppiare qualcosa come il debito, possiamo usare una funzione array per questo.

10
00:00:41,440 --> 00:00:45,050
Possiamo prendere la matrice dei numeri e chiamare la mappa.

11
00:00:45,130 --> 00:00:47,150
La mappa  un metodo di array incorporato.

12
00:00:47,170 --> 00:00:49,070
E ci sono molti di questi metodi.

13
00:00:49,420 --> 00:00:51,610
Ne user un bel po 'e loro no.

14
00:00:51,610 --> 00:00:57,940
JavaScript di prossima generazione tutti questi metodi funzionano allo stesso modo anche se prendono una funzione

15
00:00:57,940 --> 00:01:04,750
come input e questa funzione che  una funzione di freccia qui, ma potrebbe essere una funzione

16
00:01:04,820 --> 00:01:09,050
normale, viene quindi eseguita semplicemente su ciascun elemento dell'array qui.

17
00:01:09,070 --> 00:01:13,830
Quindi su ogni elemento nei numeri 0 8 su 1 e 2 e 3.

18
00:01:14,260 --> 00:01:18,200
Quindi, quindi, quello che otteniamo in questa funzione a freccia  un numero alla fine.

19
00:01:18,220 --> 00:01:22,260
Ma puoi dare un nome a questo argomento, qualunque cosa tu voglia qui.

20
00:01:22,260 --> 00:01:24,400
Possiamo quindi semplicemente restituire qualcosa.

21
00:01:24,610 --> 00:01:30,660
E ci che devi fare in questa funzione interna dipende da quale area di funzione stai usando.

22
00:01:30,670 --> 00:01:37,010
Controlla i documenti in luoghi come i documenti della rete Mozilla Developer Network per saperne di pi

23
00:01:37,100 --> 00:01:38,470
sulle funzioni dell'area disponibili.

24
00:01:38,470 --> 00:01:44,770
quello vecchio in modo che potremmo tornare a volte anche e poich viene eseguito su ogni elemento qui.

25
00:01:44,770 --> 00:01:49,440
Quindi nella funzione mappa dobbiamo restituire il nuovo valore in cui vogliamo trasformare

26
00:01:49,450 --> 00:01:55,890
Torner a 4 e 6 e mapper comodamente tutti i ritorni di un nuovo array.

27
00:01:55,900 --> 00:02:00,720
Quindi un vero nuovo array che viene quindi memorizzato in doppia memoria.

28
00:02:01,060 --> 00:02:12,520
Cos ora se i miei numeri di uscita e ci sono dopo il doppio numb array come questo e un'ora di funzionamento vedrete che quello vecchio

29
00:02:12,580 --> 00:02:19,750
 invariato ma il nuovo detiene il doppio dei valori e spiegher cosa fanno queste funzioni

30
00:02:19,750 --> 00:02:21,620
quando li usiamo nel corso.

31
00:02:21,850 --> 00:02:24,590
Voglio solo portarli alla vostra attenzione in questo momento.

32
00:02:24,670 --> 00:02:30,730
non sono javascript di nuova generazione, ma il javascript normale  effettivamente pronto a soddisfarli.

33
00:02:30,760 --> 00:02:36,190
Spiega che hanno sempre questa funzione che viene eseguita su ciascun elemento e che

34
00:02:36,190 --> 00:02:41,600
Spiegher cosa fanno quando li vediamo e ci sentiamo sempre liberi di immergerci in documenti come Mozilla o la rete di

35
00:02:41,600 --> 00:02:43,840
sviluppatori per saperne di pi su di loro.

