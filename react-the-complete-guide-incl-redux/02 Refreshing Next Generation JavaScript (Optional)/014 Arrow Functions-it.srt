1
00:00:02,340 --> 00:00:08,140
Imparerai su LET e Konst un numero e una costruzione di numeri che vedrai

2
00:00:08,160 --> 00:00:11,080
molto e, naturalmente, le nostre funzioni aerodinamiche.

3
00:00:11,460 --> 00:00:15,890
Questa  una sintassi diversa per la creazione di funzioni Javascript.

4
00:00:15,960 --> 00:00:18,540
Ovviamente, una normale funzione javascript si presenta cos.

5
00:00:18,540 --> 00:00:27,450
Con la parola chiave function potresti anche notare una sintassi in cui hai bar my fonk equals funzione.

6
00:00:27,540 --> 00:00:30,230
Ora una funzione di freccia appare cos.

7
00:00:30,270 --> 00:00:34,160
Qui lo sto memorizzando in una costante e poi sul lato destro del segno di uguale.

8
00:00:34,290 --> 00:00:36,750
Questa  la sintassi della funzione freccia.

9
00:00:36,840 --> 00:00:42,540
Un elenco di argomenti qui  acceso ma potrebbe contenere alcuni argomenti e quindi una freccia.

10
00:00:42,720 --> 00:00:47,280
Quindi un segno di uguale e maggiore del segno e poi il corpo della funzione.

11
00:00:47,280 --> 00:00:52,920
L'indice della funzione della freccia  un po 'pi corto della sintassi normale poich omette la parola

12
00:00:53,550 --> 00:00:56,700
chiave function e anche questo  il grande vantaggio.

13
00:00:56,700 --> 00:00:59,810
Risolve molti dei problemi che hai avuto spesso con quello.

14
00:00:59,810 --> 00:01:02,710
Questa parola chiave in javascript.

15
00:01:02,940 --> 00:01:10,290
Se hai lavorato un po 'con JavaScript, probabilmente saprai che questa parola chiave non si riferisce sempre a ci

16
00:01:10,290 --> 00:01:15,180
che potresti aspettarti che faccia riferimento durante la scrittura del tuo codice.

17
00:01:15,180 --> 00:01:22,830
Quando lo usi all'interno della funzione freccia, manterr sempre il suo contesto e non cambier in modo

18
00:01:22,830 --> 00:01:24,450
sorprendente in runtime.

19
00:01:24,450 --> 00:01:28,130
Passiamo ora alla spesa J per vedere la sintassi della funzione freccia.

20
00:01:28,140 --> 00:01:31,320
In pratica di nuovo in J Espin.

21
00:01:31,380 --> 00:01:37,980
Creiamo una normale funzione stampa il mio nome in questo modo.

22
00:01:38,890 --> 00:01:47,030
Ora, qui possiamo ovviamente scrivere il nome del log della console e il pass name come argomento.

23
00:01:47,220 --> 00:01:54,930
Ora se chiamo print il mio nome in questo modo e ho il controllo dopo che siamo entrati nel find perch non ho

24
00:01:54,930 --> 00:01:59,200
passato nulla per farlo fare lo stesso con Max passato come argomento.

25
00:01:59,250 --> 00:02:07,410
Ora otteniamo il massimo alla funzione della freccia l'equivalente  di cominciare noi in un nome stampato costante il mio nome.

26
00:02:07,410 --> 00:02:09,630
Potrebbe anche essere creato con LET.

27
00:02:09,660 --> 00:02:15,410
Se pianifichi di riassegnare questa variabile stampa il mio nome come costante.

28
00:02:15,520 --> 00:02:22,450
E ora non dimenticare di aggiungere questa freccia tra l'elenco degli argomenti e il corpo della funzione  ora chiaro

29
00:02:22,480 --> 00:02:24,610
e riesegui questo vedrai ancora Max.

30
00:02:24,610 --> 00:02:27,630
Quindi qui si comporta esattamente allo stesso modo.

31
00:02:27,640 --> 00:02:30,820
Ora questa parola chiave  qualcosa che vedrai per il corso.

32
00:02:30,850 --> 00:02:35,060
Diventa importante una volta che si aggiungono le funzioni all'oggetto, naturalmente.

33
00:02:35,140 --> 00:02:40,960
Prima di tutto lascia che ti mostri alcune alternative ai disinfetti per quanto riguarda l'elenco degli argomenti.

34
00:02:40,960 --> 00:02:48,370
Per essere precisi se ricevi solo un argomento come facciamo qui puoi anche usare una scorciatoia di omettere le

35
00:02:48,430 --> 00:02:49,850
parentesi attorno ad esso.

36
00:02:50,020 --> 00:02:56,720
Questo  valido solo per un argomento, anche se non per pi e non per ultimo qui.

37
00:02:56,740 --> 00:03:04,170
Otterrai comunque lo stesso risultato se avessi una funzione che non riceve argomenti.

38
00:03:04,180 --> 00:03:06,270
Questa non  una sintassi valida.

39
00:03:06,340 --> 00:03:11,750
Devi passare una coppia vuota di parentesi come questa.

40
00:03:11,860 --> 00:03:15,600
Se eseguiamo questo ora, vediamo anche Max.

41
00:03:15,610 --> 00:03:19,080
Quindi funziona se hai pi di un argomento.

42
00:03:19,090 --> 00:03:20,740
Hai anche bisogno di parentesi.

43
00:03:20,740 --> 00:03:23,410
Quindi il nome e l'et come questa non funzioneranno.

44
00:03:23,470 --> 00:03:26,950
Avrai bisogno di avvolgere questo tra parentesi.

45
00:03:26,950 --> 00:03:33,550
E ora puoi scrivere il nome e l'et e passato entrambi come argomenti qui.

46
00:03:33,910 --> 00:03:38,310
Quindi queste sono due diverse sintassi che potremmo vedere riguardo gli argomenti.

47
00:03:38,380 --> 00:03:40,000
C' anche un'alternativa.

48
00:03:40,000 --> 00:03:41,870
Per quanto riguarda il corpo della funzione.

49
00:03:41,950 --> 00:03:47,780
Quindi sul lato destro della freccia, ovviamente, molte funzioni restituiscono qualcosa.

50
00:03:48,010 --> 00:03:58,920
Quindi diciamo che in realt vogliamo moltiplicare qualcosa e otteniamo un numero come argomento.

51
00:03:58,920 --> 00:04:08,490
Ora vogliamo restituire il numero di volte a ci che possiamo fare, ovviamente, possiamo consolare il risultato bloccato della

52
00:04:08,490 --> 00:04:09,180
moltiplicazione.

53
00:04:09,180 --> 00:04:12,690
Quindi Watts  tornato moltiplicato e passato qui.

54
00:04:12,870 --> 00:04:16,620
Se ora ho chiarito come e gestito questo dovremmo vedere quattro e lo facciamo.

55
00:04:16,740 --> 00:04:24,960
tuo corpo funzione  di ritorno e non hai altro codice l dentro puoi omettere le parentesi graffe di

56
00:04:24,960 --> 00:04:35,010
Cauley e scrivere questo in una riga e poi devi ammettere che la parola chiave return  molto breve questione di scrivere questa funzione.

57
00:04:35,010 --> 00:04:39,670
Se hai questo caso in cui tutto ci che fai nel

58
00:04:39,690 --> 00:04:44,820
Diventa un po 'pi breve se sfruttiamo la scorciatoia di rimuovere le parentesi

59
00:04:44,820 --> 00:04:46,260
attorno al singolo argomento.

60
00:04:46,260 --> 00:04:50,310
E ora ci che fa  ancora restituisce il risultato di questo codice.

61
00:04:50,310 --> 00:04:54,230
Qui omettiamo la parola chiave return e ne abbiamo emessi due.

62
00:04:54,450 --> 00:05:00,480
E abbiamo un modo molto conciso e breve di scrivere una funzione che accetta uno o pi

63
00:05:00,480 --> 00:05:01,860
argomenti e restituisce qualcosa.

64
00:05:01,860 --> 00:05:05,690
Quindi qui il clearing e il running fanno ancora 4.

65
00:05:06,090 --> 00:05:11,430
Quindi questa  tutta la sintassi che potresti vedere e la funzione in generale  qualcosa che vedrai molto.

66
00:05:11,430 --> 00:05:13,540
Hai visto i vari sintassi di noi.

67
00:05:13,650 --> 00:05:16,020
Non devi ricordarli tutti in questo momento.

68
00:05:16,050 --> 00:05:21,240
Basta essere consapevoli del fatto che ci sono delle differenze in Texas e se non le

69
00:05:21,240 --> 00:05:24,960
usiamo torneranno presto in mente e saprete perch usiamo una determinata sintassi.

