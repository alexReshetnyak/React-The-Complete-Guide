1
00:00:02,250 --> 00:00:06,000
Aprendemos muito sobre as classes e as funes aero.

2
00:00:06,210 --> 00:00:11,700
Vamos agora virar nossas cabeas para novos operadores poderem usar no futuro do javascript e

3
00:00:11,700 --> 00:00:17,340
j podemos usar hoje em nosso projeto Riak para se espalhar para o resto dos operadores.

4
00:00:17,400 --> 00:00:20,840
Na verdade,  apenas um operador de pontos livres.

5
00:00:20,850 --> 00:00:25,020
Sim, isso pode parecer estranho, mas o operador  apenas pontos livres.

6
00:00:25,080 --> 00:00:32,010
Agora, se chamamos isso de propagao ou repouso depende de onde a usamos, o operador de propagao  usado

7
00:00:32,100 --> 00:00:35,160
para dividir todos os elementos ou propriedades do objeto.

8
00:00:35,250 --> 00:00:38,510
Ento, espalhamos uma matriz ou um objeto.

9
00:00:38,640 --> 00:00:47,160
Por exemplo, se tivermos uma matriz antiga e queremos adicionar todos os elementos dessa matriz antiga a uma nova matriz e, adicionalmente,

10
00:00:47,160 --> 00:00:54,150
adicionar um 1 em um elemento dois, este primeiro ndice seria o que ele tinha trs pontos na

11
00:00:54,150 --> 00:01:00,330
frente de toda a matriz. simplesmente retire todos os elementos e adicione  nova matriz que

12
00:01:00,330 --> 00:01:01,630
criamos com colchetes.

13
00:01:01,860 --> 00:01:04,870
E  claro que podemos adicionar mais elementos a ele.

14
00:01:04,890 --> 00:01:11,140
Ento, ns apenas usamos para normalizar o ndice com colchetes para criar uma matriz o mesmo para o seu objeto.

15
00:01:11,190 --> 00:01:17,850
Criamos um novo objeto com chaves de chamada com o novo suporte, mas tambm temos ponto dot dot.

16
00:01:17,880 --> 00:01:26,670
seus valores e adicion-los como pares de valores-chave tambm no se ops como uma nota lateral se o objeto antigo.

17
00:01:26,670 --> 00:01:31,350
Objeto antigo para retirar todas as propriedades do objeto antigo e

18
00:01:31,350 --> 00:01:33,350
Tambm  frente de uma nova propriedade.

19
00:01:33,480 --> 00:01:36,220
Seria substitudo por um novo suporte 5 aqui.

20
00:01:36,300 --> 00:01:40,920
Portanto, nossa prpria propriedade tem precedncia, o operador de propaganda de desonestidade.

21
00:01:41,010 --> 00:01:48,660
Agora, o operador restante  o mesmo operador, mas usado de forma diferente aqui  usado para mesclar uma lista de argumentos

22
00:01:48,660 --> 00:01:50,270
de funo em uma matriz.

23
00:01:50,460 --> 00:01:52,270
E isso nos mostra onde a usamos.

24
00:01:52,380 --> 00:01:55,190
Ns usamos isso em uma lista de argumentos de funo.

25
00:01:55,220 --> 00:01:57,380
Aqui est um exemplo de classificao.

26
00:01:57,370 --> 00:02:00,740
Nosso X recebe uma quantidade ilimitada de argumentos.

27
00:02:00,750 --> 00:02:09,420
Ento, um argumento para liberar ou o que quer que seja com ponto dot dot, s escrevemos um argumento ou X, mas podemos

28
00:02:09,420 --> 00:02:14,120
realmente receber mais do que um e todos sero unidos em uma matriz.

29
00:02:14,130 --> 00:02:20,790
Ento, podemos aplicar mtodos Array  nossa lista de argumentos ou fazer o que quer que desejemos fazer com

30
00:02:20,790 --> 00:02:22,210
nossos argumentos convenientemente armazenados.

31
00:02:22,410 --> 00:02:26,090
Vamos dar uma olhada em ambos como NJ Esben ento.

32
00:02:26,170 --> 00:02:31,600
Ento, vamos comear com o operador de propagao ou criar uma srie de nmeros.

33
00:02:31,870 --> 00:02:35,310
Ento, uma vez que voc adiciona o mximo que quiser.

34
00:02:35,350 --> 00:02:42,820
Agora eu quero criar uma nova matriz de novos nmeros e, como voc viu espalhar, agora  simplesmente usado

35
00:02:42,820 --> 00:02:44,140
adicionando pontos grtis.

36
00:02:44,140 --> 00:02:49,430
Em seguida, os nmeros da matriz antiga e, em seguida, potencialmente voc no precisa fazer isso.

37
00:02:49,660 --> 00:02:53,260
Novos nmeros como 4 e novamente  opcional.

38
00:02:53,770 --> 00:02:56,070
Com esse log final do console.

39
00:02:56,170 --> 00:02:58,130
Novos nmeros aqui.

40
00:02:59,450 --> 00:03:07,250
E eu corri, conseguimos um dois trs quatro a matriz mais antiga com todos os seus elementos e o novo elemento.

41
00:03:07,250 --> 00:03:09,320
E, na verdade, no adicionamos o elemento antigo.

42
00:03:09,350 --> 00:03:15,350
Se fssemos fazer isso sem os pontos, seria includo como um elemento dentro do novo elemento.

43
00:03:15,350 --> 00:03:20,170
Realmente retirou os elementos antigos, como voc pode ver claramente.

44
00:03:20,300 --> 00:03:26,750
Ento, esse  o operador de propagao e voc vai me ver usar isso para

45
00:03:26,750 --> 00:03:35,880
fora deste curso um par de vezes em arrays e objetos, por exemplo, convenientemente copiar arrays ou adicionar propriedades a um objeto

46
00:03:35,880 --> 00:03:38,780
enquanto copiando com segurana esse objeto antigo.

47
00:03:38,780 --> 00:03:44,020
Mais uma vez, obviamente, tambm sempre mencionarei porque estou usando esse operador quando faz um curso no curso.

48
00:03:44,180 --> 00:03:46,500
Apenas esteja ciente de que existe.

49
00:03:46,790 --> 00:03:53,200
Vamos agora ver o mesmo para todos os objetos, crie um objeto pessoal aqui onde eu tenho um nome.

50
00:03:53,210 --> 00:04:01,980
Digamos Max e agora vou ter um novo objeto de pessoa que  um objeto javascript e um novo, enquanto que, em primeiro lugar,

51
00:04:02,020 --> 00:04:09,630
 usado para espalhar o operador em pessoa para copiar todos os pares de valores de propriedade do objeto antigo e

52
00:04:09,930 --> 00:04:12,390
potencialmente e isso  tudo opcional.

53
00:04:12,510 --> 00:04:14,200
Adicione uma nova propriedade.

54
00:04:14,460 --> 00:04:21,630
E agora, se eu consigo log nova pessoa, voc pode ignorar esse erro que  de propriedade de J foi decente

55
00:04:21,630 --> 00:04:24,500
X ser suportado em nosso projeto de curso.

56
00:04:24,810 --> 00:04:30,300
Ns fazemos isso, voc v o objeto como o ano de Brinton com o nome Max aos 28 anos.

57
00:04:30,480 --> 00:04:36,730
Ento, est levando a pessoa antiga e distribuindo-a para a nova pessoa que  o operador de propagao.

58
00:04:36,780 --> 00:04:44,210
Agora, o resto do operador, que  usado com menos freqncia,  usado em uma funo e voc, naturalmente, tambm

59
00:04:44,250 --> 00:04:46,690
pode usar a funo de 6 seta.

60
00:04:46,830 --> 00:04:53,760
Ento, ns poderamos ter uma funo de filtro o que quer que voc queira nomear e ns ganhamos alguns arcos e voc no precisa

61
00:04:53,760 --> 00:04:59,460
usar os anos de idade X nomeados como um ou o que quiser, mas voc precisa usar os pontos livres

62
00:04:59,460 --> 00:05:00,590
na frente de isto.

63
00:05:00,990 --> 00:05:03,780
Ento, ento, voc pode simplesmente retornar.

64
00:05:03,790 --> 00:05:09,960
sintaxe inline aqui para escrever tudo em uma nica linha, sem voc retornar a palavra-chave aqui vou usar o retorno.

65
00:05:09,960 --> 00:05:10,760
Poderamos usar a

66
00:05:10,770 --> 00:05:16,710
Voc pode retornar o nosso X e, ento, digamos que chamamos o mtodo de filtro incorporado que est disponvel em arrays

67
00:05:16,800 --> 00:05:23,320
e tenha em mente que os pontos aqui so usados como um operador de descanso e que mesclam os argumentos em uma matriz.

68
00:05:23,340 --> 00:05:31,230
Portanto, podemos usar mtodos como o filtro de filtro que executar uma funo em cada elemento no passado

69
00:05:31,230 --> 00:05:31,900
na matriz.

70
00:05:32,040 --> 00:05:38,580
Ento, aqui, obteramos nosso elemento e ento poderamos usar a funo de seta em linha para simplesmente dizer

71
00:05:38,580 --> 00:05:39,830
retornar verdadeiro ou falso.

72
00:05:39,830 --> 00:05:45,300
O filtro espera se o elemento for igual a 1.

73
00:05:45,300 --> 00:05:47,540
Agora, isso pode ser um monte de CYNICUS que voc no conhece.

74
00:05:47,640 --> 00:05:53,760
Sinais livres de cheques para igualdade de tipo e valor para que Al tambm tenha que ser um nmero.

75
00:05:53,820 --> 00:05:57,510
E faz apenas a funo de seta que passamos para o mtodo de filtro incorporado.

76
00:05:57,510 --> 00:06:00,130
Ento, isso no tem nada a ver com o resto ou a propagao.

77
00:06:00,310 --> 00:06:07,220
Ns temos que poderamos chamar de filtro e deix-lo um registro para ver algo que o filtro da lei Konsole.

78
00:06:07,230 --> 00:06:15,480
Ento, nosso foco ou funo aqui, digamos, 1 2 livre e, na verdade, devemos registrar apenas 1 ano como uma matriz, porque, por

79
00:06:15,480 --> 00:06:21,600
exemplo, filtramos o desir que  criado com o operador restante com o ano de pontos livre.

80
00:06:21,870 --> 00:06:27,960
Reston  espalhado novamente,  usar esses pontos livres, voc ver mais frequentemente neste curso.

81
00:06:27,960 --> 00:06:28,690
Ento, o

