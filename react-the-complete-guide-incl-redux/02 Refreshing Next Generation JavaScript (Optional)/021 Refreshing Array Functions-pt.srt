1
00:00:02,180 --> 00:00:07,030
Na ltima palestra, tivemos uma olhada na referncia de tipos primitivos, algo super importante

2
00:00:07,030 --> 00:00:09,800
a ter em mente ao trabalhar com javascript.

3
00:00:10,030 --> 00:00:14,260
Outra coisa que voc ver muito neste curso so as funes.

4
00:00:14,260 --> 00:00:17,240
J vimos filtrar um par de eletrizes atrs.

5
00:00:17,350 --> 00:00:20,550
Ns tambm temos o mapa Saward e assim por diante.

6
00:00:20,860 --> 00:00:22,670
Deixe-me mostrar rapidamente o que quero dizer.

7
00:00:22,810 --> 00:00:27,560
O bom nmero antigo  matriz com 1 2 e 3.

8
00:00:27,970 --> 00:00:34,510
Agora, digamos que queremos transformar isso em uma matriz onde cada nmero  duplicado.

9
00:00:34,540 --> 00:00:41,370
Ento, temos que dobrar o entorpecimento de algo como a dvida, podemos usar uma funo de matriz para isso.

10
00:00:41,440 --> 00:00:45,050
Podemos pegar a matriz de nmeros e o mapa de chamadas.

11
00:00:45,130 --> 00:00:47,150
O mapa  um mtodo de matriz incorporado.

12
00:00:47,170 --> 00:00:49,070
E h muitos desses mtodos.

13
00:00:49,420 --> 00:00:51,610
Vou usar um monte deles e eles no so.

14
00:00:51,610 --> 00:00:57,940
Prxima gerao javascript todos esses mtodos funcionam da mesma forma, eles tomam uma funo como uma

15
00:00:57,940 --> 00:01:04,750
entrada e esta funo que  uma funo de seta aqui, mas pode ser uma funo normal,

16
00:01:04,820 --> 00:01:09,050
ento  simplesmente executada em cada elemento na matriz aqui.

17
00:01:09,070 --> 00:01:13,830
Ento, em cada elemento nos nmeros 0 8 em 1 e 2 e 3.

18
00:01:14,260 --> 00:01:18,200
Ento, portanto, o que recebemos nesta funo de seta  um nmero no final.

19
00:01:18,220 --> 00:01:22,260
Mas voc pode nomear este argumento o que quiser aqui.

20
00:01:22,260 --> 00:01:24,400
Podemos simplesmente retornar algo.

21
00:01:24,610 --> 00:01:30,660
E o que voc precisa fazer nesta funo interna depende da rea de funo que voc est usando.

22
00:01:30,670 --> 00:01:37,010
Verifique os documentos em lugares como d Mozilla Developer Network docs para saber mais sobre as

23
00:01:37,100 --> 00:01:38,470
funes de rea disponveis.

24
00:01:38,470 --> 00:01:44,770
antigo, para que possamos retornar s vezes tambm e, uma vez que  executado em cada elemento aqui.

25
00:01:44,770 --> 00:01:49,440
Ento, na funo do mapa, devemos retornar o novo valor que queremos transformar o

26
00:01:49,450 --> 00:01:55,890
Ele retornar para 4 e 6 e convenientemente mapear todos os retornos de uma nova matriz.

27
00:01:55,900 --> 00:02:00,720
Ento, uma nova matriz real que  ento armazenada em memria dupla.

28
00:02:01,060 --> 00:02:12,520
Ento, agora, se meus nmeros de sada e houver depois de uma matriz de dois nmeros como esta e uma hora executada, voc ver que o antigo 

29
00:02:12,580 --> 00:02:19,750
inalterado, mas o novo contm o dobro dos valores e vou explicar o que essas funes fazem

30
00:02:19,750 --> 00:02:21,620
quando as usamos no curso.

31
00:02:21,850 --> 00:02:24,590
Eu s quero chamar sua ateno agora.

32
00:02:24,670 --> 00:02:30,730
eles no so javascript da prxima gerao, mas o javascript normal est realmente preparado para atend-los.

33
00:02:30,760 --> 00:02:36,190
Explique que eles sempre tm essa funo que  executada em cada elemento e que

34
00:02:36,190 --> 00:02:41,600
Vou explicar o que eles fazem quando os vemos e sempre nos sentimos livres de mergulhar em documentos como a Mozilla ou

35
00:02:41,600 --> 00:02:43,840
a rede de desenvolvedores para aprender mais sobre eles.

