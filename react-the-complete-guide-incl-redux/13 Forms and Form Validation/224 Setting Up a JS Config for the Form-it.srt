1
00:00:02,160 --> 00:00:05,060
Quindi nell'ultima lezione abbiamo ottenuto alcuni stili di base per la nostra forma.

2
00:00:05,080 --> 00:00:08,230
Tutti noi risolviamo quell'errore sebbene lo rivedremo.

3
00:00:08,230 --> 00:00:14,710
Ora troviamo un modo per creare il nostro modulo in modo dinamico e definire chiaramente come dovrebbe apparire

4
00:00:14,710 --> 00:00:15,430
ogni elemento.

5
00:00:15,430 --> 00:00:20,470
Per questo dar un'occhiata ai dati che in realt voglio passare con l'ordine, ottenere alcuni dati sui clienti

6
00:00:20,470 --> 00:00:24,070
come il nome e l'indirizzo e quindi otteniamo questo metodo di consegna.

7
00:00:24,070 --> 00:00:29,260
Questo potrebbe essere un drop down in cui possiamo scegliere tra il pi veloce e il pi economico o qualcosa del genere.

8
00:00:29,260 --> 00:00:38,080
i dati degli elementi nel nostro stato ci potrebbero avere la propriet del modulo ordine che dovrebbe essere un oggetto javascript.

9
00:00:38,260 --> 00:00:45,580
Quindi per questo diciamo che vuoi memorizzare o gestire questa forma del modulo in pratica e tutti

10
00:00:45,730 --> 00:00:50,870
E in questo Optik javascript ora volevo trovare tutti i campi stranieri cos tutti gli input.

11
00:00:51,040 --> 00:00:54,180
Come dovrebbero essere configurati e i loro valori.

12
00:00:54,460 --> 00:01:00,160
Cos ora prender il mio set up da laggi con il cliente e il metodo di

13
00:01:00,160 --> 00:01:06,580
consegna cancella questi campi dall'oggetto Order per ora e aggiungo nel modulo d'ordine non voglio appiattirlo, cos ho

14
00:01:06,580 --> 00:01:09,520
solo tutti gli input che voglio avere .

15
00:01:09,520 --> 00:01:12,330
Quindi mi sbarazzo del cliente e dell'indirizzo.

16
00:01:12,340 --> 00:01:15,780
Quindi di queste propriet annidate qui.

17
00:01:15,790 --> 00:01:22,860
In modo che ora abbiamo solo alcune propriet nel modulo d'ordine in cui ogni propriet rappresenta un input.

18
00:01:22,860 --> 00:01:24,650
Voglio creare.

19
00:01:24,990 --> 00:01:32,050
Ora l'obiettivo  definire come appaiono gli input in modo che possiamo davvero passare attraverso questo oggetto

20
00:01:32,050 --> 00:01:37,570
dinamicamente che potremmo persino aggiungere elementi dinamicamente e creare un elemento input appropriato.

21
00:01:37,570 --> 00:01:42,200
Per questo voglio avere le propriet del tipo di elemento per ogni elemento.

22
00:01:42,490 --> 00:01:44,380
E questo dovrebbe essere un normale elemento di input.

23
00:01:44,380 --> 00:01:51,910
normale tassa HVM l fondamentalmente senza il segno pi basso e il segno pi grande di un nome di tag, quindi diciamo che

24
00:01:51,910 --> 00:01:57,490
vogliamo avere un elemento con falsi ei nomi di queste propriet sono ovviamente totalmente a te.

25
00:01:57,520 --> 00:01:58,790
Qui dovremmo usare la

26
00:01:59,030 --> 00:02:05,060
L'elemento conflitto qui potrebbe definire la configurazione degli attributi normali.

27
00:02:05,110 --> 00:02:08,680
Possiamo impostare il tag HVM scelto.

28
00:02:09,010 --> 00:02:12,040
Quindi qui potrebbe essere un tipo che dovrebbe essere testo.

29
00:02:12,040 --> 00:02:15,710
Potremmo impostare qui anche il segnaposto che potrebbe essere il tuo nome.

30
00:02:15,760 --> 00:02:21,670
Questo sar ci che voglio distribuire input overdye creato e quindi diciamo che vogliamo anche avere

31
00:02:21,670 --> 00:02:23,500
un valore per il nome.

32
00:02:23,710 --> 00:02:31,120
qui potrebbe essere semplicemente Maximillian o, naturalmente, un valore vuoto all'inizio ed  tutto per ora.

33
00:02:31,120 --> 00:02:31,830
Il valore

34
00:02:31,930 --> 00:02:38,380
E questo  un pattern che ora voglio ripetere per tutti gli elementi e potresti scrivere un codice

35
00:02:38,380 --> 00:02:44,830
un po 'pi pulito, potresti creare una funzione helper che crea un oggetto javascript in modo che qui

36
00:02:44,830 --> 00:02:48,010
tu chiami solo una funzione che lo inizializza.

37
00:02:48,100 --> 00:02:52,090
Va bene nella forma lunga per rendere davvero chiaro cosa sta succedendo qui.

38
00:02:52,180 --> 00:02:55,730
Anche se questo gonfier la nostra classe per il momento.

39
00:02:56,230 --> 00:02:58,810
In questo modo lo stencil sar anche testo di input.

40
00:02:59,170 --> 00:03:04,980
E poi se sei tutto solo in input street come questo valore potrebbe anche essere vuoto.

41
00:03:05,230 --> 00:03:09,670
Il codice di avviamento postale stesso input di testo di tipo.

42
00:03:09,670 --> 00:03:15,520
Ovviamente potresti inserire il numero del tipo qui, ma forse vuoi lasciare il supporto come testo in

43
00:03:15,520 --> 00:03:22,060
modo che gli utenti possano anche inserire dei codici con alcuni caratteri al loro interno dove ci sarebbe necessario.

44
00:03:22,060 --> 00:03:25,440
Quindi tutti voi aggiungete il codice come segnaposto.

45
00:03:27,110 --> 00:03:32,780
Ovviamente il paese sentir che potresti utilizzare un menu a discesa, ma utilizzer anche un testo qui in modo

46
00:03:32,810 --> 00:03:38,390
che possiamo accettare qualsiasi paese perch avere un menu a discesa con Paese limitato sta implementando i dati

47
00:03:38,390 --> 00:03:42,860
 un po 'pi complesso e probabilmente useresti un terzo pacchetto di festa per quello.

48
00:03:42,860 --> 00:03:44,010
E poi l'e-mail.

49
00:03:44,030 --> 00:03:46,680
Ultimo ma non meno importante, il tipo potrebbe essere l'email.

50
00:03:46,700 --> 00:03:50,890
Quindi l'e-mail di tipo HVM predefinita che puoi assegnare all'input.

51
00:03:51,020 --> 00:03:55,070
E qui puoi dire la tua mail o e-mail in realt.

52
00:03:55,070 --> 00:03:56,910
Quindi con questo otteniamo questo set up.

53
00:03:56,920 --> 00:04:03,410
Ora il metodo di consegna dovrebbe naturalmente anche ottenere tale oggetto qui sono il tipo

54
00:04:03,440 --> 00:04:12,800
di elementi, tuttavia dovrebbe essere come selezionare e il loro elemento D pu anche ovviamente avere alcuni elementi ma non il

55
00:04:12,800 --> 00:04:14,660
tipo non il segnaposto.

56
00:04:14,660 --> 00:04:18,970
Qui potremmo dire che vogliamo definire le opzioni che vogliamo avere un'opzione.

57
00:04:18,980 --> 00:04:25,520
Quindi, naturalmente, dovrebbe essere una matrice e quindi potremmo inserire nuovamente oggetti javascript dove abbiamo il valore

58
00:04:26,210 --> 00:04:33,870
che potrebbe essere pi veloce e il valore di visualizzazione che potrebbe essere il pi veloce in questo modo.

59
00:04:33,890 --> 00:04:38,060
E naturalmente puoi ottimizzare la configurazione del disco in base alle tue esigenze.

60
00:04:38,060 --> 00:04:40,830
Sto solo mostrando alcuni esempi qui.

61
00:04:40,890 --> 00:04:50,720
Quindi qui potremmo avere ovviamente una seconda opzione che  pi economica e qui  pi economica.

62
00:04:50,760 --> 00:04:53,130
Quindi questo potrebbe essere il mio metodo di consegna impostato.

63
00:04:53,130 --> 00:04:59,520
Cos ora otteniamo questo modulo d'ordine piuttosto lungo con tutte le coppie di valori chiave in cui abbiamo fondamentalmente alcuni

64
00:04:59,580 --> 00:05:01,790
identificatori dei nostri diversi elementi di forma.

65
00:05:01,920 --> 00:05:05,070
E poi un oggetto javascript con la configurazione e up.

66
00:05:05,220 --> 00:05:12,330
Ora regoliamo il nostro elemento di input per essere in grado di lavorare insieme con quello in modo che

67
00:05:12,450 --> 00:05:19,680
possiamo creare dinamicamente questi input semplicemente facendo un loop attraverso il nostro oggetto well qui che ovviamente dobbiamo trasformare

68
00:05:19,680 --> 00:05:21,470
in un array per quello.

69
00:05:21,660 --> 00:05:23,890
Ma iniziamo regolando l'elemento di input.

70
00:05:24,060 --> 00:05:26,140
Lo far anche in questa conferenza.

71
00:05:26,370 --> 00:05:34,350
Quindi, probabilmente, vogliamo passare qualcosa di simile a dare l'impressione di voler passare il tipo, il

72
00:05:34,350 --> 00:05:36,600
conflitto e il valore.

73
00:05:36,690 --> 00:05:45,630
Quindi dovremmo farlo rimuovendo il tipo segnaposto qui passiamo semplicemente il tipo di elemento qui che dovrebbe essere qualcosa che l'elemento

74
00:05:45,960 --> 00:05:52,500
profondo non pu pensare e non abbiamo bisogno di scrivere questo minuscolo perch cambier il

75
00:05:52,500 --> 00:05:59,910
modo in cui distribuisco oggetti di scena sul creato elemento e quindi anche il valore che 

76
00:06:00,210 --> 00:06:03,260
qualcosa, naturalmente, i valori reali verranno aggiunti presto.

77
00:06:03,300 --> 00:06:06,800
Quindi entriamo nel nostro elemento di input in l.

78
00:06:06,930 --> 00:06:09,320
Ora abbiamo ricevuto diversi oggetti di scena.

79
00:06:09,480 --> 00:06:13,980
Abbiamo il tipo di elemento in cui voglio ancora utilizzare la mia istruzione switch.

80
00:06:14,340 --> 00:06:23,120
Ma poi non distribuisco pi tutti gli oggetti di scena distribuisco solo oggetti di scena e non ci sono propriet di conflitto degli elementi.

81
00:06:23,190 --> 00:06:24,310
Ho appena creato.

82
00:06:24,390 --> 00:06:30,970
Cos fa la propriet che, naturalmente, alla fine dovrebbe ricevere il conflitto di elementi impostato per un dato input.

83
00:06:30,990 --> 00:06:36,130
Nel nostro stato e l se poi distribuiamo gli oggetti di scena questi sono i valori predefiniti.

84
00:06:36,150 --> 00:06:42,550
H m m i nomi di attributo e ovviamente  importante che tu li usi all'interno del conflitto di elementi.

85
00:06:42,570 --> 00:06:44,180
I nomi predefiniti

86
00:06:44,610 --> 00:06:48,770
Quindi con questo abbiamo ottenuto questo elemento di input.

87
00:06:48,930 --> 00:06:55,220
Solo quest'anno naturalmente voglio anche aggiungere valore a ciascun elemento di input.

88
00:06:55,260 --> 00:07:03,130
di input aggiungendo la propriet value l e accecandolo per i valori props in modo che anche questo venga ricevuto qui.

89
00:07:03,150 --> 00:07:04,990
Quindi aggiunger il mio componente

90
00:07:05,780 --> 00:07:11,780
E ora tutto semplicemente avvolge tutte queste propriet su pi righe per creare gli elementi

91
00:07:11,780 --> 00:07:21,010
in modo che sia un po 'pi facile da capire e leggere e con questo otteniamo l'elemento input il componente di input personalizzato che

92
00:07:21,020 --> 00:07:24,420
dovrei dire, che si spera funzioni nella prossima lezione.

93
00:07:24,430 --> 00:07:32,230
Ora voglio usare il nostro javascript per i dati che abbiamo configurato in uno stato per creare con esso gli elementi di

94
00:07:32,230 --> 00:07:32,880
input reali.

