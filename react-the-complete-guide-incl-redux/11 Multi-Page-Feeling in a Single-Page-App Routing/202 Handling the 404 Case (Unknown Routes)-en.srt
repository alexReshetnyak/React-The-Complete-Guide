1
00:00:02,220 --> 00:00:09,840
In the last lecture I talked about guards, now I want you to consider for for a case so that we're accessing

2
00:00:09,840 --> 00:00:11,840
a route which is unknown.

3
00:00:11,910 --> 00:00:18,600
We actually saw one way of handling it with redirect here because if we try to access new posts when

4
00:00:18,600 --> 00:00:22,630
unauthenticated, this route is unknown because it's not rendered

5
00:00:22,670 --> 00:00:29,940
and as you could see if we still click on new post, we are essentially redirected back to post.

6
00:00:29,960 --> 00:00:32,900
This is one way of handling for 404 requests,

7
00:00:32,900 --> 00:00:36,010
you can simply redirect to another route.

8
00:00:36,500 --> 00:00:40,430
However you can also handle them in a different way,

9
00:00:40,880 --> 00:00:47,750
if you want to handle them differently I have to comment this out, otherwise this will catch any unknown

10
00:00:47,750 --> 00:00:49,100
requests.

11
00:00:49,100 --> 00:00:57,410
You can specify the route component here and if you leave out the path so you don't add path, you can

12
00:00:57,410 --> 00:01:06,080
simply define a component or the render method you learned about to render something for any unknown route.

13
00:01:06,080 --> 00:01:09,390
So here I'm going to output not found,

14
00:01:09,440 --> 00:01:16,810
of course you could again just set it, use component and render 404 error page component you created

15
00:01:17,030 --> 00:01:21,900
but this route will catch any routes which are not handled prior to it.

16
00:01:22,070 --> 00:01:26,450
So any unknown routes in our case and it will output this.

17
00:01:26,660 --> 00:01:32,170
Now it won't work together with redirecting from the root route because this also catches all and

18
00:01:32,170 --> 00:01:34,600
what ever order you use, one or the other wins

19
00:01:34,610 --> 00:01:39,920
so the other one doesn't do anything. For any other use cases where you don't redirect from the route

20
00:01:39,920 --> 00:01:40,660
route though,

21
00:01:40,700 --> 00:01:42,270
you can use them together.

22
00:01:42,650 --> 00:01:50,390
But here this is a nice catch all route which should always come last and show an appropriate page or

23
00:01:50,390 --> 00:01:53,590
render some dummy content for unknown routes,

24
00:01:53,630 --> 00:01:59,420
let me show this to you. If we now click on new post which is unknown because we're not rendering that

25
00:01:59,420 --> 00:02:02,780
route component due to us not being authenticated,

26
00:02:02,900 --> 00:02:07,110
we see not found. The same for the route URL by the way,

27
00:02:08,470 --> 00:02:13,180
there we also see not found because it's not defined right now,

28
00:02:13,180 --> 00:02:15,470
posts still works though.

29
00:02:16,000 --> 00:02:18,190
So this is a catch all route,

30
00:02:18,200 --> 00:02:24,930
another important concept especially for 404 cases to catch any unknown routes.

31
00:02:24,970 --> 00:02:31,930
Now as I said, it won't work together with redirect if you redirect from slash, if you redirect from any

32
00:02:31,930 --> 00:02:33,560
error page than slash,

33
00:02:33,580 --> 00:02:34,640
it'll work though.

34
00:02:34,690 --> 00:02:40,420
The reason they don't work together is that here, from is treated as a prefix and therefore this catches

35
00:02:40,420 --> 00:02:47,200
all routes as does this and therefore no matter how you order them, it won't work together.

36
00:02:47,200 --> 00:02:53,920
I still wanted to show you both because you rarely have the case that two routes collide here and then

37
00:02:53,920 --> 00:02:59,940
you have a powerful way of handling 404 error cases with a route without a path.

