1
00:00:02,140 --> 00:00:07,170
Routing is about being able to show different pages to the user.

2
00:00:07,180 --> 00:00:11,200
Most web applications you know probably have more than one page,

3
00:00:11,320 --> 00:00:17,940
They have a users page, they have a post's page, an account page whatever the page is about.

4
00:00:17,950 --> 00:00:22,450
Now of course you may wonder multiple pages in a single page application,

5
00:00:22,450 --> 00:00:24,600
how does that work together?

6
00:00:24,610 --> 00:00:28,450
Well keep in mind the idea behind a single page application is to have,

7
00:00:28,480 --> 00:00:29,290
well guess what?

8
00:00:29,290 --> 00:00:36,520
A single page, a single html file. We still want to provide the user with a normal web using experience

9
00:00:36,620 --> 00:00:41,860
though, we want to show the user different pages for different URLs.

10
00:00:41,860 --> 00:00:50,560
The trick just is that we don't actually have multiple html files, but then we instead use javascript

11
00:00:50,800 --> 00:00:54,740
to render different pages for different paths.

12
00:00:54,880 --> 00:01:02,260
So we don't really have different files but simply we re-render parts off that single page or maybe

13
00:01:02,260 --> 00:01:09,670
the entire single page depending on which path the user navigated to in our application. This is what

14
00:01:09,670 --> 00:01:11,780
routing is about, parsing

15
00:01:12,020 --> 00:01:21,080
this path, so the path after our domain and showing the appropriate jsx or component code in our app. And

16
00:01:21,090 --> 00:01:27,280
for that as I said, we're going to use a router package to add such a functionality so that we don't

17
00:01:27,280 --> 00:01:35,310
have to parse that path on our own which is non-trivial. That router package has a couple of tasks,

18
00:01:35,320 --> 00:01:42,540
first of all of course it has to parse the URL path to understand where the user wanted

19
00:01:42,550 --> 00:01:43,510
to go to.

20
00:01:43,610 --> 00:01:51,190
Then we as a developer have to configure different paths in our application which we support and the

21
00:01:51,190 --> 00:01:58,510
router package can then read our configuration basically, so that it knows which paths are supported

22
00:01:58,810 --> 00:02:04,940
and what should happen when the user visits one of these paths. This is the third step,

23
00:02:05,050 --> 00:02:13,750
it will then render or load the appropriate jsx or component code depending on which path the user

24
00:02:13,750 --> 00:02:14,590
visited.

25
00:02:14,650 --> 00:02:22,330
This is the idea behind routing, load different code, conditional jsx or component code for different

26
00:02:22,330 --> 00:02:28,660
paths and we use a router package so that we don't have to determine which path the user is on on our

27
00:02:28,660 --> 00:02:29,190
own.

28
00:02:29,260 --> 00:02:35,170
Now in this module I will walk you through that router package through the features and supports and how

29
00:02:35,170 --> 00:02:41,350
you may use it in your application to implement multiple pages in your single page app.

