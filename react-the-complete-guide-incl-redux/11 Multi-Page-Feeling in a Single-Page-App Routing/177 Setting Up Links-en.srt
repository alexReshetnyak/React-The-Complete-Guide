1
00:00:02,140 --> 00:00:08,140
To demonstrate routing, I'm back in this little blog application which we created, where we render blog

2
00:00:08,170 --> 00:00:14,220
posts, can select a blog post and where we can also create a new post.

3
00:00:14,260 --> 00:00:17,680
Right now, that's all sitting in on one and the same page

4
00:00:17,680 --> 00:00:22,350
and this of course is not really the user experience we want to provide.

5
00:00:22,390 --> 00:00:29,380
Instead we probably want to show some links at the top to allow the user to switch between pages and

6
00:00:29,470 --> 00:00:31,580
well load different pages.

7
00:00:31,690 --> 00:00:38,530
So let's start by adding these links before we start implementing routing and supporting these different

8
00:00:38,530 --> 00:00:39,730
links.

9
00:00:39,790 --> 00:00:45,490
Now the links can simply be added to the blog container and you could of course also outsource them

10
00:00:45,490 --> 00:00:47,170
into their own component

11
00:00:47,170 --> 00:00:51,810
but I want to keep this lean so that I can focus on the routing functionality.

12
00:00:51,910 --> 00:00:59,130
We will then see a real world set up in the next module where we apply routing to our course project.

13
00:00:59,470 --> 00:01:06,910
So in our render method, I not only want to output my posts but above the posts, I want to have some

14
00:01:06,910 --> 00:01:13,780
header where I also output some links, so I'll add a header here and in there,

15
00:01:13,810 --> 00:01:15,450
My nav element

16
00:01:15,610 --> 00:01:23,830
and there we typically have an unordered list which then in turn contains our links inside list items

17
00:01:23,990 --> 00:01:29,530
and for now I'll simply add them like well normal links simply.

18
00:01:29,530 --> 00:01:36,520
So there we have probably our home link which will be that starting page which shows all the posts we

19
00:01:36,520 --> 00:01:37,600
have,

20
00:01:37,600 --> 00:01:45,250
then we might have a link for a single post and this is something we will create dynamically so forward

21
00:01:45,270 --> 00:01:45,730
posts

22
00:01:45,730 --> 00:01:51,940
we load it, and the last thing I want to have here in the navigation is the new post link which

23
00:01:51,940 --> 00:01:55,830
could lead to /new-posts or something like that.

24
00:01:55,900 --> 00:02:00,570
So this is how we now set up our links,

25
00:02:00,580 --> 00:02:05,490
now let me add some styling so that they don't look super ugly. For that I'll

26
00:02:05,490 --> 00:02:14,680
first of all quickly style the unordered list to have no default list style, so the margin and padding of 0,

27
00:02:15,340 --> 00:02:16,900
I'll then also style

28
00:02:16,900 --> 00:02:24,550
any list items in my posts components here in the end which I have, so this blog component, there the list

29
00:02:24,550 --> 00:02:36,220
items should use the inline-block style and have a margin of maybe 20px around them and the links

30
00:02:36,310 --> 00:02:45,700
in there, the anchor tags. I'll remove the text decoration so set this to none, give them a color of black.

31
00:02:45,700 --> 00:02:48,650
Now let's see how that looks like, if we go back,

32
00:02:48,760 --> 00:02:54,990
we see that here at the top, the reason for this of course is that I have a little error.

33
00:02:55,180 --> 00:02:58,170
Posts is applied to this first section,

34
00:02:58,180 --> 00:03:01,350
I'll need to set an overall class name of blog

35
00:03:01,360 --> 00:03:07,330
maybe here on the wrapping div and then the css file. Therefore, I'll replace posts with blog here for the

36
00:03:07,330 --> 00:03:09,050
navigational aid items.

37
00:03:09,310 --> 00:03:10,710
So now we get the links here,

38
00:03:10,780 --> 00:03:17,800
let's maybe also center them, I'll set a width of 100% for the unordered list and then set text

39
00:03:17,830 --> 00:03:22,750
align center so that the links are now centered.

40
00:03:22,750 --> 00:03:34,140
Now let's maybe also add a little hover style so blog a hover and blog a active can now get a color

41
00:03:34,230 --> 00:03:39,540
of maybe #fa923 which is an orange color.

42
00:03:39,560 --> 00:03:41,850
Now with that, we got our links.

43
00:03:41,870 --> 00:03:45,260
That's of course nice but clicking these doesn't really do much,

44
00:03:45,260 --> 00:03:46,350
It loads different

45
00:03:46,350 --> 00:03:46,770
URLs

46
00:03:46,820 --> 00:03:48,410
as you can see in the URL bar,

47
00:03:48,470 --> 00:03:50,790
but it doesn't affect our application.

48
00:03:50,810 --> 00:03:53,270
Actually it always returns to same page.

49
00:03:53,270 --> 00:03:58,820
This is related to the way our development server is set up and your production server should also

50
00:03:58,850 --> 00:03:59,680
be set up.

51
00:03:59,690 --> 00:04:06,220
It always returns the index.html file for every route because for the server, there are no different

52
00:04:06,220 --> 00:04:08,470
routes, there is only one single file

53
00:04:08,480 --> 00:04:10,470
it has return all the time.

54
00:04:10,520 --> 00:04:14,210
It's now about parsing that URL in the client.

55
00:04:14,240 --> 00:04:20,140
This is what we'll start working on next by adding the router package and setting up different routes.

