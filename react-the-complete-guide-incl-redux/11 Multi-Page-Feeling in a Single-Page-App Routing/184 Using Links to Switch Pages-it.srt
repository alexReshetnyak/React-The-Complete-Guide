1
00:00:02,190 --> 00:00:08,650
Nell'ultima lezione abbiamo fatto in modo che possiamo effettivamente passare da una pagina all'altra, ma la nostra applicazione  in continuo

2
00:00:08,650 --> 00:00:10,830
aggiornamento e non vogliamo che ci avvenga.

3
00:00:10,960 --> 00:00:16,990
Ora vogliamo essere sicuri di rimanere all'interno dell'applicazione quando facciamo clic sui collegamenti al suo interno

4
00:00:16,990 --> 00:00:20,820
quando arrivano da fuori e inserendo direttamente il nuovo messaggio.

5
00:00:20,830 --> 00:00:23,380
Ovviamente ricaricher l'app se premiamo Invio.

6
00:00:23,380 --> 00:00:24,720
 cos che funziona Internet.

7
00:00:24,720 --> 00:00:30,280
Inviamo una nuova richiesta per ottenere una nuova pagina ma all'interno della nostra applicazione e facciamo clic sui collegamenti non abbiamo bisogno

8
00:00:30,280 --> 00:00:32,350
di tale comportamento perch siamo all'interno di essa.

9
00:00:32,350 --> 00:00:38,650
In pratica, possiamo prevenire un default e assicurarci che nessuna richiesta venga inviata e gestirla internamente

10
00:00:38,740 --> 00:00:41,280
per reinserire la pagina con javascript.

11
00:00:41,470 --> 00:00:44,200
Per questo abbiamo bisogno di cambiare i nostri link.

12
00:00:44,200 --> 00:00:46,510
In questo momento usiamo il normale testo di ancoraggio.

13
00:00:46,660 --> 00:00:50,350
E questo non  quello che usiamo veramente quando utilizziamo un router re-act.

14
00:00:50,610 --> 00:00:58,660
Loro sono un componente speciale che possiamo usare il componente link come i nomi dei link di gests ci

15
00:00:58,660 --> 00:00:59,510
permette di.

16
00:00:59,530 --> 00:01:02,150
Hai indovinato che crea un link.

17
00:01:02,140 --> 00:01:05,040
Usiamo questo invece di Yank o tag.

18
00:01:05,040 --> 00:01:07,430
L usiamo il link ovviamente.

19
00:01:07,590 --> 00:01:15,400
Inoltre, dal momento che il solo collegamento di tag di chiusura non fa molto perch abbiamo bisogno di dire al router di re-act

20
00:01:15,400 --> 00:01:17,070
dove dovrebbe portare il link.

21
00:01:17,080 --> 00:01:26,530
Lo facciamo come con le due propriet le due propriet nella sua forma pi semplice  una stringa simile alla barra.

22
00:01:26,530 --> 00:01:32,280
Ora questo  essenzialmente lo stesso di un ref uguale a barra.

23
00:01:32,590 --> 00:01:39,340
Ma il router re-act creer il tag yanker e quindi preverr il default che sarebbe quello di inviare una nuova richiesta

24
00:01:39,610 --> 00:01:42,570
e invece di gestire quel clic su se stesso.

25
00:01:42,580 --> 00:01:44,180
Ecco perch abbiamo bisogno di usare Layng.

26
00:01:44,380 --> 00:01:47,450
No, ho detto che nella forma pi semplice  una barra.

27
00:01:47,620 --> 00:01:53,720
Pu anche essere un elemento pi complesso pu essere un oggetto javascript e, quindi, deve essere racchiuso nella chiamata

28
00:01:53,730 --> 00:01:56,410
singola le parentesi graffe per generare contenuti dinamici.

29
00:01:56,680 --> 00:01:59,830
E poi il contenuto dinamico  un oggetto javascript.

30
00:01:59,830 --> 00:02:02,300
Quindi un altro paio di parentesi graffe.

31
00:02:02,680 --> 00:02:06,050
E quindi possiamo ora configurare dove vogliamo andare.

32
00:02:06,130 --> 00:02:13,080
nuovi post, ma ora possiamo aggiungere anche un potenziale tag hash dopo come submit.

33
00:02:13,080 --> 00:02:23,240
Possiamo impostare qui una propriet pathname che quindi  di nuovo la stringa in cui vogliamo andare a Slash come

34
00:02:23,260 --> 00:02:24,210
Quale non ho.

35
00:02:24,220 --> 00:02:31,150
Ma questo ci permetterebbe di saltare a qualsiasi idea, di avere elementi finanziati, quindi di usare quella caratteristica

36
00:02:31,160 --> 00:02:35,770
di aggiungere un frammento offerto da te, altrimenti potresti esserne a conoscenza.

37
00:02:35,800 --> 00:02:42,150
Puoi semplicemente aggiungere hash qualcosa dopo il punto in cui salti a quel punto.

38
00:02:42,220 --> 00:02:52,610
Possiamo anche impostare la ricerca e la ricerca ci consente di aggiungere i genitori di query come Wake invia uguale.

39
00:02:52,640 --> 00:02:53,130
Vero.

40
00:02:53,180 --> 00:02:54,760
Ora questi sono solo esempi.

41
00:02:54,770 --> 00:03:00,380
Non faranno nulla in questa applicazione, ma questa  una configurazione avanzata che possiamo usare per configurare

42
00:03:00,470 --> 00:03:05,330
dove stiamo andando quando si fa clic su questo collegamento con questi collegamenti implementati.

43
00:03:05,330 --> 00:03:12,500
Ora se salviamo l'applicazione e torniamo vedrai che sono sull'ultimo nuovo post ora se clicco su home torno

44
00:03:13,210 --> 00:03:16,190
a casa ma vedrai che questo ricarica.

45
00:03:16,220 --> 00:03:19,380
In realt non posso mai spendere lo stesso per i nuovi post.

46
00:03:19,550 --> 00:03:24,920
E qui vedi anche che Querrey Perham e il tag hash sono stati aggiunti alla fine.

47
00:03:24,920 --> 00:03:28,070
Quindi ora non stiamo effettivamente ricaricando la pagina.

48
00:03:28,070 --> 00:03:35,060
come prima, ma ora semplicemente reagire  rendere reali parti della pagina che devono essere renderizzate.

49
00:03:35,060 --> 00:03:35,900
Sembra esattamente

50
00:03:35,960 --> 00:03:38,090
Non stiamo caricando una nuova pagina.

51
00:03:38,090 --> 00:03:40,560
Non stiamo caricando di nuovo quella stessa pagina.

52
00:03:40,640 --> 00:03:45,910
Ovviamente quando si carica di nuovo la stessa pagina  ancora riattiva il rendering del javascript al DOM.

53
00:03:45,980 --> 00:03:51,110
Ma come ho detto, in realt ricaricheremo la pagina mentre sta facendo ci e quindi perderemo il nostro stato.

54
00:03:51,140 --> 00:03:53,150
Ora il nostro stato  contenuto.

55
00:03:53,150 --> 00:03:54,960
Non ricarichiamo l'applicazione.

56
00:03:55,040 --> 00:03:58,120
E questo  il modo in cui dovremmo effettivamente navigare.

57
00:03:58,120 --> 00:04:01,070
Quindi utilizzando il componente di de-link.

