1
00:00:02,110 --> 00:00:08,020
In the last lecture, we set up the links, let's now set up the router package. For that, I'll quit my development

2
00:00:08,020 --> 00:00:14,430
server and use npm install to install a package with --save, I'll also create an entry package.json

3
00:00:14,490 --> 00:00:20,560
file so that we store the package there so we can easily share a project. And then, the

4
00:00:20,560 --> 00:00:23,320
name of the package is react-router,

5
00:00:23,560 --> 00:00:30,420
we need a second one though, react-router contains the logic you could say but to be able to render

6
00:00:30,440 --> 00:00:38,120
something to the dom, so to tell react to render something, we need react-router-dom too,

7
00:00:38,160 --> 00:00:44,800
so these two packages. Hit enter thereafter and will download and install the latest versions of these

8
00:00:44,800 --> 00:00:45,710
packages,

9
00:00:45,880 --> 00:00:53,170
and as I said this is a package not created by Facebook but it's de-facto standard for routing in react

10
00:00:53,170 --> 00:00:54,360
applications.

11
00:00:54,670 --> 00:00:58,670
So with npm start we can then start the development server again

12
00:00:58,770 --> 00:01:05,650
and now of course we want to start using that router package, and I want to start by making sure that

13
00:01:05,650 --> 00:01:14,160
we only load the post component here for our root route which essentially has just a slash at the end.

14
00:01:14,170 --> 00:01:21,070
So for this route, I only want to load my posts. Right now in the blog container,

15
00:01:21,100 --> 00:01:24,300
I'm loading posts full post and new post

16
00:01:24,370 --> 00:01:30,250
Now I want to break this up and I will remove full post and new post from there.

17
00:01:30,260 --> 00:01:33,970
Now of course I only load the posts but I'm not really doing this dynamically.

18
00:01:33,970 --> 00:01:42,000
I do this all the time. So the ID assembly is to now only load this if I'm at my domain/

19
00:01:42,010 --> 00:01:48,050
nothing so for the root path, not slash users, not anything else,

20
00:01:48,070 --> 00:01:48,970
just slash

21
00:01:49,000 --> 00:01:50,290
nothing.

22
00:01:50,440 --> 00:01:56,340
And for that, we first of all need to enable routing in our react app,

23
00:01:56,500 --> 00:02:01,020
we do this in the index.js or the app.js file.

24
00:02:01,130 --> 00:02:09,850
There you now need to wrap the part of your wrap which should be able to render routes and to read routes,

25
00:02:10,270 --> 00:02:16,510
you need to wrap it with a component you import from the react-react-router-dom package.

26
00:02:16,600 --> 00:02:20,290
Now as I said, you can do it in both index.js and app.js,

27
00:02:20,300 --> 00:02:30,040
I'm doing it in the app.js file and there, I'll import something from react-router-dom, so from this package

28
00:02:30,070 --> 00:02:31,930
we just installed.

29
00:02:31,930 --> 00:02:38,870
There we use curly braces to import something which has a name, so a named export from the package

30
00:02:39,040 --> 00:02:42,460
and here it should be the browser router,

31
00:02:42,670 --> 00:02:49,450
this browser router object. Now you should wrap everything in your app which should be able to use routing

32
00:02:49,450 --> 00:02:50,240
with that.

33
00:02:50,440 --> 00:02:57,430
So I'll actually wrap the entire div here with it, with the browser router like this.

34
00:02:58,130 --> 00:03:05,840
This is now the router off this application and now we can use routing features from that routing

35
00:03:05,840 --> 00:03:10,050
package anywhere inside this

36
00:03:10,080 --> 00:03:17,490
wrapping components, so in any subcomponent which we embed here, this of course includes the blog.

37
00:03:17,710 --> 00:03:23,730
Now inside the blog component I now want to use routing in here,

38
00:03:23,730 --> 00:03:25,380
section posts,

39
00:03:25,450 --> 00:03:33,440
this should now actually be a custom component which we load when we visit /nothing on the URL.

40
00:03:33,520 --> 00:03:40,780
So for that, I'll create a new component and actually you could turn all these components into containers

41
00:03:40,810 --> 00:03:47,520
now because they will be distinct pages which typically have subcomponents distributing their state

42
00:03:47,530 --> 00:03:48,240
to them.

43
00:03:48,370 --> 00:03:54,810
So what I would need to do is I'll move full post into the blog folder of containers,

44
00:03:54,910 --> 00:04:02,020
new post and I'll create a new folder in the blog containers which is posts. Now the single

45
00:04:02,020 --> 00:04:08,590
post, I'll leave in components because it's just presentational but the other components were moved there.

46
00:04:08,890 --> 00:04:10,840
So let's quickly adjust all the imports

47
00:04:10,840 --> 00:04:14,500
now, here in full post nothing needs to be adjusted,

48
00:04:14,560 --> 00:04:19,470
the same in new post, posts itself needs to be created so let's add a post.js

49
00:04:19,590 --> 00:04:26,820
file here and in the blog component, we can for now simply get rid of new post and full post,

50
00:04:26,830 --> 00:04:30,380
The post component also isn't needed here anymore,

51
00:04:30,400 --> 00:04:36,370
We can remove that too because now I'm going to go to this new posts lower component.

52
00:04:36,850 --> 00:04:38,610
Now in the next lecture,

53
00:04:38,650 --> 00:04:44,550
I'll quickly create this so that we then thereafter can start using routing.

