1
00:00:02,130 --> 00:00:06,270
Knouted ns cobrimos todas as tcnicas de redirecionamento que voc pode usar.

2
00:00:06,480 --> 00:00:12,500
Vamos falar sobre algo que est relacionado com o redirecionamento dos guardas de navegao.

3
00:00:13,080 --> 00:00:20,400
O Guarda  algo que voc pode saber de outros quadros e os roteadores normalmente o Garda, por exemplo,

4
00:00:20,400 --> 00:00:25,030
usado quando voc no sabe onde cada usurio  autenticado ou no.

5
00:00:25,170 --> 00:00:32,790
E h algumas partes em seu aplicativo, algumas rotas que voc s quer permitir que o

6
00:00:32,790 --> 00:00:42,360
usurio visite se ele estiver ofendendo odiado wifi re-act roteador, voc precisar ter que pensar em descartar de uma nova maneira.

7
00:00:42,360 --> 00:00:49,080
Por exemplo, nos componentes do bloco voc est em um recipiente bloqueado onde configuramos o roteamento para uma

8
00:00:49,080 --> 00:00:51,300
nova postagem e assim por diante.

9
00:00:51,370 --> 00:00:58,020
O sentido no final tudo o que estamos fazendo aqui  apenas renderizar alguns componentes do componente de

10
00:00:58,020 --> 00:01:04,170
rota do componente do switch se quisermos garantir que as novas postagens no possam ser alcanadas.

11
00:01:04,170 --> 00:01:08,340
No podemos simplesmente fazer isso condicionalmente.

12
00:01:08,340 --> 00:01:16,670
Ento, digamos que ns temos algum estado fora aqui eu adiciono estado e esse estado  inicialmente falso.

13
00:01:18,050 --> 00:01:25,430
Agora, o que eu posso fazer  que eu posso entrar na minha declarao de renderizao e at agora usar uma

14
00:01:25,430 --> 00:01:31,530
varivel que retorna a rota NULL ou inoperante ou para usar a soluo inline rpida e suja.

15
00:01:31,700 --> 00:01:39,350
Posso verificar se esse estado  verdadeiro, caso em que eu quero renderizar essa rota, caso contrrio eu devolvo NULL.

16
00:01:39,380 --> 00:01:45,890
no for oferecido. Ento, se o estado fora  falso porque essa rota  basicamente desconhecida, ento porque ela no  processada.

17
00:01:46,070 --> 00:01:50,340
Agora, no h nenhuma maneira para o usurio acessar uma nova postagem se ele

18
00:01:50,660 --> 00:01:56,750
Ento, agora, se eu salvar isso e me lembrar, o estado padro agora  falso.

19
00:01:56,750 --> 00:02:04,350
Se este for o caso e eu clicar na nova publicao, redireciono de volta para a pgina inicial porque o

20
00:02:04,350 --> 00:02:08,250
que est acontecendo essencialmente aqui  que o redirecionamento dispara aqui.

21
00:02:08,370 --> 00:02:15,630
Como eu disse do seu basicamente chust  usado como um prefixo e, portanto, pega tudo o

22
00:02:15,660 --> 00:02:19,740
que no  pego antes e redireciona-me para posts.

23
00:02:19,740 --> 00:02:21,590
Este  um guarda.

24
00:02:21,630 --> 00:02:27,480
 totalmente diferente que usamos guardas em Bangalore ou qualquer outra estrutura.

25
00:02:27,570 --> 00:02:32,610
Mas, no final,  assim que voc pode controlar convenientemente onde o usurio tem permisso

26
00:02:32,610 --> 00:02:34,440
para acessar esta pgina ou no.

27
00:02:34,440 --> 00:02:42,230
Claro que uma alternativa para isso seria ir para a pgina protegida e o componente interno que ele monta aqui.

28
00:02:42,450 --> 00:02:49,080
Voc tambm pode verificar se o usurio  autntico odiado e, claro, depende do aplicativo de onde

29
00:02:49,140 --> 00:02:51,200
voc est obtendo essa informao.

30
00:02:51,480 --> 00:03:01,060
Mas ento voc tambm pode verificar isso aqui e simplesmente usar o histrico de dis prop substituir posts.

31
00:03:01,260 --> 00:03:04,940
Se o usurio for reivindicado, por exemplo, assim.

32
00:03:05,190 --> 00:03:11,460
 uma alternativa usando quantidades de componentes essencialmente redirecionadas para usar ou se no  verdade.

33
00:03:11,490 --> 00:03:12,780
Ento, isso tambm

34
00:03:12,780 --> 00:03:19,680
 assim que voc trabalha com o roteador re-actriz.  assim que eu costumava pensar sobre isso. Voc

35
00:03:19,680 --> 00:03:20,620
controla muito disso.

36
00:03:20,740 --> 00:03:23,080
Pela maneira que voc processa seus componentes.

37
00:03:23,160 --> 00:03:27,240
E se essa rota no for renderizada, voc no pode alcanar essa rota.

38
00:03:27,240 --> 00:03:32,790
A definio no  processada para que o componente conectado a ela no possa ser carregado.

39
00:03:33,240 --> 00:03:38,310
 assim que voc tem que pensar sobre isso e como voc deve estruturar seu aplicativo.

40
00:03:38,460 --> 00:03:44,070
Enrole sua cabea em torno disso, isso  realmente crucial para entender e entender.

