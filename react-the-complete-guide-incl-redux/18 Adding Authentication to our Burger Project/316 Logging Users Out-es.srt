1
00:00:02,140 --> 00:00:07,720
Ahora, antes de seguir usando ese token que almacenamos en nuestra tienda

2
00:00:08,140 --> 00:00:13,970
redux, recuerde que cuando inicie sesin e inspeccionamos los datos que recibimos,

3
00:00:13,990 --> 00:00:18,240
permtame hacer esto rpidamente, cambie para iniciar sesin, all

4
00:00:18,250 --> 00:00:21,410
tambin obtenemos este valor de expiresIn .

5
00:00:21,520 --> 00:00:25,880
Por lo tanto, el token solo es vlido durante 60 minutos, luego

6
00:00:25,880 --> 00:00:32,440
de eso siempre que lo enviemos a cualquier recurso que requiera un token, la solicitud fallar como si

7
00:00:32,440 --> 00:00:34,220
no hubiramos enviado ningn token.

8
00:00:34,220 --> 00:00:36,400
Ahora bien, esta no es la

9
00:00:36,400 --> 00:00:41,970
mejor experiencia para el usuario; es probable que deseemos desconectar activamente al usuario despus de esta hora.

10
00:00:42,220 --> 00:00:48,940
Como nota al margen, si el usuario vuelve a cargar la aplicacin, el estado se pierde de todos modos porque eso borra la

11
00:00:48,940 --> 00:00:52,200
tienda de reduccin ya que toda la aplicacin se recarga, por

12
00:00:52,360 --> 00:00:58,390
lo que podemos cambiar la interfaz de usuario de todos modos, lo que haremos en el futuro para demostrar que No

13
00:00:58,390 --> 00:01:05,020
hemos iniciado sesin pero es el estado en el que estamos conectados y no volvemos a cargar la pgina durante una hora en

14
00:01:05,020 --> 00:01:10,760
la que podemos encontrarnos en este lugar extrao de tener un token que ya no es vlido sin que lo veamos.

15
00:01:10,840 --> 00:01:20,740
Por esa razn, lo que quiero hacer es, quiero agregar un cdigo para invalidar ese token despus de una hora, para

16
00:01:21,040 --> 00:01:24,070
que luego tambin podamos actualizar nuestra

17
00:01:24,190 --> 00:01:33,490
UI una vez que el token ya no est all. Para hacer eso, entrar en mi archivo de

18
00:01:33,730 --> 00:01:41,240
acciones de autenticacin y agregar una nueva constante, una nueva funcin que nombrar checkAuthTimeout,

19
00:01:41,270 --> 00:01:51,050
all espero obtener el tiempo de expiracin y all devolver esta funcin. donde obtengo un despacho como argumento

20
00:01:51,050 --> 00:01:54,350
porque quiero ejecutar algn cdigo asncrono.

21
00:01:54,860 --> 00:02:02,280
Enviar esta accin checkAuthTimeout cuando recibamos una respuesta exitosa, por lo que tambin

22
00:02:02,360 --> 00:02:07,870
enviar authSuccess, tambin enviar checkAuthTimeout y transmitir los datos de

23
00:02:08,030 --> 00:02:11,110
respuesta y all, es esta

24
00:02:11,420 --> 00:02:13,420
propiedad expira. Usted vio,

25
00:02:13,460 --> 00:02:17,570
expira, puede ver rpidamente que si nos

26
00:02:17,660 --> 00:02:22,660
conectamos de nuevo, cambie para iniciar sesin, estoy hablando

27
00:02:22,910 --> 00:02:28,860
de esta propiedad caduca en. Eso tiene un valor, un nmero o,

28
00:02:28,860 --> 00:02:35,370
para ser precisos, una cadena pero que se puede analizar como un nmero y lo consigo

29
00:02:35,660 --> 00:02:43,960
aqu, all ahora quiero llamar a setTimeout y ejecutar una funcin despus de una cierta cantidad de tiempo y probablemente

30
00:02:43,970 --> 00:02:48,490
puedas adivinar qu cantidad de tiempo, el tiempo de vencimiento aqu.

31
00:02:48,680 --> 00:02:56,230
Ahora, aqu en setTimeout, quiero hacer algo y simplemente quiero cerrar la sesin, esta es una nueva accin

32
00:02:56,280 --> 00:02:58,540
que necesito de todos modos.

33
00:02:58,690 --> 00:03:00,460
As que exportar una constante

34
00:03:00,470 --> 00:03:08,130
que nombrar cerrar sesin aqu, ser una accin que no toma ninguna entrada, ser un creador de accin sincrnico, establecer

35
00:03:08,300 --> 00:03:11,820
el tipo a un tipo que an tengo que

36
00:03:11,840 --> 00:03:20,150
crear as que vamos a crelo ahora, en tipos de accin exportar una constante AUTH_LOGOUT con el identificador AUTH_LOGOUT y ahora con

37
00:03:20,150 --> 00:03:30,630
eso, puedo despachar esta accin, de modo que aqu el tipo ser actionTypes. AUTH_LOGOUT y esta accin de cierre de sesin,

38
00:03:30,810 --> 00:03:38,100
este creador de acciones aqu tambin se usar en setTimeout de checkAuthTimeout.

39
00:03:38,400 --> 00:03:46,920
As que aqu me gustara llamar al despacho despus de la hora de vencimiento para llamar a la accin de cierre de

40
00:03:46,920 --> 00:03:52,690
sesin, as, siempre ejecute estas funciones porque luego devuelve la accin que realmente se despacha.

41
00:03:52,740 --> 00:04:00,480
As que ahora con eso, ejecutamos o despachamos la funcin de cierre de sesin despus de ese lapso de tiempo y eso me permite

42
00:04:00,480 --> 00:04:04,790
ahora entrar en mi reductor y all, manejar el caso de cierre de sesin.

43
00:04:04,950 --> 00:04:13,940
As que agregar una nueva funcin que nombrar authLogout, aqu obtengo estado y accin y en la funcin, devolver un objeto

44
00:04:14,700 --> 00:04:23,370
javascript actualizado y, por supuesto, el objeto javascript actualizado aqu se crear con updateObject. mi antiguo estado en el que

45
00:04:24,150 --> 00:04:26,550
establec el token en nulo y

46
00:04:26,610 --> 00:04:35,400
el ID de usuario en nulo, por lo que estoy bsicamente desconectado porque toda esa informacin central que formaba un

47
00:04:35,400 --> 00:04:41,790
usuario conectado ahora se pierde de nuevo. Y necesito manejar eso

48
00:04:41,790 --> 00:04:51,580
por supuesto aqu, casos actionTypes. AUTH_LOGOUT, all quiero devolver el resultado de la funcin de cierre de

49
00:04:51,610 --> 00:05:00,130
sesin de autenticacin donde paso el estado y la accin como argumentos y con eso, tenemos este temporizador en el archivo

50
00:05:00,400 --> 00:05:07,060
de nuestro creador de acciones en checkAuthTimeout que se activar despus de que firebase nos devuelva

51
00:05:07,060 --> 00:05:11,660
y lo haga luego asegrese de que el usuario cierre la sesin.

52
00:05:11,690 --> 00:05:14,740
Y por ahora, esto limpiar la tienda y no har

53
00:05:14,740 --> 00:05:20,410
mucho ms, no mostrar ningn comentario visual, pero implementaremos algo que suceda cuando el usuario cierre la sesin, incluso

54
00:05:20,500 --> 00:05:26,570
cuando deliberadamente se desconecte para darle al usuario una pista de que l no est conectado. ha iniciado sesin ms.

55
00:05:26,890 --> 00:05:34,700
Por ahora, veamos si eso de despachar todas las obras, cambiar para iniciar sesin y enviar, echemos un vistazo a

56
00:05:35,740 --> 00:05:36,240
redux,

57
00:05:36,280 --> 00:05:38,660
de hecho estoy desconectado de inmediato,

58
00:05:38,980 --> 00:05:42,400
as que de alguna manera, esto se activ demasiado pronto.

59
00:05:42,400 --> 00:05:47,110
La razn, por supuesto, es que el tiempo de expiracin es 3600,

60
00:05:47,260 --> 00:05:50,190
pero setTimeout espera obtener milisegundos, por lo

61
00:05:50,200 --> 00:05:53,090
que solo fue 3. 6 segundos.

62
00:05:53,140 --> 00:05:54,250
Es una buena

63
00:05:54,250 --> 00:05:59,960
prctica, ahora podemos ver al menos que se enva authLogout y que borr los tokens y

64
00:06:00,370 --> 00:06:08,310
la identificacin del usuario, pero por supuesto, quiero multiplicar este valor por mil para convertir los milisegundos en segundos reales, por lo

65
00:06:08,350 --> 00:06:10,410
que ahora debera ser una hora.

66
00:06:10,420 --> 00:06:16,810
Ahora si guardo esto y hago este ejercicio nuevamente, inicie sesin, cambie para iniciar sesin, ahora no deberamos

67
00:06:16,840 --> 00:06:22,240
ver authLogout porque ahora podramos esperar una hora, no voy a hacer eso aqu, sintase

68
00:06:22,240 --> 00:06:23,760
libre de hacerlo por supuesto.

69
00:06:24,130 --> 00:06:25,610
Ahora podemos continuar y,

70
00:06:25,660 --> 00:06:32,170
finalmente, aprovechar nuestro token para proteger algunos de los recursos en nuestro back-end en primer lugar, an as alcanzarlos

71
00:06:32,170 --> 00:06:34,770
y, por supuesto, tambin actualizar nuestra interfaz de

72
00:06:34,810 --> 00:06:40,660
usuario para, por ejemplo, agregar un botn de cierre de sesin para permitir que el usuario cierre

73
00:06:41,050 --> 00:06:42,760
la sesin Y cosas como esa.

74
00:06:42,820 --> 00:06:46,540
Entonces estos sern los prximos pasos en los que

75
00:06:46,660 --> 00:06:48,970
trabajar, hagmoslo en las prximas conferencias.

