1
00:00:02,180 --> 00:00:10,860
L'errore che stiamo affrontando qui ha a che fare con il fatto che stiamo avvolgendo il nostro contenitore di app con la

2
00:00:11,490 --> 00:00:20,200
connessione e che semplicemente si rompe il nostro router di reazione. Possiamo facilmente risolvere il problema anche se abbiamo bisogno di

3
00:00:20,200 --> 00:00:23,440
importare il componente orderRouter con ordine superiore

4
00:00:23,880 --> 00:00:29,220
da react-router-dom e se ottieni un errore come questo che  sempre

5
00:00:29,220 --> 00:00:36,900
correlato a connettere il tuo componente che vuoi caricare con il routing e quindi questo componente non

6
00:00:36,900 --> 00:00:42,800
riceve i tuoi oggetti di scena, puoi semplicemente connetterti qui con withRouter proprio cos.

7
00:00:43,080 --> 00:00:49,000
E ora con quel piccolo cambiamento, withRouter far s che i tuoi oggetti di scena vengano passati al

8
00:00:49,000 --> 00:00:54,550
componente App ancora e quindi il router di reazione ritorna sulla pagina e sapremo cosa viene caricato

9
00:00:54,660 --> 00:00:56,370
cos, stiamo lavorando di nuovo.

10
00:00:56,730 --> 00:01:03,730
Quindi proviamo ora cosa volevamo testare in origine, aggiunger dove far il login qui, che funziona bene,

11
00:01:03,750 --> 00:01:05,130
ora su redux

12
00:01:05,130 --> 00:01:11,180
vediamo che abbiamo fatto il log in con successo, se abbiamo dato un'occhiata alla scheda

13
00:01:11,280 --> 00:01:14,770
dell'applicazione, abbiamo vediamo che abbiamo questi tre campi popolati.

14
00:01:15,210 --> 00:01:22,900
Ora lascia che ricarichi l'app, vedi che  azzerato e in redux abbiamo inviato auth logout,

15
00:01:22,900 --> 00:01:25,220
quindi questo non funziona correttamente.

16
00:01:25,300 --> 00:01:33,550
In qualche modo stiamo raggiungendo questa linea qui nel nostro creatore di azioni di autenticazione in cui inviamo il logout o

17
00:01:33,550 --> 00:01:36,100
questo, dovremo scoprire quale , quindi

18
00:01:36,100 --> 00:01:38,320
eseguiamo rapidamente il debug di questo.

19
00:01:38,350 --> 00:01:47,400
Per eseguire il debug di questo,  possibile andare in fonti e l nella nostra cartella

20
00:01:47,640 --> 00:01:51,570
fonte e tuffiamoci nelle azioni del negozio,

21
00:01:51,620 --> 00:01:53,270
il file auth.

22
00:01:53,280 --> 00:02:00,410
Quindi ora possiamo inserire un punto di interruzione qui nella nostra funzione authCheckState, mettiamone

23
00:02:00,530 --> 00:02:04,730
uno qui dove controlliamo se abbiamo un token.

24
00:02:05,170 --> 00:02:13,660
Consentitemi ora di autenticare e accedere di nuovo in modo che abbiamo un token per il futuro e ora ricarichiamo la

25
00:02:13,660 --> 00:02:21,680
pagina, ora rimaniamo bloccati qui perch il punto di interruzione entra in gioco e recuperiamo i token con successo.

26
00:02:22,480 --> 00:02:29,590
Passiamo ora a quello, lo inseriamo in quel blocco else perch abbiamo un token ma ora vediamo

27
00:02:29,590 --> 00:02:35,230
gi che la data di scadenza  un oggetto data, quindi sembra soddisfacente.

28
00:02:35,230 --> 00:02:37,880
Quindi la data di scadenza qui  nel futuro e

29
00:02:38,200 --> 00:02:44,020
quello che succede qui  che entriamo in quel blocco se  perfettamente logico, perch sto controllando se la data di

30
00:02:44,320 --> 00:02:47,540
scadenza  pi grande della data odierna o della data corrente e,

31
00:02:47,740 --> 00:02:52,480
naturalmente, non voglio effettuare il logout in questo caso perch  esattamente il caso in cui il

32
00:02:52,480 --> 00:02:53,230
token  valido.

33
00:02:53,500 --> 00:02:56,320
Quindi questo  un errore logico che possiamo

34
00:02:56,350 --> 00:02:58,180
correggere grazie al debug qui,

35
00:02:58,450 --> 00:03:00,980
quindi quello che dobbiamo fare  riformulare questo,

36
00:03:01,000 --> 00:03:07,420
vogliamo disconnetterci se la data di scadenza  minore o uguale, anche se  molto improbabile che la data

37
00:03:07,420 --> 00:03:09,130
attuale sia uguale. Con questo,

38
00:03:09,130 --> 00:03:13,570
se torniamo all'applicazione, eseguiamo di nuovo l'accesso, quindi

39
00:03:13,810 --> 00:03:17,670
facciamolo rapidamente, accedi e ora ricarichiamo la

40
00:03:17,860 --> 00:03:20,470
pagina e ora puoi vedere

41
00:03:20,630 --> 00:03:27,100
che abbiamo authSuccess qui, ma che  ancora seguito da authLogout.

42
00:03:27,440 --> 00:03:33,800
Quindi eseguiamo nuovamente il debug di questo, poniamo di nuovo qui un punto di

43
00:03:34,040 --> 00:03:37,910
interruzione per scoprire cosa c' di sbagliato qui, quindi

44
00:03:38,750 --> 00:03:43,710
aggiunger rapidamente il mio codice qui, invia questo e qui ricaricher

45
00:03:43,710 --> 00:03:44,710
l'app, eseguiremo

46
00:03:44,900 --> 00:03:52,040
questo controllo qui e ora se lo passiamo, andiamo al blocco else e facciamo login con successo.

47
00:03:52,060 --> 00:03:54,450
Ora continuiamo l'esecuzione del codice,

48
00:03:55,630 --> 00:03:58,740
quindi perch abbiamo fatto il logout qui?

49
00:03:58,840 --> 00:04:01,930
Potrebbe essere correlato alla nostra funzione checkAuthTimeout

50
00:04:01,930 --> 00:04:04,270
in cui inoltriamo anche il logout.

51
00:04:04,270 --> 00:04:12,090
Quindi inseriamo un punto di interruzione qui nel logout della spedizione per vedere se questo viene attivato in modo

52
00:04:12,520 --> 00:04:20,600
preventivo, quindi ora eseguir di nuovo il login, ricaricher l'app, raggiungiamo il primo punto di interruzione qui, possiamo semplicemente saltare

53
00:04:20,750 --> 00:04:22,690
avanti che sappiamo che non

54
00:04:22,700 --> 00:04:23,810
 possibile problema

55
00:04:23,810 --> 00:04:24,940
e in effetti,

56
00:04:25,040 --> 00:04:28,120
ora raggiungiamo il secondo in setTimeout.

57
00:04:28,370 --> 00:04:30,180
Questo per non dovrebbe sparare,

58
00:04:30,620 --> 00:04:34,190
il problema probabilmente  il tempo di scadenza che abbiamo impostato

59
00:04:34,190 --> 00:04:39,520
quindi poniamo un punto di interruzione su setTimeout per raggiungere un punto in cui  impostato

60
00:04:39,980 --> 00:04:45,950
questo timer e continuiamo per ora e proviamo ancora una volta per scoprire quale valore in realt 

61
00:04:45,950 --> 00:04:49,690
impostato come tempo di scadenza l perch questo deve essere il problema.

62
00:04:50,210 --> 00:04:59,300
Quindi ora se ricarichiamo la nostra app qui, possiamo saltare il primo breakpoint e ora vediamo

63
00:04:59,300 --> 00:05:05,470
la scadenza,  -10 e ha senso che questo  -10.

64
00:05:05,600 --> 00:05:07,360
Riceviamo un paio di errori

65
00:05:07,520 --> 00:05:09,620
qui, quindi continuiamo per ora e

66
00:05:09,770 --> 00:05:10,920
risolvili, chiariamo anche

67
00:05:10,940 --> 00:05:12,510
il secondo punto di interruzione.

68
00:05:12,950 --> 00:05:19,910
Quindi qual  il nostro problema? Per controllareAuthTimeout nella parte inferiore in cui effettuo l'accesso automatico, sto passando

69
00:05:19,910 --> 00:05:22,390
la differenza tra la data futura e oggi.

70
00:05:22,610 --> 00:05:25,040
Ora il problema  che io uso getSeconds,

71
00:05:25,090 --> 00:05:27,130
volevo usare getTime qui, quello  il

72
00:05:27,290 --> 00:05:28,910
tempo in millisecondi, questo 

73
00:05:28,910 --> 00:05:30,750
il grande numero che volevo usare.

74
00:05:31,040 --> 00:05:36,660
Quindi getTime ora ci d la differenza corretta in millisecondi, ora

75
00:05:36,740 --> 00:05:43,010
nella nostra funzione checkAuthTimeout qui, poi moltiplichiamo con migliaia, ora che diventerebbe

76
00:05:43,010 --> 00:05:44,670
troppo grande quindi

77
00:05:44,810 --> 00:05:48,460
il valore che abbiamo passato qui dovrebbe

78
00:05:48,640 --> 00:05:58,060
essere in pochi secondi, quindi mi occuper qui di questo calcolo tra parentesi e dividerlo per mille, come questo.

79
00:05:58,080 --> 00:06:04,780
Quindi ora vediamo se funziona, torniamo alla nostra applicazione e inseriamo

80
00:06:04,800 --> 00:06:07,080
un breakpoint in checkAuthTimeout

81
00:06:07,080 --> 00:06:16,490
per vedere se otteniamo un valore corretto ora. Con quello fammi accedere, speriamo un'ultima volta che dovrebbe funzionare, inviare e diamo

82
00:06:16,890 --> 00:06:17,420
un'occhiata,

83
00:06:17,450 --> 00:06:20,140
qui  3600 che stiamo tornando dal

84
00:06:20,150 --> 00:06:21,310
server, possiamo semplicemente saltare.

85
00:06:21,320 --> 00:06:26,520
Interessante  quello che succede se ora effettuiamo il login, vediamo tempi di scadenza,

86
00:06:26,660 --> 00:06:27,290
ha senso,

87
00:06:27,290 --> 00:06:31,600
 un po 'inferiore a 3600 perch sono passati 10 secondi.

88
00:06:31,610 --> 00:06:35,450
Quindi, se continuiamo, naturalmente siamo loggati come si pu vedere dal

89
00:06:35,540 --> 00:06:41,570
fatto che abbiamo il pulsante di disconnessione e abbiamo ancora la memoria locale piena di dati e

90
00:06:41,570 --> 00:06:47,240
che rimane l se effettuiamo di nuovo l'accesso. Se cancelliamo questo problema e accediamo di

91
00:06:47,240 --> 00:06:49,500
nuovo, non abbiamo effettuato l'accesso.

92
00:06:49,520 --> 00:06:56,580
Quindi ora abbiamo la funzionalit di accesso automatico finch otteniamo un token valido che non  ancora scaduto.

