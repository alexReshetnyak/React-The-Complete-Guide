1
00:00:02,170 --> 00:00:06,130
So let's make sure we can see a spinner whilst we are waiting for a response,

2
00:00:06,130 --> 00:00:12,250
let's also make sure that if we enter something invalid, we also get a visual error feedback here

3
00:00:12,250 --> 00:00:13,420
on the page.

4
00:00:13,420 --> 00:00:16,080
Let's start with the spinner and for that,

5
00:00:16,090 --> 00:00:20,250
I'll go to my auth container and at the very top of it, I'll

6
00:00:20,260 --> 00:00:22,350
import my spinner component,

7
00:00:22,630 --> 00:00:26,000
it's called spinner and we get it from components

8
00:00:26,050 --> 00:00:28,730
UI spinner spinner,

9
00:00:28,760 --> 00:00:33,600
we can really see how these reusable components make a lot of sense in react here.

10
00:00:33,610 --> 00:00:37,920
Now I want to display the spinner as long as we are loading and for that,

11
00:00:37,930 --> 00:00:44,640
I need to know if we're loading and we're storing that information in our auth state, for that

12
00:00:44,650 --> 00:00:49,040
I need to get a piece of that state in my auth container

13
00:00:49,240 --> 00:00:52,840
and that of course is a case for const map dispatch

14
00:00:52,970 --> 00:01:00,750
excuse me, mapStateToProps, there we get the state and can now map a slice of it to our local props.

15
00:01:01,320 --> 00:01:04,080
So I'll return an object where I do this mapping

16
00:01:04,080 --> 00:01:12,290
and I want to get the loading state for now, so I'll map state. Now on state, we have to access auth

17
00:01:12,520 --> 00:01:17,520
since this is what leads to the auth reducer in the end due to combined reducers,

18
00:01:18,190 --> 00:01:27,620
so we have to access state auth and there now, the loading property we set up in our auth reducers state,

19
00:01:27,640 --> 00:01:32,870
this one here. With that, we got that available here,

20
00:01:32,900 --> 00:01:39,720
we need to pass mapStateToProps to our connect function though

21
00:01:39,770 --> 00:01:44,250
and now here in our render method, we can render a spinner.

22
00:01:44,270 --> 00:01:48,920
So what I'll do is I'll render either the form or if we're loading, the spinner.

23
00:01:49,190 --> 00:01:58,790
So I'll check after the form was created if this props loading is true because if it is, then form

24
00:01:59,210 --> 00:02:07,780
will no longer be a const but a let, a variable then form will be equal to the spinner, just like that,

25
00:02:07,790 --> 00:02:11,470
to show a spinner if we're loading, that should be all.

26
00:02:11,680 --> 00:02:16,420
With that if we enter some data here, no matter if it's valid or not,

27
00:02:16,640 --> 00:02:22,310
if I submit this we briefly see a spinner because it's so fast.

28
00:02:22,310 --> 00:02:25,410
Now let's also make sure we see error messages

29
00:02:25,490 --> 00:02:32,030
if we submit wrong data and to see that, I of course need to take advantage of the fact that I do

30
00:02:32,030 --> 00:02:35,410
store potential errors in my store.

31
00:02:35,810 --> 00:02:42,570
So first of all I need to get that error by adding another mapping in the auth container, error

32
00:02:43,040 --> 00:02:50,750
and that should be state.auth.error because I do store any errors in my state here in this error

33
00:02:50,750 --> 00:02:55,350
property and I do that in the auth fail action.

34
00:02:55,580 --> 00:03:03,500
With that, I now need to go back to the auth container and firebase gives us a nice error message, your

35
00:03:03,500 --> 00:03:06,860
backend might also do this or you craft your own one,

36
00:03:06,890 --> 00:03:13,460
I'm going to take the one from firebase and since we have this message, what I can do is I can display

37
00:03:13,460 --> 00:03:22,050
an error message. So I can create a new const errorMessage which by default might be null and therefore

38
00:03:22,050 --> 00:03:27,050
it should be a let too but then I'll add an if statement here,

39
00:03:27,140 --> 00:03:37,620
if this.props.error, if we do have to set, if it's not null then error message will actually be some

40
00:03:37,650 --> 00:03:46,850
jsx, a paragraph let's say where I simply output this.props.error and there, since firebase

41
00:03:46,920 --> 00:03:50,950
gives me that, there will be a message property.

42
00:03:50,950 --> 00:03:56,670
Again this message property is only available because I'm using the error as it comes back from firebase

43
00:03:56,680 --> 00:04:01,630
and that happens to be a javascript object which has a message property,

44
00:04:01,650 --> 00:04:06,430
this might not be the case for your own backend of course, adjust this to your needs.

45
00:04:07,230 --> 00:04:15,530
I want the output this error message element then, maybe above my form here I'll output error message

46
00:04:15,600 --> 00:04:19,210
and of course we could give this more styling, make it red, whatever we want.

47
00:04:19,230 --> 00:04:24,440
Now before we see something though, we have to ensure that we really store that error,

48
00:04:24,660 --> 00:04:33,180
so I have to go to my auth file in the actions folder and we can access the error message, the error

49
00:04:33,180 --> 00:04:40,590
object we get back from firebase on this error object here by accessing the original response

50
00:04:40,620 --> 00:04:46,440
and that is due to axios, we're using axios here and it simply wraps the response in this error object

51
00:04:46,860 --> 00:04:48,750
and there, still we will have data

52
00:04:48,780 --> 00:04:51,230
and there, we will have this error object.

53
00:04:51,230 --> 00:04:56,250
You can always confirm this by console logging error response and you will see that you get the same

54
00:04:56,250 --> 00:05:00,740
fields as on a normal response, just with an error code.

55
00:05:00,960 --> 00:05:07,750
With this, if we save everything and we submit an empty form, we get invalid e-mail,

56
00:05:07,830 --> 00:05:14,610
if I now use that e-mail which we already have in use and I'm not signing in but signing up, we get email

57
00:05:14,610 --> 00:05:15,690
exists.

58
00:05:15,690 --> 00:05:20,400
Now this clearly is not a nice error message, it would be nicer to get nice text

59
00:05:20,400 --> 00:05:23,760
we can easily read, I guess it does say what's wrong though.

60
00:05:23,910 --> 00:05:28,670
You can of course map these codes to your own error messages,

61
00:05:28,680 --> 00:05:34,050
it is something I won't do here for now but definitely something you can keep in mind as an improvement,

62
00:05:34,420 --> 00:05:39,300
map this to your personal favorite e-mail address.

63
00:05:39,300 --> 00:05:44,760
You can always find out which potential errors you can get by having a look at the firebase auth rest

64
00:05:44,820 --> 00:05:52,590
API documentation here and there, you see common error codes like e-mail not found, invalid password or

65
00:05:52,590 --> 00:05:55,170
for signing up which we currently tried,

66
00:05:55,170 --> 00:06:01,230
that would be e-mail exists, too many attempts or invalid e-mail as you just saw.

