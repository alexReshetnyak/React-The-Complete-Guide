1
00:00:02,180 --> 00:00:10,860
The error we're facing here has to do with the fact that we're wrapping our app container with connect

2
00:00:11,490 --> 00:00:20,200
and that simply breaks our react router. We can easily fix that though we need to import the withRouter

3
00:00:20,200 --> 00:00:23,440
higher order component from react-router-dom

4
00:00:23,880 --> 00:00:29,220
and if you get an error like this which is always related to connect wrapping your component which you

5
00:00:29,220 --> 00:00:36,900
also want to load with routing and therefore this component doesn't receive your route props, you can

6
00:00:36,900 --> 00:00:42,800
simply wrap connect here with withRouter just like that.

7
00:00:43,080 --> 00:00:49,000
And now with that tiny change, withRouter will enforce your props being passed down to your app component

8
00:00:49,000 --> 00:00:54,550
still and therefore the react router is back on the page and we'll know what's getting loaded

9
00:00:54,660 --> 00:00:56,370
so with that, we're working again.

10
00:00:56,730 --> 00:01:03,730
So now let's try out what we originally wanted to test, I'll add where I'll log in here,

11
00:01:03,750 --> 00:01:05,130
that works fine,

12
00:01:05,130 --> 00:01:11,180
now on redux we see we did log in successfully, if we have a look at the application tab,

13
00:01:11,280 --> 00:01:14,770
we see that we have these three fields populated.

14
00:01:15,210 --> 00:01:22,900
Now let me reload the app, you see that's cleared and in redux we dispatched auth logout,

15
00:01:22,900 --> 00:01:25,220
so this is not working correctly.

16
00:01:25,300 --> 00:01:33,550
We are somehow reaching this line here in our auth action creator where we dispatch logout or this

17
00:01:33,550 --> 00:01:36,100
one, we'll have to find out which one it is

18
00:01:36,100 --> 00:01:38,320
so let's quickly debug this.

19
00:01:38,350 --> 00:01:47,400
To debug that, you can go into sources and there into our folder source

20
00:01:47,640 --> 00:01:51,570
and let's dive into store actions,

21
00:01:51,620 --> 00:01:53,270
the auth file.

22
00:01:53,280 --> 00:02:00,410
So now we can place a breakpoint here in our authCheckState function,

23
00:02:00,530 --> 00:02:04,730
let's place one here where we check if we have a token.

24
00:02:05,170 --> 00:02:13,660
Let me now go to authenticate and log in again so that we have a token for the future and let's now reload

25
00:02:13,660 --> 00:02:21,680
the page, we now get stuck here because the breakpoint kicks in and we do fetch the tokens successfully.

26
00:02:22,480 --> 00:02:29,590
Let's now walk through that, we make it into that else block because we do have a token but now we already

27
00:02:29,590 --> 00:02:35,230
see expiration date is a date object, so that looks fine.

28
00:02:35,230 --> 00:02:37,880
So expiration date here is in the future

29
00:02:38,200 --> 00:02:44,020
and what happens here is then we go into that if block and it makes perfect sense because I'm checking

30
00:02:44,320 --> 00:02:47,540
if expiration date is bigger than today's date or current date

31
00:02:47,740 --> 00:02:52,480
and of course, I don't want to logout in this case because that's exactly the case where the token is

32
00:02:52,480 --> 00:02:53,230
valid.

33
00:02:53,500 --> 00:02:56,320
So this is a logical error which we can fix

34
00:02:56,350 --> 00:02:58,180
thanks to debugging here,

35
00:02:58,450 --> 00:03:00,980
so what we have to do is reword this,

36
00:03:01,000 --> 00:03:07,420
we want to logout if the expiration date is smaller or equal even though equal is very unlikely to the

37
00:03:07,420 --> 00:03:09,130
current date. With that

38
00:03:09,130 --> 00:03:13,570
now, if we go back to the application let's log in again,

39
00:03:13,810 --> 00:03:17,670
so let's quickly do that, sign in

40
00:03:17,860 --> 00:03:20,470
and now let's reload the page

41
00:03:20,630 --> 00:03:27,100
and now you can see that we have authSuccess here but still followed by authLogout.

42
00:03:27,440 --> 00:03:33,800
So let's again debug this, let's place a breakpoint here again to find out what's going wrong here,

43
00:03:34,040 --> 00:03:37,910
so I'll quickly add my code here,

44
00:03:38,750 --> 00:03:43,710
submit this and here I'll reload the app, we make it into this

45
00:03:43,710 --> 00:03:44,710
check here

46
00:03:44,900 --> 00:03:52,040
and now if we step through that, we go to the else block and we do successfully login.

47
00:03:52,060 --> 00:03:54,450
Now let's continue code execution,

48
00:03:55,630 --> 00:03:58,740
so why did we then logout here?

49
00:03:58,840 --> 00:04:01,930
It might be related to our checkAuthTimeout function

50
00:04:01,930 --> 00:04:04,270
where we also dispatch logout.

51
00:04:04,270 --> 00:04:12,090
So let's also place a breakpoint here on dispatch logout to see if this gets triggered preemptively,

52
00:04:12,520 --> 00:04:20,600
so here I'll now also again log in, reload the app,

53
00:04:20,750 --> 00:04:22,690
we reach the first break point here,

54
00:04:22,700 --> 00:04:23,810
we can simply skip ahead

55
00:04:23,810 --> 00:04:24,940
we know that's no problem

56
00:04:25,040 --> 00:04:28,120
and indeed, we now reach the second one in setTimeout.

57
00:04:28,370 --> 00:04:30,180
This shouldn't fire though,

58
00:04:30,620 --> 00:04:34,190
the issue probably is the expiration time we set up

59
00:04:34,190 --> 00:04:39,520
so let's place a breakpoint on setTimeout to reach a point where this timer is set

60
00:04:39,980 --> 00:04:45,950
and let's continue for now and let's try this one more time to find out which value is actually set

61
00:04:45,950 --> 00:04:49,690
up as expiration time there because that has to be the issue.

62
00:04:50,210 --> 00:04:59,300
So now if we reload our app here, we can skip the first breakpoint and now let's see the expiration

63
00:04:59,300 --> 00:05:05,470
time, it's -10 and it makes sense that this is -10.

64
00:05:05,600 --> 00:05:07,360
We get a couple of errors here

65
00:05:07,520 --> 00:05:09,620
so let's continue for now and fix them,

66
00:05:09,770 --> 00:05:10,920
let's also clear

67
00:05:10,940 --> 00:05:12,510
the second breakpoint.

68
00:05:12,950 --> 00:05:19,910
So what's our problem? To checkAuthTimeout at the bottom where I automatically log in, I'm passing the

69
00:05:19,910 --> 00:05:22,390
difference between the future date and today.

70
00:05:22,610 --> 00:05:25,040
Now the issue is that I use getSeconds,

71
00:05:25,090 --> 00:05:27,130
I wanted to use getTime here,

72
00:05:27,290 --> 00:05:28,910
that's the time in milliseconds,

73
00:05:28,910 --> 00:05:30,750
that's the big number I wanted to use.

74
00:05:31,040 --> 00:05:36,660
So getTime now gives us the correct difference in milliseconds,

75
00:05:36,740 --> 00:05:43,010
now in our checkAuthTimeout function here, we then multiply with thousand,

76
00:05:43,010 --> 00:05:44,670
now that would become too big

77
00:05:44,810 --> 00:05:48,460
so the value we passed here should be in seconds indeed,

78
00:05:48,640 --> 00:05:58,060
so I'll wrap this calculation here in parentheses and divide it by one thousand, like this.

79
00:05:58,080 --> 00:06:04,780
So now let's see if that works, let's go back to our application and let's place a breakpoint in

80
00:06:04,800 --> 00:06:07,080
checkAuthTimeout to see if we get a correct value

81
00:06:07,080 --> 00:06:16,490
now. With that let me log in, hopefully one last time it should then work, submit and let's have a look,

82
00:06:16,890 --> 00:06:17,420
here

83
00:06:17,450 --> 00:06:20,140
it's 3600 which we're getting back from the server,

84
00:06:20,150 --> 00:06:21,310
we can just skip.

85
00:06:21,320 --> 00:06:26,520
Interesting is what happens if we now log in, there we see expiration time,

86
00:06:26,660 --> 00:06:27,290
makes sense,

87
00:06:27,290 --> 00:06:31,600
it's a little bit below 3600 because 10 seconds have passed.

88
00:06:31,610 --> 00:06:35,450
So now if we continue, we are of course logged in

89
00:06:35,540 --> 00:06:41,570
as you can tell by the fact that we have the logout button and we still have the local storage filled

90
00:06:41,570 --> 00:06:47,240
with our data and that stays there if we log in again and again. If we clear this though and we log

91
00:06:47,240 --> 00:06:49,500
in again, we're not logged in.

92
00:06:49,520 --> 00:06:56,580
So now we got that auto login functionality as long as we get a valid token which hasn't expired yet.

