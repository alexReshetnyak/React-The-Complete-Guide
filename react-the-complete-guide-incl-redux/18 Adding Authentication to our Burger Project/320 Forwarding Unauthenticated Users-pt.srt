1
00:00:02,210 --> 00:00:09,050
Vamos trabalhar nos itens de navegao primeiro, quero garantir que os pedidos s sejam

2
00:00:09,140 --> 00:00:12,660
visveis se forem autenticados. Bem, isso  claro que no

3
00:00:12,680 --> 00:00:18,160
 muito difcil, ns j temos lgica para mostrar algo condicionalmente, para que possamos simplesmente envolver isso.

4
00:00:18,310 --> 00:00:26,340
Podemos dizer apenas se props isAuthenticated for true, somente nesse caso a ordem de itens de navegao deve ser mostrada,

5
00:00:26,640 --> 00:00:29,870
caso contrrio, null  renderizado em seu lugar.

6
00:00:29,950 --> 00:00:37,330
Essa  a forma rpida, fcil e correta de garantir que nunca recebemos pedidos, como voc pode

7
00:00:37,330 --> 00:00:40,050
confirmar nos aplicativos recarregados, se no

8
00:00:40,200 --> 00:00:45,360
formos autenticados. Assim que eu fizer login aqui, os pedidos sero exibidos.

9
00:00:45,560 --> 00:00:51,530
Agora, outra coisa que quero fazer  quando fizemos o login com sucesso, quero redirecionar

10
00:00:51,530 --> 00:00:56,410
para fora do formulrio de autenticao porque no faz mais sentido mostrar isso.

11
00:00:56,630 --> 00:01:01,790
Isso pode ser facilmente alcanado dentro de nosso continer de autenticao. Ali, no final,

12
00:01:02,000 --> 00:01:07,960
renderizamos esse formulrio inteiro e o objetivo  simplesmente redirecionar o usurio se ele estiver Autenticado.

13
00:01:08,270 --> 00:01:11,690
Agora ns j conectamos isso  nossa loja, ento

14
00:01:11,870 --> 00:01:19,370
o que eu posso fazer  no mapStateToProps no continer auth, eu tambm posso obter as informaes isAuthenticated e

15
00:01:19,670 --> 00:01:24,390
obter isso do estado. auth. token e compare isso com

16
00:01:24,530 --> 00:01:27,270
null, se o token no for nulo, estamos autenticados.

17
00:01:27,680 --> 00:01:34,220
E, novamente, importarei esse componente de redirecionamento do roteador para redirecionar o usurio, se ele for autenticado, para que voc

18
00:01:34,220 --> 00:01:38,490
perceba que esse  um padro comum, porque  muito eficiente e fcil.

19
00:01:38,750 --> 00:01:45,890
Ento aqui react-router-dom  o pacote do qual eu importo o redirecionamento e agora queremos renderizar o redirecionamento sempre

20
00:01:45,890 --> 00:01:47,680
que somos autenticados, ento no

21
00:01:47,840 --> 00:01:54,750
mtodo de renderizao, o que vou adicionar  um simples se verificar antes de retornar o jsx onde

22
00:01:54,750 --> 00:02:02,020
eu s vai verificar se isso. adereos. isAuthenticated, este prop que acabamos

23
00:02:02,190 --> 00:02:06,150
de adicionar, ento eu quero renderizar o meu redirecionamento.

24
00:02:06,150 --> 00:02:10,170
Ento, eu vou criar uma varivel, authRedirect, que por

25
00:02:10,170 --> 00:02:11,710
padro  nula para

26
00:02:12,060 --> 00:02:19,410
no renderizar nada, mas quando estamos autenticados, o authRedirect realmente estar usando meu componente de redirecionamento e

27
00:02:19,410 --> 00:02:21,840
redirecionando para apenas slash, digamos.

28
00:02:21,850 --> 00:02:28,770
E agora  claro que preciso renderizar authRedirect, vou fazer isso aqui

29
00:02:29,010 --> 00:02:37,660
dentro do meu div, embuti-lo assim, auth redirecionar. Com esse truque simples, podemos garantir que, quando nosso aplicativo for

30
00:02:37,700 --> 00:02:43,990
recarregado e fizermos login aqui, alterne para entrar e enviar, seremos redirecionados aps um login bem-sucedido.

31
00:02:44,030 --> 00:02:45,410
Ento, tudo est funcionando,

32
00:02:45,590 --> 00:02:52,130
vamos garantir que, quando o criador de hambrgueres for usado, possamos us-lo mesmo se no formos autenticados, assim

33
00:02:52,160 --> 00:03:00,980
como aqui, mas quando eu comecei a construir um e clico em ordem agora, no chego uma pgina onde eu no posso fazer nada

34
00:03:00,980 --> 00:03:07,070
de qualquer maneira, mas em vez disso diz que se inscrever para continuar, ento voc tem que

35
00:03:07,070 --> 00:03:12,290
se inscrever para continuar verificando o hambrguer. Para fazer isso, eu vou para

36
00:03:12,320 --> 00:03:22,040
o meu continer de construtor de hambrguer, claro, aqui,  onde eu incluo os controles de compilao,  o que est

37
00:03:22,100 --> 00:03:28,870
segurando este boto agora e os controles de compilao precisam saber se estou autenticado

38
00:03:28,880 --> 00:03:30,040
ou no.

39
00:03:30,050 --> 00:03:34,060
Portanto, vamos fazer essa boa verificao de autenticao em

40
00:03:34,070 --> 00:03:40,820
mapStateToProps no continer do construtor de hambrguer tambm, isAuthenticated como sempre alcanando token de autenticao de

41
00:03:40,880 --> 00:03:48,050
estado e comparando-o com null e, em seguida, isAuthenticated deve ser passado para os controles de construo.

42
00:03:48,080 --> 00:03:54,430
Ento, eu adicionarei um isAuth prop e ligarei isso a isto. adereos. isAuthenticated, o suporte

43
00:03:54,440 --> 00:03:58,160
que acabamos de mapear em mapStateToProps.

44
00:03:58,160 --> 00:04:03,980
Agora vamos para os controles de construo para o componente de controles de construo que

45
00:04:04,010 --> 00:04:08,420
podemos encontrar no componente hambrguer na pasta de componentes, controles de

46
00:04:08,420 --> 00:04:15,820
construo e agora recebemos a proposio isAuth que contm essa informao e determina o que este boto faz aqui.

47
00:04:15,830 --> 00:04:22,490
Agora, o que o boto faz agora  que no construtor de hambrgueres, onde lidamos com essa pea encomendada,

48
00:04:22,490 --> 00:04:29,060
que no final  apenas um suporte conectado ao evento de clique do boto, que l executamos esse manipulador

49
00:04:29,060 --> 00:04:31,430
de compra e no manipulador de compra,

50
00:04:31,430 --> 00:04:37,910
ns definimos o estado para compra e isso levar ao resto se desdobrando e nosso modal sendo mostrado onde

51
00:04:37,910 --> 00:04:40,220
podemos continuar e assim por diante.

52
00:04:40,220 --> 00:04:47,110
Ento, a ideia  que, no final, fazemos exatamente o que fazemos no modal quando continuamos ou para sermos precisos, o que

53
00:04:47,120 --> 00:04:52,250
fazemos, portanto, em ordemSummary sobre a continuao, a purchaseContinueHandler  executada l e ento ns simplesmente

54
00:04:52,460 --> 00:04:58,520
pressionamos para verificar para que ns fazemos push para check-out uma vez que o usurio se inscreveu, se ele

55
00:04:58,640 --> 00:05:05,300
se inscreveu atravs do nosso redirecionamento do construtor de hambrguer. Para isso, primeiro precisamos de um redirecionamento to voltado

56
00:05:05,330 --> 00:05:05,930
para os

57
00:05:05,930 --> 00:05:12,290
controles de compilao,  neste boto que queremos trabalhar, esse boto aqui deve se comportar de maneira

58
00:05:12,410 --> 00:05:14,690
diferente se no formos autenticados.

59
00:05:14,690 --> 00:05:20,090
Vou lidar com a maior parte dessa lgica no continer do construtor de hambrguer, embora

60
00:05:20,090 --> 00:05:28,400
aqui eu queira apenas alterar a legenda, ento, na verdade, vou envolv-la em chaves e apenas verifico adies que recebo como um argumento

61
00:05:28,420 --> 00:05:32,090
nos controles de construo Componente de apresentao, isAuth que 

62
00:05:32,090 --> 00:05:34,460
o suporte que acabamos de passar,

63
00:05:34,460 --> 00:05:38,790
se isso for verdade, ento eu vou dar sada a uma ordem

64
00:05:38,900 --> 00:05:44,530
de string agora, caso contrrio, eu vou enviar uma ordem para a ordem, algo assim.

65
00:05:44,540 --> 00:05:47,110
Ento, esse  o meu estilo de

66
00:05:47,180 --> 00:05:51,390
boto agora, se voltarmos para o aplicativo no criador de hambrguer, veremos

67
00:05:51,390 --> 00:05:52,840
que, se no formos

68
00:05:53,030 --> 00:05:58,030
autenticados, veremos inscrever-se para fazer o pedido e, se fizermos login, veremos que isso

69
00:05:58,190 --> 00:05:59,070
muda, Agora

70
00:05:59,070 --> 00:06:03,460
temos um pedido agora, precisamos garantir que esse boto faa a coisa certa.

71
00:06:03,470 --> 00:06:09,300
Tenha em mente que quando clicamos no boto, simplesmente executamos o mtodo que  enviado para este

72
00:06:09,500 --> 00:06:11,180
componente no suporte do pedido.

73
00:06:11,390 --> 00:06:18,380
Ento, se voltarmos para o continer de construtor de hambrguer, vemos que o prop pedido  obrigado

74
00:06:18,740 --> 00:06:26,670
a comprar manipulador, o manipulador de compra nos mostra o modal, definindo esse estado para compra ou compra para true

75
00:06:26,780 --> 00:06:27,650
neste continer.

76
00:06:27,650 --> 00:06:30,340
Agora s quero fazer isso se

77
00:06:30,440 --> 00:06:34,880
formos autenticados, caso contrrio, quero redirecionar para minha pgina autenticada.

78
00:06:34,880 --> 00:06:41,300
Ento, o que podemos fazer  entrar no manipulador de compra e checar esses adereos e a,

79
00:06:41,930 --> 00:06:48,380
o prop  configurado em nossa constante mapStateToProps, isAuthenticated, esse  o suporte que passamos para o

80
00:06:48,380 --> 00:06:52,220
nosso continer do construtor hambrguer que mantm o status de autenticao.

81
00:06:52,250 --> 00:06:59,530
Ento, se estamos autenticados, ento eu quero definir o estado para compra caso contrrio eu quero usar meu

82
00:06:59,660 --> 00:07:00,950
histrico prop, isso

83
00:07:03,860 --> 00:07:05,820
est vindo do roteador reagir

84
00:07:05,930 --> 00:07:09,190
se voc se lembrar de empurrar o usurio

85
00:07:09,230 --> 00:07:19,160
para a pgina / auth para que ele tenha uma chance de inscrever-se. Agora, com isso, se salvarmos nosso aplicativo e voltarmos, agora

86
00:07:19,160 --> 00:07:25,940
podemos adicionar algo ao hambrguer e clicar em inscrever-se para fazer o pedido

87
00:07:25,940 --> 00:07:31,770
e clicar nesse boto nos redireciona para a pgina de inscrio.

88
00:07:31,850 --> 00:07:38,300
 claro que o problema que temos  que, se fizermos login, seremos redirecionados para o criador de hambrgueres e nosso hambrguer

89
00:07:38,420 --> 00:07:41,570
criado no momento ser perdido. Seria melhor para ser

90
00:07:41,570 --> 00:07:48,200
redirecionado diretamente para a pgina de checkout e l, ainda temos o nosso hambrguer, o ltimo

91
00:07:48,230 --> 00:07:53,300
seria o caso, porque os ingredientes do hambrguer so armazenados na loja

92
00:07:53,300 --> 00:07:56,630
redux e se no voltarmos para o construtor

93
00:07:56,750 --> 00:08:01,460
de hambrguer, isso ganhou pode ser redefinido, mas, claro, esse redirecionamento 

94
00:08:01,460 --> 00:08:07,850
o problema, porque s queremos redirecionar neste cenrio. Se o usurio acabou de entrar no aplicativo e clicou em

95
00:08:07,850 --> 00:08:10,570
autenticar, no queremos redirecionar no check-out porque nenhum hambrguer foi

96
00:08:10,610 --> 00:08:12,810
criado ainda, no haver ingredientes para o checkout.

97
00:08:13,130 --> 00:08:16,400
Vamos dar uma olhada em como resolvemos esse problema na prxima aula.

