1
00:00:02,350 --> 00:00:08,770
Quindi l'obiettivo  quello di ottenere un token dal backend e stiamo utilizzando firebase ma l'approccio ovviamente

2
00:00:08,770 --> 00:00:09,810
funziona con qualsiasi

3
00:00:09,810 --> 00:00:14,600
back-end dato che il back-end ha gli endpoint API appropriati a cui connettersi.

4
00:00:14,890 --> 00:00:22,060
Se stai cercando istruzioni su come convalidare una e-mail utente sul server, come creare quel token, questo  il percorso sbagliato,

5
00:00:22,090 --> 00:00:24,250
questo non ha nulla a che

6
00:00:24,250 --> 00:00:27,670
fare con la reazione e quindi non  coperto qui.

7
00:00:27,970 --> 00:00:31,060
Un corso generale per la creazione di API per

8
00:00:31,090 --> 00:00:36,790
il tuo servizio e la lingua di scelta sarebbe pi appropriato in quanto dovresti imparare cose del

9
00:00:36,910 --> 00:00:40,300
genere in tali corsi o ovviamente seguire un corso completo.

10
00:00:40,300 --> 00:00:47,350
Ti mostrer il sito di reazione e Firebase, il backend di facile utilizzo che

11
00:00:47,380 --> 00:00:49,660
utilizziamo ci fornisce un'autenticazione immediata.

12
00:00:49,840 --> 00:00:56,590
Se facciamo clic su autenticazione l, dobbiamo impostare un metodo di accesso e l, posso scegliere e-mail

13
00:00:56,590 --> 00:01:01,220
e password, questo memorizzer i dati dell'utente nel nostro progetto firebase.

14
00:01:01,510 --> 00:01:04,630
Clicco su Abilita l e salvo questo e ora possiamo

15
00:01:04,960 --> 00:01:12,880
raggiungere alcuni endpoint dell'API di resto per registrare utenti e ottenere un token. Per scoprire a quale indirizzo dobbiamo inviarlo, non

16
00:01:12,880 --> 00:01:14,600
 il nostro indirizzo

17
00:01:14,620 --> 00:01:22,330
di database che abbiamo utilizzato fino a questo momento, possiamo semplicemente google per l'autenticazione resto firebase.

18
00:01:22,420 --> 00:01:26,820
e qui  un secondo risultato, l'API di resto dell'autorizzazione di Firebase.

19
00:01:27,190 --> 00:01:34,780
Qui trovi a quali endpoint dell'API puoi inviare i tuoi dati di autenticazione per firmare un utente in o in, quindi

20
00:01:34,780 --> 00:01:40,450
iniziamo con la registrazione e qui vedi che dobbiamo inviare una richiesta di post a questo

21
00:01:40,450 --> 00:01:41,160
endpoint qui.

22
00:01:41,590 --> 00:01:42,150
Quindi

23
00:01:42,150 --> 00:01:43,850
copier quell'endpoint e ora

24
00:01:44,170 --> 00:01:46,170
voglio inviare una richiesta.

25
00:01:46,300 --> 00:01:49,690
Potremmo creare un'altra istanza di axios per questo, non

26
00:01:49,690 --> 00:01:55,360
possiamo assolutamente usare l'istanza di ordini axios perch qui abbiamo un URL di base che sarebbe

27
00:01:55,870 --> 00:02:01,990
sbagliato ma user il servizio axios predefinito e non l'istanza qui e inoltre non creer una nuova

28
00:02:01,990 --> 00:02:03,770
uno perch invier solo due

29
00:02:03,850 --> 00:02:10,840
richieste quindi non ho bisogno di impostare quella cosa baseURL. Nel file auth nella mia cartella azioni,

30
00:02:10,870 --> 00:02:15,760
ora importer quindi gli axios dal pacchetto axios e quindi

31
00:02:16,210 --> 00:02:18,550
posso iniziare a inviare richieste.

32
00:02:18,700 --> 00:02:25,270
Quindi qui nel creatore di azioni auth in quella funzione ritorniamo, raggiunger gli assios, invier una richiesta di

33
00:02:25,490 --> 00:02:27,620
posta all'URL che ho appena copiato.

34
00:02:27,940 --> 00:02:35,620
Ora abbiamo questa strana chiave API, dobbiamo sostituirla con la chiave API del nostro progetto firebase, puoi trovarla

35
00:02:35,620 --> 00:02:42,430
nel tuo progetto Firebase se fai clic sull'autenticazione e l sul set web, nell'angolo in alto

36
00:02:42,430 --> 00:02:43,720
a destra, 

37
00:02:43,990 --> 00:02:45,560
questa chiave qui, l'intera

38
00:02:45,700 --> 00:02:53,760
chiave che puoi vedere l, la chiave API. Copia l'intera chiave senza le virgolette e sostituisci le

39
00:02:53,760 --> 00:02:57,980
parentesi quadre con la chiave API in mezzo con quella

40
00:02:58,000 --> 00:03:01,280
chiave, ci identifica la tua applicazione in firebase.

41
00:03:01,300 --> 00:03:07,630
Ora i dati di questo post, i dati che dobbiamo postare possono essere trovati nella documentazione in cui

42
00:03:07,630 --> 00:03:08,610
eravamo solo, abbiamo

43
00:03:08,770 --> 00:03:15,520
bisogno di passare un oggetto javascript che verr trasformato automaticamente in json da axios che ha una email, una

44
00:03:15,520 --> 00:03:17,220
password e questo ritorno propriet

45
00:03:17,380 --> 00:03:23,770
token sicure, che restituisce propriet token sicure  un valore booleano e indica se vogliamo ottenere un token

46
00:03:23,770 --> 00:03:25,660
oppure no, dovrebbe sempre essere

47
00:03:25,720 --> 00:03:30,570
vero come si dice qui e la password e l'e-mail dovrebbero essere chiare.

48
00:03:30,580 --> 00:03:38,270
Quindi torniamo alla nostra applicazione e impostiamo alcuni dati di autenticazione qui, un oggetto javascript dove impostiamo una

49
00:03:38,270 --> 00:03:44,350
propriet email che contiene l'email che riceviamo come argomento, lo stesso per la password e,

50
00:03:44,600 --> 00:03:49,670
ultimo ma non meno importante, impostiamo questo restituire token sicuro a true.

51
00:03:50,120 --> 00:03:54,670
Ed  questo oggetto dati auth che poi desidero allegare a questa

52
00:03:54,830 --> 00:04:02,000
richiesta di post, quindi come secondo argomento del metodo post, passer i dati di autenticazione, axios ci dar quindi una

53
00:04:02,000 --> 00:04:09,590
promessa cos possiamo chiamare allora e prendere. Nel caso di cattura. Voglio registrare questo errore

54
00:04:09,710 --> 00:04:17,830
e sono anche andato a inviare authFail eseguito come una funzione, nel caso

55
00:04:17,830 --> 00:04:19,660
di successo, otterremo

56
00:04:19,760 --> 00:04:28,020
una risposta, voglio registrare quella risposta e voglio inviare authSuccess qui, come questo.

57
00:04:28,130 --> 00:04:33,420
Trasmetter anche la risposta a o i dati di risposta, quindi

58
00:04:33,470 --> 00:04:39,710
i dati che otteniamo in risposta su authSuccess e l'errore su authFail.

59
00:04:40,100 --> 00:04:42,710
Ora salviamo questo e vediamo se

60
00:04:42,770 --> 00:04:52,130
funziona, passiamo alla nostra applicazione e inseriamo nuovamente alcuni dati di iscrizione validi, premiamo invio e vediamo authStart e authSuccess e se andate

61
00:04:52,130 --> 00:04:54,250
alla console, vediamo cosa abbiamo

62
00:04:54,320 --> 00:05:00,800
ottenuto in caso di successo richieste di autenticazione Nei dati, abbiamo ottenuto informazioni

63
00:05:00,980 --> 00:05:04,990
per quanto tempo il token 

64
00:05:05,270 --> 00:05:09,100
valido, quindi 3600 secondi, vale un'ora.

65
00:05:09,410 --> 00:05:15,950
Quindi il token ID stesso, questa lunga stringa criptica che pu essere decifrata su un oggetto javascript se vogliamo,

66
00:05:15,950 --> 00:05:23,900
quindi questo token di aggiornamento che viene utilizzato per ottenere un nuovo token ID perch, come puoi vedere, il token ID scade relativamente

67
00:05:23,960 --> 00:05:26,270
velocemente, dopo uno ora per motivi di

68
00:05:26,270 --> 00:05:27,860
sicurezza, ma  possibile generarne

69
00:05:28,100 --> 00:05:33,620
uno nuovo con il token di aggiornamento, ma solo tu e la tua applicazione potete farlo

70
00:05:33,620 --> 00:05:34,790
naturalmente.

71
00:05:34,790 --> 00:05:36,400
Quindi queste sono le nostre

72
00:05:36,410 --> 00:05:42,770
opzioni, vediamo anche l'indirizzo email per il quale abbiamo creato l'utente. E sul nostro back-end Firebase, se andiamo all'autenticazione

73
00:05:42,980 --> 00:05:50,460
e aggiorniamo la pagina di questo utente, vediamo l'utente con il suo ID che  stato generato automaticamente qui.

74
00:05:50,810 --> 00:05:53,040
Ecco come firmiamo gli utenti e

75
00:05:53,210 --> 00:05:57,920
non ho aggiunto la convalida, quindi vediamo cosa succede se inserisco una password non

76
00:05:57,920 --> 00:06:01,000
valida, possiamo ancora fare clic sul pulsante di invio.

77
00:06:01,040 --> 00:06:10,190
Ora abbiamo un errore qui e nell'errore, se guardiamo l'azione qui, nell'errore stesso, abbiamo un problema di scorrimento

78
00:06:10,370 --> 00:06:18,170
qui a quanto pare, otteniamo dati sull'errore dove abbiamo un messaggio dove dice che la

79
00:06:18,170 --> 00:06:21,030
password non  abbastanza lunga.

80
00:06:21,790 --> 00:06:28,150
Nella console, vedremmo anche questo se clicchiamo sulla richiesta errata e controlliamo che qui, lo

81
00:06:28,150 --> 00:06:31,300
vediamo qui e anche l'anteprima della risposta.

82
00:06:31,630 --> 00:06:35,620
Quindi, nel nostro errore, abbiamo ricevuto questo messaggio, questo problema.

83
00:06:36,130 --> 00:06:38,710
Quindi questo  ci che otteniamo

84
00:06:38,710 --> 00:06:40,650
dalle richieste di iscrizione

85
00:06:41,080 --> 00:06:48,670
e, cosa pi importante, abbiamo quel token e quel token aggiornato oltre al tempo di scadenza,

86
00:06:48,670 --> 00:06:52,930
dovremmo usare tali informazioni per autenticarci per le richieste

87
00:06:52,930 --> 00:06:57,010
successive, ma prima assicuriamoci che anche noi possiamo accesso.

