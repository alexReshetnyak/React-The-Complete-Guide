1
00:00:02,200 --> 00:00:05,940
We made good progress and we're nearing the end of this module,

2
00:00:05,980 --> 00:00:08,560
there are two more things I want to do.

3
00:00:08,610 --> 00:00:17,830
One I also want to store the user ID in any order I place so that on the backend in the orders, we not

4
00:00:17,830 --> 00:00:24,370
only have ingredients but in the order data or as an extra field, we also store the user id of the user who

5
00:00:24,370 --> 00:00:25,510
made that order,

6
00:00:25,510 --> 00:00:31,540
that's another nice improvement to our app and we can then also make sure we only fetch orders by that

7
00:00:31,540 --> 00:00:32,560
user.

8
00:00:32,560 --> 00:00:39,250
The other thing I want to do is I also want to make sure that you can only visit the orders page and

9
00:00:39,250 --> 00:00:45,430
the checkout page even though we do redirect there if you are not building a burger but that you can

10
00:00:45,440 --> 00:00:46,420
visit both

11
00:00:46,450 --> 00:00:49,280
only if you are logged in.

12
00:00:49,300 --> 00:00:55,900
What I also want to do is that if you are logged out as I am here now, if you visit /orders, you can't

13
00:00:55,900 --> 00:00:56,950
go there,

14
00:00:57,010 --> 00:01:01,750
we already removed the navigation item but manually visiting it works.

15
00:01:01,750 --> 00:01:03,310
So these are the things I want to do,

16
00:01:03,310 --> 00:01:11,240
let's start with guarding the orders page so that unauthenticated users can't visit it. For that,

17
00:01:11,470 --> 00:01:15,150
I taught you how to do this in the routing section,

18
00:01:15,190 --> 00:01:23,170
it's super easy due to the way react router works, in the app container where we have all our routes,

19
00:01:23,470 --> 00:01:28,090
if we don't render this route component, we get no way of going there,

20
00:01:28,120 --> 00:01:34,590
we just can't reach it because the react router is not aware of it and will never load it. For that reason,

21
00:01:34,660 --> 00:01:42,190
we can simply add a constant here to the app component, mapStateToProps to access our state and map

22
00:01:42,190 --> 00:01:44,330
it to props surprisingly

23
00:01:44,620 --> 00:01:53,710
and then here, I want to return a javascript object and add isAuthenticated as a prop and set this

24
00:01:53,710 --> 00:02:00,480
equal to state auth and this old check where we compare the token to not being null.

25
00:02:00,970 --> 00:02:04,760
Let's now pass mapStateToProps to the connect function

26
00:02:04,990 --> 00:02:09,080
and now we can access isAuthenticated in our container

27
00:02:09,340 --> 00:02:13,340
and there, I want to use it on the orders and the checkout page.

28
00:02:13,360 --> 00:02:20,310
So actually I'll create a new variable which I'll name routes here which holds some jsx,

29
00:02:20,320 --> 00:02:26,810
these should be my default routes and then I'll add an if statement where I check if this props isAuthenticated

30
00:02:26,820 --> 00:02:27,730
is the case,

31
00:02:27,730 --> 00:02:32,220
so if we are logged in and then routes will look different.

32
00:02:32,560 --> 00:02:37,820
So my unauthenticated routes should be auth and slash

33
00:02:38,020 --> 00:02:43,150
so I'll copy all of that here and remove the logout route

34
00:02:44,860 --> 00:02:54,570
and I need to wrap this of course because this isn't liked by my jsx code here so we can just cut

35
00:02:54,640 --> 00:03:00,060
the switch statement here too because these now are all our routes, we don't need it down there,

36
00:03:00,090 --> 00:03:05,960
this is the routing set up for unauthenticated users now, matches our links.

37
00:03:06,340 --> 00:03:13,170
Now the set up for authenticated users are the remaining routes,

38
00:03:13,300 --> 00:03:21,380
so let's cut them here and add them here and let's get rid of the auth route because I don't need to go

39
00:03:21,380 --> 00:03:24,010
to /auth if I am authenticated,

40
00:03:24,230 --> 00:03:30,830
all the other routes are valid though, so auth and slash is available for unauthenticated users, for authenticated

41
00:03:30,830 --> 00:03:34,990
users, checkout orders, logout and slash are available.

42
00:03:35,140 --> 00:03:40,020
And now in my jsx code down there I simply render my routes

43
00:03:40,040 --> 00:03:46,970
so this variable. With that we have guards in place, we now can't reach the orders page if we're not

44
00:03:46,970 --> 00:03:47,900
authenticated,

45
00:03:47,990 --> 00:03:49,330
you can already see this here,

46
00:03:49,400 --> 00:03:55,370
if I go to orders like this, nothing happens you see an empty page.

47
00:03:55,370 --> 00:03:57,910
Now to not just see an empty page

48
00:03:57,980 --> 00:04:04,340
we can of course make sure that we redirect the user, now to do that, to redirect to slash for any unknown

49
00:04:04,340 --> 00:04:04,580
route

50
00:04:04,580 --> 00:04:15,050
for example, we can add the redirect component here and add that to our switch statement, redirect to just

51
00:04:15,050 --> 00:04:16,330
slash.

52
00:04:16,460 --> 00:04:18,240
Now let's close this here,

53
00:04:18,500 --> 00:04:24,830
now order redirects us to burger builder, authenticate still works though because the switch statement

54
00:04:24,830 --> 00:04:31,050
picks the first hit but anything unknown including orders which now is unknown because we don't render

55
00:04:31,050 --> 00:04:34,490
that route redirects us back to the main page.

56
00:04:34,520 --> 00:04:39,200
Now the same for our other routes here, there for anything unknown,

57
00:04:39,230 --> 00:04:45,320
I also want to go to the route page. And with that we got guards in place, we make sure we can't visit

58
00:04:45,320 --> 00:04:45,730
pages

59
00:04:45,740 --> 00:04:47,370
we shouldn't be able to.

60
00:04:47,390 --> 00:04:53,260
Now one important note, since this of course is all javascript, people can of course always theoretically

61
00:04:53,270 --> 00:04:59,310
dig into your source code and still kind of manipulate it to still go to the protected route,

62
00:04:59,430 --> 00:05:04,830
and this is why we have protection on the server, to not return any data for unauthenticated users.

63
00:05:04,880 --> 00:05:06,490
This is how you protect your data,

64
00:05:06,560 --> 00:05:12,260
the front end is only about providing a user experience that makes sense and to prevent the user from

65
00:05:12,260 --> 00:05:17,030
accidentally visiting a page he shouldn't be able to visit to because he won't be able to do anything

66
00:05:17,030 --> 00:05:17,750
on it.

67
00:05:18,110 --> 00:05:21,760
So this is route protection on the frontend with guards,

68
00:05:21,770 --> 00:05:30,290
now let's move on to using our user data on our orders so that when we place an order, when we're authenticated,

69
00:05:30,770 --> 00:05:32,600
we do indeed use that.

