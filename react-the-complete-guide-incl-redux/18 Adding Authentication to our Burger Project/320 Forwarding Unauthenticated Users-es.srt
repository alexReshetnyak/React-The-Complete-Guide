1
00:00:02,210 --> 00:00:09,050
Primero trabajemos en los elementos de navegacin, all quiero asegurarme de que los pedidos solo estn

2
00:00:09,140 --> 00:00:12,660
visibles si estamos autenticados. Bueno, eso por supuesto no es

3
00:00:12,680 --> 00:00:18,160
demasiado difcil, ya tenemos lgica para mostrar algo de manera condicional, as que tambin podemos simplemente envolver esto.

4
00:00:18,310 --> 00:00:26,340
Solo podemos decir que si props is Authenticated es verdadero, solo en este caso debe mostrarse el orden de los elementos de navegacin;

5
00:00:26,640 --> 00:00:29,870
de lo contrario, null se representa en su lugar.

6
00:00:29,950 --> 00:00:37,330
Esta es la manera rpida, fcil y correcta de garantizar que nunca veamos pedidos, ya que puede confirmar

7
00:00:37,330 --> 00:00:40,050
en las actualizaciones de la aplicacin si

8
00:00:40,200 --> 00:00:45,360
no estamos autenticados, tan pronto como inicie sesin aqu, se muestran los pedidos.

9
00:00:45,560 --> 00:00:51,530
Ahora, otra cosa que quiero hacer es cuando iniciamos sesin con xito, quiero redirigir

10
00:00:51,530 --> 00:00:56,410
lejos del formulario de autenticacin aqu porque ya no tiene sentido mostrarlo.

11
00:00:56,630 --> 00:01:01,790
Esto se puede lograr fcilmente dentro de nuestro contenedor de autenticacin, all al

12
00:01:02,000 --> 00:01:07,960
final renderizamos todo este formulario y el objetivo es simplemente redirigir al usuario si est autenticado.

13
00:01:08,270 --> 00:01:11,690
Ahora ya hemos conectado esto a nuestra tienda, as

14
00:01:11,870 --> 00:01:19,370
que lo que puedo hacer es en mapStateToProps en el contenedor de autenticacin, tambin puedo obtener la informacin isAuthenticated y

15
00:01:19,670 --> 00:01:24,390
obtener esto del estado. auth. token y compara esto con

16
00:01:24,530 --> 00:01:27,270
null, si el token no es nulo, estamos autenticados.

17
00:01:27,680 --> 00:01:34,220
Y luego volver a importar ese componente de redireccionamiento del enrutador para redirigir al usuario si est autenticado, as

18
00:01:34,220 --> 00:01:38,490
que ver que es un patrn comn porque es muy poderoso y fcil.

19
00:01:38,750 --> 00:01:45,890
Entonces, aqu reac-router-dom es el paquete del que importo la redireccin y ahora queremos renderizar el redireccionamiento cada

20
00:01:45,890 --> 00:01:47,680
vez que estamos autenticados, as

21
00:01:47,840 --> 00:01:54,750
que abajo en el mtodo de renderizado, lo que agregar es una comprobacin simple antes de devolver el

22
00:01:54,750 --> 00:02:02,020
jsx donde solo comprobar si esto. accesorios. isAuthenticated, este accesorio que acabamos

23
00:02:02,190 --> 00:02:06,150
de agregar, entonces quiero renderizar mi redireccin.

24
00:02:06,150 --> 00:02:10,170
As que crear una variable, authRedirect que de forma predeterminada

25
00:02:10,170 --> 00:02:11,710
es nula para que

26
00:02:12,060 --> 00:02:19,410
no represente nada, pero luego, cuando seamos autenticados, authRedirect usar realmente mi componente de redireccionamiento y lo redirigir

27
00:02:19,410 --> 00:02:21,840
a solo una barra, digamos.

28
00:02:21,850 --> 00:02:28,770
Y ahora, por supuesto, necesito renderizar authRedirect, lo har aqu dentro de

29
00:02:29,010 --> 00:02:37,660
mi div, lo incrusto as, auth redirect. Con este sencillo truco, podemos asegurarnos de que cuando nuestra aplicacin vuelva a cargar

30
00:02:37,700 --> 00:02:43,990
e ingresemos aqu, as que cambie para iniciar sesin y enviar, seremos redireccionados luego de un inicio de sesin exitoso.

31
00:02:44,030 --> 00:02:45,410
As que todo est

32
00:02:45,590 --> 00:02:52,130
funcionando, asegurmonos de que cuando se utiliza el generador de hamburguesas, podamos usarlo incluso si no estamos autenticados, as

33
00:02:52,160 --> 00:03:00,980
como aqu pero una vez que comenc a construir uno y hago clic en "ordenar ahora", no alcanzo una pgina en la que no puedo

34
00:03:00,980 --> 00:03:07,070
hacer nada de todos modos, pero en su lugar dice que registrese para continuar, por lo que

35
00:03:07,070 --> 00:03:12,290
debe registrarse para seguir revisando la hamburguesa. Para hacer eso, ir al

36
00:03:12,320 --> 00:03:22,040
contenedor de mi hamburguesa, por supuesto aqu, aqu es donde incluyo los controles de compilacin, esto es lo que mantiene

37
00:03:22,100 --> 00:03:28,870
este botn de orden ahora y los controles de compilacin necesitan saber si estoy

38
00:03:28,880 --> 00:03:30,040
autenticado o no.

39
00:03:30,050 --> 00:03:34,060
As que vamos a obtener esta buena verificacin de autenticacin

40
00:03:34,070 --> 00:03:40,820
antigua en mapStateToProps en el contenedor de generador de hamburguesas, se autentica siempre como llegar al token

41
00:03:40,880 --> 00:03:48,050
de autenticacin stateh y compararlo con null y luego isAuthenticated se debe pasar a los controles de compilacin.

42
00:03:48,080 --> 00:03:54,430
As que all agregar un apoyo isAuth y lo vincular a esto. accesorios. isAuthenticated, el accesorio

43
00:03:54,440 --> 00:03:58,160
que acabamos de mapear en mapStateToProps.

44
00:03:58,160 --> 00:04:03,980
Ahora pasemos a los controles de compilacin para el componente de controles de compilacin que

45
00:04:04,010 --> 00:04:08,420
podemos encontrar en el componente burger en la carpeta de componentes, controles

46
00:04:08,420 --> 00:04:15,820
de compilacin y all recibimos que isAuth prop que contiene esa informacin y determina qu hace este botn aqu.

47
00:04:15,830 --> 00:04:22,490
Ahora lo que hace el botn ahora es que en el generador de hamburguesas, donde manejamos este accesorio ordenado

48
00:04:22,490 --> 00:04:29,060
que al final es solo un accesorio conectado al evento click del botn, all ejecutamos este manejador de compras

49
00:04:29,060 --> 00:04:31,430
y en el controlador de compras, establecemos

50
00:04:31,430 --> 00:04:37,910
el estado para la compra y eso conducir a que se desarrolle el resto y se muestre nuestro modal

51
00:04:37,910 --> 00:04:40,220
donde podemos continuar, y as sucesivamente.

52
00:04:40,220 --> 00:04:47,110
Entonces, la idea es que al final, hacemos exactamente lo que hacemos en el modal cuando continuamos o para ser precisos, lo

53
00:04:47,120 --> 00:04:52,250
que hacemos en orderSummary al continuar, el purchaseContinueHandler se ejecuta all y luego simplemente presionamos para

54
00:04:52,460 --> 00:04:58,520
verificar para que hacemos un push para verificar una vez que el usuario se haya registrado si se ha

55
00:04:58,640 --> 00:05:05,300
registrado a travs de nuestra redireccin del generador de hamburguesas. Para eso, primero necesitamos esa redireccin, as que de

56
00:05:05,330 --> 00:05:05,930
vuelta a

57
00:05:05,930 --> 00:05:12,290
los controles de compilacin, es este botn en el que queremos trabajar, este botn aqu debera comportarse de

58
00:05:12,410 --> 00:05:14,690
manera diferente si no estamos autenticados.

59
00:05:14,690 --> 00:05:20,090
Manejar la mayor parte de esa lgica en el contenedor del generador de hamburguesas,

60
00:05:20,090 --> 00:05:28,400
aunque aqu solo quiero cambiar el ttulo as que realmente lo ajustar con llaves y solo ver los apoyos que recibo

61
00:05:28,420 --> 00:05:32,090
como argumento en los controles de compilacin. componente presentacional,

62
00:05:32,090 --> 00:05:34,460
isAuth, ese es el apoyo que

63
00:05:34,460 --> 00:05:38,790
acabamos de transmitir, si eso es cierto, dar salida a un

64
00:05:38,900 --> 00:05:44,530
orden de cadena ahora; de lo contrario, generar la suscripcin al pedido, algo as.

65
00:05:44,540 --> 00:05:47,110
As que este es el estilo de mi

66
00:05:47,180 --> 00:05:51,390
botn ahora, si volvemos a la aplicacin en el generador de hamburguesas,

67
00:05:51,390 --> 00:05:52,840
vemos que si no

68
00:05:53,030 --> 00:05:58,030
estamos autenticados, vemos el registro para ordenar y si iniciamos sesin, deberamos ver que esto

69
00:05:58,190 --> 00:05:59,070
cambia, ahora tenemos

70
00:05:59,070 --> 00:06:03,460
orden, ahora tenemos que asegurarnos de que este botn haga lo correcto.

71
00:06:03,470 --> 00:06:09,300
Tenga en cuenta que cuando hacemos clic en el botn, simplemente ejecutamos el mtodo que se enva a este

72
00:06:09,500 --> 00:06:11,180
componente en el accesorio ordenado.

73
00:06:11,390 --> 00:06:18,380
Entonces, si volvemos al contenedor del generador de hamburguesas, vemos que el accesorio ordenado est obligado a

74
00:06:18,740 --> 00:06:26,670
comprar controlador, el controlador de compras nos muestra el modal estableciendo este estado para comprar o comprar como verdadero en

75
00:06:26,780 --> 00:06:27,650
este contenedor.

76
00:06:27,650 --> 00:06:30,340
Ahora solo quiero hacer eso si estamos

77
00:06:30,440 --> 00:06:34,880
autenticados, de lo contrario, quiero redireccionar a mi pgina de autenticacin.

78
00:06:34,880 --> 00:06:41,300
Entonces, lo que podemos hacer es ir al controlador de compras y verificar estos accesorios, y all, el

79
00:06:41,930 --> 00:06:48,380
apuntalamiento se configura en nuestra constante mapStateToProps, est autenticado, este es el soporte que pasamos a nuestro contenedor

80
00:06:48,380 --> 00:06:52,220
de generador de hamburguesas que tiene el estado de autenticacin.

81
00:06:52,250 --> 00:06:59,530
Entonces, si estamos autenticados, entonces quiero configurar el estado para la compra; de lo contrario, quiero usar

82
00:06:59,660 --> 00:07:00,950
mi apuntador de

83
00:07:03,860 --> 00:07:05,820
historial, esto viene del enrutador

84
00:07:05,930 --> 00:07:09,190
de reaccin si recuerda empujar al usuario a

85
00:07:09,230 --> 00:07:19,160
la pgina / auth para que tenga la oportunidad de inscribindose Ahora con eso, si guardamos nuestra aplicacin y volvemos, ahora

86
00:07:19,160 --> 00:07:25,940
podemos agregar algo a la hamburguesa y hacer clic en Registrarse para ordenar y

87
00:07:25,940 --> 00:07:31,770
hacer clic en este botn nos redirecciona aqu a la pgina de registro.

88
00:07:31,850 --> 00:07:38,300
Por supuesto, el problema que tenemos es que si ahora iniciamos sesin, simplemente seremos redireccionados al generador de hamburguesas y nuestra

89
00:07:38,420 --> 00:07:41,570
hamburguesa actualmente construida se perder. Sera mejor ser redirigido

90
00:07:41,570 --> 00:07:48,200
directamente a la pgina de pago y all, todava tener nuestra hamburguesa, este ltimo sera el caso

91
00:07:48,230 --> 00:07:53,300
porque los ingredientes de la hamburguesa se almacenan en la tienda de reduccin

92
00:07:53,300 --> 00:07:56,630
y si no volvemos al generador de hamburguesas,

93
00:07:56,750 --> 00:08:01,460
este gan No se restablece, pero por supuesto, esa redireccin es el

94
00:08:01,460 --> 00:08:07,850
problema porque solo queremos redirigir en este escenario. Si el usuario acaba de ingresar a la aplicacin y hace clic en autenticar,

95
00:08:07,850 --> 00:08:10,570
no queremos redireccionar en el proceso de pago porque an no se

96
00:08:10,610 --> 00:08:12,810
ha creado una hamburguesa, no habr ningn ingrediente para pagar.

97
00:08:13,130 --> 00:08:16,400
Echemos un vistazo a cmo resolvemos este problema en la prxima conferencia.

