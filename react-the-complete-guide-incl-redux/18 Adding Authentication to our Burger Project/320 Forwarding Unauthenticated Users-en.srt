1
00:00:02,210 --> 00:00:09,050
Let's work on the navigation items first, there I want to make sure that orders is only visible if we

2
00:00:09,140 --> 00:00:12,660
are authenticated. Well that's of course not too difficult,

3
00:00:12,680 --> 00:00:18,160
we already got logic to show something conditionally so we can also simply wrap this.

4
00:00:18,310 --> 00:00:26,340
We can say only if props isAuthenticated is true, only in this case navigation items order should be shown

5
00:00:26,640 --> 00:00:29,870
otherwise null is rendered in its place.

6
00:00:29,950 --> 00:00:37,330
This is the quick and easy and correct way of ensuring we never see orders as you can confirm

7
00:00:37,330 --> 00:00:40,050
in the app reloads if we are not authenticated,

8
00:00:40,200 --> 00:00:45,360
as soon as I do login here though, orders is shown.

9
00:00:45,560 --> 00:00:51,530
Now another thing I want to do is when we did login successfully, I want to redirect away from the

10
00:00:51,530 --> 00:00:56,410
authentication form here because it doesn't make sense to show this anymore.

11
00:00:56,630 --> 00:01:01,790
This can easily be achieved inside our auth container, there

12
00:01:02,000 --> 00:01:07,960
we in the end render this whole form and the goal is to simply redirect the user if he isAuthenticated.

13
00:01:08,270 --> 00:01:11,690
Now we already did connect this to our store

14
00:01:11,870 --> 00:01:19,370
so what I can do is in mapStateToProps in the auth container, I can also get the isAuthenticated information

15
00:01:19,670 --> 00:01:24,390
and get this from state.auth.token and compare this to null,

16
00:01:24,530 --> 00:01:27,270
if the token is not null, we're authenticated.

17
00:01:27,680 --> 00:01:34,220
And then again I'll import that redirect component from the router to redirect the user if he is authenticated

18
00:01:34,220 --> 00:01:38,490
so you see that's a common pattern because it's so powerful and easy.

19
00:01:38,750 --> 00:01:45,890
So here react-router-dom is the package from which I import redirect and now we want to render redirect

20
00:01:45,890 --> 00:01:47,680
when ever we are authenticated

21
00:01:47,840 --> 00:01:54,750
so down in the render method, what I will add is a simple if check before we return the jsx where I will

22
00:01:54,750 --> 00:02:02,020
just check if this.props.isAuthenticated, this prop we just added,

23
00:02:02,190 --> 00:02:06,150
then I want to render my redirect.

24
00:02:06,150 --> 00:02:10,170
So I'll create a variable, authRedirect which by default is null

25
00:02:10,170 --> 00:02:11,710
to not render anything

26
00:02:12,060 --> 00:02:19,410
but then when we are authenticated, authRedirect will actually be using my redirect component and redirect

27
00:02:19,410 --> 00:02:21,840
to just slash, let's say.

28
00:02:21,850 --> 00:02:28,770
And now of course I need to render authRedirect, I'll do this here inside my div, embed it like this, auth

29
00:02:29,010 --> 00:02:37,660
redirect. With this simple trick, we can ensure that when our application reloads and we do log in here,

30
00:02:37,700 --> 00:02:43,990
so switch to sign in and submit, we are redirected after a successful login.

31
00:02:44,030 --> 00:02:45,410
So that's all working,

32
00:02:45,590 --> 00:02:52,130
let's now ensure that when the burger builder is used, that we can use it even if we are not authenticated,

33
00:02:52,160 --> 00:03:00,980
so just as here but that once I started building one and I click order now, I don't reach a page

34
00:03:00,980 --> 00:03:07,070
where I can't do anything anyways but instead that it says sign up to continue, so that you have to sign

35
00:03:07,070 --> 00:03:12,290
up to continue checking out the burger. To do that,

36
00:03:12,320 --> 00:03:22,040
I will go to my burger builder container of course here, this is where I include the build controls, this

37
00:03:22,100 --> 00:03:28,870
is what's holding this order now button and the build controls need to know whether I'm authenticated

38
00:03:28,880 --> 00:03:30,040
or not.

39
00:03:30,050 --> 00:03:34,060
So let's get this good old authentication check into mapStateToProps

40
00:03:34,070 --> 00:03:40,820
in the burger builder container too, isAuthenticated as always reaching out to state

41
00:03:40,880 --> 00:03:48,050
auth token and comparing it to null and then isAuthenticated should be passed on to the build controls.

42
00:03:48,080 --> 00:03:54,430
So there I'll add an isAuth prop and bind it to this.props.isAuthenticated,

43
00:03:54,440 --> 00:03:58,160
the prop we just mapped in mapStateToProps.

44
00:03:58,160 --> 00:04:03,980
Now let's move onto the build controls to the build controls component which we can find in the burger component

45
00:04:04,010 --> 00:04:08,420
in the components folder, build controls and there we now receive

46
00:04:08,420 --> 00:04:15,820
that isAuth prop which holds that information and it determines what this button down here does.

47
00:04:15,830 --> 00:04:22,490
Now what the button does right now is that in the burger builder, where we handle this ordered prop which

48
00:04:22,490 --> 00:04:29,060
in the end is just a prop connected to the click event of the button, that there we execute this purchase

49
00:04:29,060 --> 00:04:31,430
handler and in the purchase handler,

50
00:04:31,430 --> 00:04:37,910
we set the state to purchasing and that will then lead to the rest unfolding and our modal being

51
00:04:37,910 --> 00:04:40,220
shown where we can continue and so on.

52
00:04:40,220 --> 00:04:47,110
So the idea is that in the end, we do just what we do in the modal when we continue or to be precise,

53
00:04:47,120 --> 00:04:52,250
what we therefore do in orderSummary on continuing, the purchaseContinueHandler is executed there

54
00:04:52,460 --> 00:04:58,520
and then we simply push to check out so that we do push to check out once the user signed up

55
00:04:58,640 --> 00:05:05,300
if he signed up through our redirection from the burger builder. For that, we first of all need that

56
00:05:05,330 --> 00:05:05,930
redirection

57
00:05:05,930 --> 00:05:12,290
so back to the build controls, it's this button we want to work on, this button here should behave differently

58
00:05:12,410 --> 00:05:14,690
if we are not authenticated.

59
00:05:14,690 --> 00:05:20,090
I'll handle most of that logic in the burger builder container though here I only want to change the

60
00:05:20,090 --> 00:05:28,400
caption so I'll actually wrap it in curly braces and I'll just check props which I do receive as an argument

61
00:05:28,420 --> 00:05:32,090
in the build controls presentational component, isAuth

62
00:05:32,090 --> 00:05:34,460
that's the prop we just pass down,

63
00:05:34,460 --> 00:05:38,790
if that's true then I'll output a string order now

64
00:05:38,900 --> 00:05:44,530
otherwise I'll output sign up to order, something like that.

65
00:05:44,540 --> 00:05:47,110
So this is my button style now,

66
00:05:47,180 --> 00:05:51,390
if we go back to the application on the burger builder, we see that if we're not authenticated, we see

67
00:05:51,390 --> 00:05:52,840
sign up to order

68
00:05:53,030 --> 00:05:58,030
and if we do log in, we should see that this changes,

69
00:05:58,190 --> 00:05:59,070
we've got order now

70
00:05:59,070 --> 00:06:03,460
now, now we need to make sure that this button does the right thing.

71
00:06:03,470 --> 00:06:09,300
Keep in mind when we click the button, we simply execute the method which is sent to this component

72
00:06:09,500 --> 00:06:11,180
on the orderd prop.

73
00:06:11,390 --> 00:06:18,380
So if we go back to the burger builder container, we see that the ordered prop is bound to purchase handler,

74
00:06:18,740 --> 00:06:26,670
the purchase handler shows us the modal by setting this state to purchasing or purchasing to true in this

75
00:06:26,780 --> 00:06:27,650
container.

76
00:06:27,650 --> 00:06:30,340
Now I only want to do that if we are authenticated,

77
00:06:30,440 --> 00:06:34,880
otherwise I want to redirect to my authenticate page.

78
00:06:34,880 --> 00:06:41,300
So what we can do is we can go into the purchase handler and check this props and there, the prop is

79
00:06:41,930 --> 00:06:48,380
set up in our mapStateToProps constant, isAuthenticated, this is the prop we passed to our burger

80
00:06:48,380 --> 00:06:52,220
builder container which holds the authentication status.

81
00:06:52,250 --> 00:06:59,530
So if we are authenticated, then I want to set the state to purchasing otherwise

82
00:06:59,660 --> 00:07:00,950
I want to use

83
00:07:03,860 --> 00:07:05,820
my history prop,

84
00:07:05,930 --> 00:07:09,190
this is coming from the react router if you remember

85
00:07:09,230 --> 00:07:19,160
to push the user to the /auth page so that he has a chance of signing up. Now with that if we save

86
00:07:19,160 --> 00:07:25,940
our application and we go back, now we can add something to the burger and click sign up to order and

87
00:07:25,940 --> 00:07:31,770
clicking this button redirects us here to the sign up page.

88
00:07:31,850 --> 00:07:38,300
Of course the issue that we have is that if we now sign in, we'll simply be redirected back to the burger builder

89
00:07:38,420 --> 00:07:41,570
and our currently built burger will be lost. It

90
00:07:41,570 --> 00:07:48,200
would be better to be redirected directly to the checkout page and there, still have our burger,

91
00:07:48,230 --> 00:07:53,300
the latter would be the case because the burger ingredients are stored in the redux store and if we

92
00:07:53,300 --> 00:07:56,630
don't go back to burger builder, this won't be reset

93
00:07:56,750 --> 00:08:01,460
but of course, that redirection is the issue because we only want to redirect

94
00:08:01,460 --> 00:08:07,850
in this scenario. If the user just got into the app and clicked on authenticate, we don't want to redirect

95
00:08:07,850 --> 00:08:10,570
on checkout because no burger was built yet,

96
00:08:10,610 --> 00:08:12,810
there won't be any ingredients to checkout.

97
00:08:13,130 --> 00:08:16,400
Let's take a look at how we solve this problem in the next lecture.

