1
00:00:02,350 --> 00:00:08,770
Tak wic celem jest teraz uzyskanie tokena z zaplecza i uywamy firebase, ale podejcie oczywicie dziaa

2
00:00:08,770 --> 00:00:09,810
z dowolnym backendem,

3
00:00:09,810 --> 00:00:14,600
biorc pod uwag, e backend ma odpowiednie punkty kocowe API do poczenia.

4
00:00:14,890 --> 00:00:22,060
Jeli szukasz instrukcji sprawdzania poprawnoci poczty e-mail uytkownika na serwerze, jak utworzy token, to jest zy kurs,

5
00:00:22,090 --> 00:00:24,250
nie ma to nic wsplnego

6
00:00:24,250 --> 00:00:27,670
z reagowaniem i dlatego nie jest tutaj omwione.

7
00:00:27,970 --> 00:00:31,060
Oglny kurs budowania interfejsu API dla twojej usugi

8
00:00:31,090 --> 00:00:36,790
i wybranego jzyka byby bardziej odpowiedni, poniewa powiniene nauczy si takich rzeczy w takich kursach

9
00:00:36,910 --> 00:00:40,300
lub oczywicie bierzesz udzia w kursie penego stosu.

10
00:00:40,300 --> 00:00:47,350
Poka wam stron i baz ogniow, atwy w uyciu backend, ktry uywamy, daje nam

11
00:00:47,380 --> 00:00:49,660
uwierzytelnianie po wyjciu z pudeka.

12
00:00:49,840 --> 00:00:56,590
Jeli klikniemy tam na uwierzytelnianie, musimy ustawi metod logowania i tam, mog wybra adres e-mail i

13
00:00:56,590 --> 00:01:01,220
haso, to bdzie przechowywa dane uytkownika w naszym wasnym projekcie firebase.

14
00:01:01,510 --> 00:01:04,630
Klikam na wcz i zapisz to, a teraz moemy

15
00:01:04,960 --> 00:01:12,880
osign pewne kocowe punkty kocowe API, aby zarejestrowa uytkownikw i zdoby token. Aby dowiedzie si, do ktrego adresu musimy go wysa,

16
00:01:12,880 --> 00:01:14,600
nie jest to nasz

17
00:01:14,620 --> 00:01:22,330
adres bazy danych, ktrego uywalimy do tej pory, moemy po prostu wyprbowa google dla autorejestrowania firebase rest.

18
00:01:22,420 --> 00:01:26,820
i tutaj jest to drugi wynik, interfejs API auts odpoczynku firebase.

19
00:01:27,190 --> 00:01:34,780
Tutaj znajdziesz, do ktrych punktw kocowych API moesz wysya dane uwierzytelniajce, aby podpisa uytkownika w gr lub w d, zacznijmy

20
00:01:34,780 --> 00:01:40,450
wic od rejestracji, a tutaj widzisz, e musimy wysa prob o dodanie do tego punktu

21
00:01:40,450 --> 00:01:41,160
kocowego tutaj.

22
00:01:41,590 --> 00:01:42,150
Wic

23
00:01:42,150 --> 00:01:43,850
skopiuj ten punkt kocowy,

24
00:01:44,170 --> 00:01:46,170
a teraz chc wysa prob.

25
00:01:46,300 --> 00:01:49,690
Moglibymy stworzy do tego kolejn instancj typu axios,

26
00:01:49,690 --> 00:01:55,360
zdecydowanie nie moemy uy instancji typu axios, poniewa tutaj mamy bazowy URL, ktry byby

27
00:01:55,870 --> 00:02:01,990
nieprawidowy, ale uyj domylnej usugi axios, a nie instancji tutaj, a take nie utworz nowego

28
00:02:01,990 --> 00:02:03,770
jeden, poniewa wyl tylko

29
00:02:03,850 --> 00:02:10,840
dwie proby, wic nie musz konfigurowa tej rzeczy bazowej. W pliku auth w folderze moich dziaa

30
00:02:10,870 --> 00:02:15,760
bd teraz importowa aksio z pakietu axios, a nastpnie bd

31
00:02:16,210 --> 00:02:18,550
mg rozpocz wysyanie da.

32
00:02:18,700 --> 00:02:25,270
Wic tutaj w auth action creator w funkcji, ktr zwracamy, sign do axios, wyl danie postu do

33
00:02:25,490 --> 00:02:27,620
adresu URL, ktry wanie skopiowaem.

34
00:02:27,940 --> 00:02:35,620
Teraz mamy ten dziwny klucz API, musimy go zastpi kluczem API naszego projektu firebase, moesz go

35
00:02:35,620 --> 00:02:42,430
znale w projekcie firebase, jeli klikniesz na uwierzytelnianie, a tam w ustawieniach internetowych, w

36
00:02:42,430 --> 00:02:43,720
prawym grnym rogu

37
00:02:43,990 --> 00:02:45,560
ten klucz tutaj,

38
00:02:45,700 --> 00:02:53,760
ten cay klucz moesz tam zobaczy, klucz API. Skopiuj cay klucz bez cudzysoww i zastp nawiasy

39
00:02:53,760 --> 00:02:57,980
kwadratowe kluczem API pomidzy tym kluczem, co oznacza,

40
00:02:58,000 --> 00:03:01,280
e twoja aplikacja trafia do bazy Firebase.

41
00:03:01,300 --> 00:03:07,630
W tym pocie danych, ktre musimy opublikowa, mona znale w dokumentacji, gdzie wanie bylimy, musimy

42
00:03:07,630 --> 00:03:08,610
przekaza obiekt

43
00:03:08,770 --> 00:03:15,520
javascript, ktry zostanie przeksztacony do json przez axios automatycznie, ktry ma adres e-mail, haso i ten

44
00:03:15,520 --> 00:03:17,220
zwrot bezpieczna waciwo tokenu,

45
00:03:17,380 --> 00:03:23,770
ktra zwraca zabezpieczon waciwo tokenu jest wartoci logiczn i wskazuje, czy chcemy uzyska token, czy

46
00:03:23,770 --> 00:03:25,660
nie, zawsze powinna by

47
00:03:25,720 --> 00:03:30,570
prawdziwa, jak tutaj podano, a haso i e-mail powinny by jasne.

48
00:03:30,580 --> 00:03:38,270
Wrmy zatem do naszej aplikacji i skonfigurujmy tutaj kilka auth danych, obiekt javascript, w ktrym ustawiamy waciwo

49
00:03:38,270 --> 00:03:44,350
e-mail zawierajc adres e-mail, ktry otrzymujemy jako argument, taki sam jak dla hasa i,

50
00:03:44,600 --> 00:03:49,670
co nie mniej wane, ustawmy to zwr bezpieczny token na true.

51
00:03:50,120 --> 00:03:54,670
I to jest ten obiekt danych auth, ktry nastpnie chc doczy do

52
00:03:54,830 --> 00:04:02,000
tego dania postu, wic jako drugi argument do metody postu, bd przekazywa dane auth, a wtedy axios daje nam

53
00:04:02,000 --> 00:04:09,590
obietnic, abymy mogli wtedy zadzwoni i zapa. W przypadku poowu. Chc zgosi ten bd,

54
00:04:09,710 --> 00:04:17,830
a ja rwnie poszedem do wysania authFaila wykonanego jako funkcja, w przypadku

55
00:04:17,830 --> 00:04:19,660
succcss, otrzymamy odpowied,

56
00:04:19,760 --> 00:04:28,020
chc zarejestrowa t odpowied i chc wysa tutaj authSuccess, w ten sposb.

57
00:04:28,130 --> 00:04:33,420
Przeka te odpowied na dane odpowiedzi lub dane odpowiedzi, wic

58
00:04:33,470 --> 00:04:39,710
dane, ktre otrzymamy w odpowiedzi na authSuccess i bd na authFail.

59
00:04:40,100 --> 00:04:42,710
Teraz zapiszmy to i zobaczmy, czy

60
00:04:42,770 --> 00:04:52,130
to dziaa, przejdmy do naszej aplikacji i ponownie wprowadmy poprawne dane do rejestracji, nacinijcie submit i zobaczemy authStart i authSuccess, a

61
00:04:52,130 --> 00:04:54,250
jeli przejdziesz do konsoli, zobaczymy,

62
00:04:54,320 --> 00:05:00,800
co udao si nam powrci dania uwierzytelnienia. W danych otrzymalimy informacj,

63
00:05:00,980 --> 00:05:04,990
jak dugo token jest wany,

64
00:05:05,270 --> 00:05:09,100
czyli 3600 sekund, czyli jedna godzina.

65
00:05:09,410 --> 00:05:15,950
Nastpnie token tosamoci, ten dugi, tajemniczy cig, ktry mona odszyfrowa do obiektu javascript, jeli chcemy,

66
00:05:15,950 --> 00:05:23,900
a nastpnie odwieamy token, ktry jest uywany do pobierania nowego tokena ID, poniewa jak wida token identyfikatora wygasa

67
00:05:23,960 --> 00:05:26,270
stosunkowo szybko, po jednym godzina

68
00:05:26,270 --> 00:05:27,860
ze wzgldw bezpieczestwa, ale

69
00:05:28,100 --> 00:05:33,620
moesz wygenerowa nowy z odwieajcym tokenem, ale tylko Ty i Twoja aplikacja moecie

70
00:05:33,620 --> 00:05:34,790
to oczywicie zrobi.

71
00:05:34,790 --> 00:05:36,400
Wic to s nasze

72
00:05:36,410 --> 00:05:42,770
opcje, widzimy take adres e-mail, na ktry utworzylimy uytkownika. W naszym zapleczu firewall, jeli przejdziemy do

73
00:05:42,980 --> 00:05:50,460
uwierzytelniania i odwieamy t stron uytkownikw, widzimy uytkownika z jego identyfikatorem, ktry zosta tutaj automatycznie wygenerowany.

74
00:05:50,810 --> 00:05:53,040
Tak wic w ten sposb rejestrujemy

75
00:05:53,210 --> 00:05:57,920
uytkownikw i nie dodawalimy sprawdzania poprawnoci, wic zobaczmy, co si stanie, jeli

76
00:05:57,920 --> 00:06:01,000
wprowadz nieprawidowe haso, nadal moemy klikn przycisk przesyania.

77
00:06:01,040 --> 00:06:10,190
Teraz otrzymujemy bd tutaj i w bdzie, jeli przyjrzymy si akcji tutaj, w samym bdzie, mamy tutaj

78
00:06:10,370 --> 00:06:18,170
przewijany problem, jak si wydaje, otrzymujemy dane o bdzie, gdzie mamy wiadomo, gdzie mwi, e

79
00:06:18,170 --> 00:06:21,030
haso nie jest wystarczajco dugie.

80
00:06:21,790 --> 00:06:28,150
W konsoli zobaczylibymy to rwnie, gdybymy kliknli bdn prob i sprawdzili, czy tutaj,

81
00:06:28,150 --> 00:06:31,300
widzimy j tutaj, a take podgld odpowiedzi.

82
00:06:31,630 --> 00:06:35,620
W naszym bdzie otrzymalimy t wiadomo, ten problem.

83
00:06:36,130 --> 00:06:38,710
Tak wic otrzymujemy proby o

84
00:06:38,710 --> 00:06:40,650
rejestracj, a co waniejsze,

85
00:06:41,080 --> 00:06:48,670
mamy token i ten odwieony token, a take czas wyganicia. Powinnimy uy tych informacji

86
00:06:48,670 --> 00:06:52,930
do uwierzytelnienia si w kolejnych daniach, ale wczeniej

87
00:06:52,930 --> 00:06:57,010
upewnijmy si, e moemy rwnie Zaloguj Si.

