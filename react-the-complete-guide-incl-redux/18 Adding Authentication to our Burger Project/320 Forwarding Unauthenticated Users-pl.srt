1
00:00:02,210 --> 00:00:09,050
Najpierw popracujmy nad elementami nawigacyjnymi, tam chc si upewni, e zamwienia s widoczne tylko

2
00:00:09,140 --> 00:00:12,660
wtedy, gdy jestemy uwierzytelnieni. C, to oczywicie nie jest

3
00:00:12,680 --> 00:00:18,160
zbyt trudne, mamy ju logik, aby pokaza co warunkowo, abymy mogli po prostu to zawin.

4
00:00:18,310 --> 00:00:26,340
Moemy powiedzie tylko wtedy, gdy rekwizyty s uwierzytelnione, tylko w tym przypadku naley wywietli kolejno elementw nawigacyjnych, w przeciwnym

5
00:00:26,640 --> 00:00:29,870
razie na ich miejsce zostanie zrenderowany znak null.

6
00:00:29,950 --> 00:00:37,330
Jest to szybki i atwy i prawidowy sposb na zapewnienie, e nigdy nie zobaczymy zamwie, co

7
00:00:37,330 --> 00:00:40,050
mona potwierdzi w przypadku przeadowania aplikacji,

8
00:00:40,200 --> 00:00:45,360
jeli nie jestemy uwierzytelnieni, jak tylko zaloguj si tutaj, zamwienia s wywietlane.

9
00:00:45,560 --> 00:00:51,530
Kolejn rzecz, ktr chc zrobi, jest to, e po pomylnym zalogowaniu si, chc przekierowa

10
00:00:51,530 --> 00:00:56,410
z formularza uwierzytelniania tutaj, poniewa nie ma ju sensu tego pokazywa.

11
00:00:56,630 --> 00:01:01,790
Mona to atwo osign w naszym auth-kontenerze, tam w kocu renderujemy ca

12
00:01:02,000 --> 00:01:07,960
t posta, a celem jest po prostu przekierowanie uytkownika, jeli jest on uwierzytelniony.

13
00:01:08,270 --> 00:01:11,690
Teraz ju udao nam si poczy to z

14
00:01:11,870 --> 00:01:19,370
naszym sklepem, wic to, co mog zrobi, to mapStateToProps w kontenerze auth, mog te uzyska informacje uwierzytelniajce i

15
00:01:19,670 --> 00:01:24,390
pobra je ze stanu. auth. token i porwnaj to z

16
00:01:24,530 --> 00:01:27,270
wartoci null, jeli token nie ma wartoci null, jestemy uwierzytelnieni.

17
00:01:27,680 --> 00:01:34,220
I znowu zaimportuj ten przekierowany skadnik z routera, aby przekierowa uytkownika, jeli jest on uwierzytelniony, wic

18
00:01:34,220 --> 00:01:38,490
widzisz, e to powszechny wzorzec, poniewa jest tak potny i atwy.

19
00:01:38,750 --> 00:01:45,890
Tak wic tutaj react-router-dom jest paczk, z ktrej importuj przekierowanie, a teraz chcemy renderowa przekierowanie,

20
00:01:45,890 --> 00:01:47,680
gdy kiedykolwiek bdziemy uwierzytelniani,

21
00:01:47,840 --> 00:01:54,750
wic w metodzie renderowania, to co dodam, to proste, jeli sprawdzam, zanim zwrcimy jsx, gdzie

22
00:01:54,750 --> 00:02:02,020
ja po prostu to sprawdz. rekwizyty. jest uwierzytelniony, to wanie dodalimy

23
00:02:02,190 --> 00:02:06,150
prop, a nastpnie chc renderowa moje przekierowanie.

24
00:02:06,150 --> 00:02:10,170
Tak wic utworz zmienn, authRedirect, ktra domylnie ma

25
00:02:10,170 --> 00:02:11,710
warto null, aby

26
00:02:12,060 --> 00:02:19,410
nie renderowa niczego, ale wtedy, gdy jestemy uwierzytelnieni, authRedirect bdzie faktycznie uywa mojego skadnika przekierowania

27
00:02:19,410 --> 00:02:21,840
i przekierowuje do ukonika, powiedzmy.

28
00:02:21,850 --> 00:02:28,770
A teraz oczywicie musz renderowa authRedirect, zrobi to tutaj wewntrz mojego div,

29
00:02:29,010 --> 00:02:37,660
osadzam to w ten sposb, auth przekierowanie. Dziki tej prostej sztuczce moemy zagwarantowa, e gdy nasza aplikacja zostanie ponownie

30
00:02:37,700 --> 00:02:43,990
zaadowana, a my zalogujemy si tutaj, wic przecz si na logowanie i przesyanie, jestemy przekierowywani po udanym logowaniu.

31
00:02:44,030 --> 00:02:45,410
To wszystko dziaa,

32
00:02:45,590 --> 00:02:52,130
teraz upewnijmy si, e gdy uyjemy budowniczego burgera, moemy go uy, nawet jeli nie jestemy

33
00:02:52,160 --> 00:03:00,980
uwierzytelnieni, wic tak jak tutaj, ale kiedy ju zaczem budowa jeden i klikam teraz, nie osigam strony, na ktrej nie

34
00:03:00,980 --> 00:03:07,070
mog nic zrobi, ale zamiast tego, e jest napisane, aby kontynuowa, tak aby musia

35
00:03:07,070 --> 00:03:12,290
si zarejestrowa, aby kontynuowa sprawdzanie burgera. Aby to zrobi, oczywicie

36
00:03:12,320 --> 00:03:22,040
przejd do mojego kontenera dla budowniczych hamburgerw, tutaj uwzgldniam kontrol budowania, to wanie trzyma ten

37
00:03:22,100 --> 00:03:28,870
przycisk teraz, a kontrola kompilacji musi wiedzie, czy jestem uwierzytelniony,

38
00:03:28,880 --> 00:03:30,040
czy nie.

39
00:03:30,050 --> 00:03:34,060
Wic wemy rwnie star sprawdzian autentykacji do mapStateToProps

40
00:03:34,070 --> 00:03:40,820
w kontenerze budowniczego hamburgera, ktry jest uwierzytelniony, poniewa zawsze dociera do stanu tokena uwierzytelniania

41
00:03:40,880 --> 00:03:48,050
i porwnuje go z wartoci null, a nastpnie jest uwierzytelniany jako przekazany do kontroli kompilacji.

42
00:03:48,080 --> 00:03:54,430
Dodam wic podprk isAuth i powi z tym. rekwizyty. isAuthenticated, rekwizyt, ktry

43
00:03:54,440 --> 00:03:58,160
wanie zmapowalimy w mapStateToProps.

44
00:03:58,160 --> 00:04:03,980
Teraz przejdmy do kontroli kompilacji do komponentu do kontroli kompilacji, ktry moemy znale

45
00:04:04,010 --> 00:04:08,420
w komponencie hamburgera w folderze komponentw, zbudujmy kontrole i tam

46
00:04:08,420 --> 00:04:15,820
otrzymujemy teraz propozycj Auth, ktra przechowuje te informacje i okrela, co ten przycisk tutaj robi.

47
00:04:15,830 --> 00:04:22,490
Teraz to, co teraz robi przycisk, to to, e w budowniczym hamburgerw, gdzie zajmujemy si tym

48
00:04:22,490 --> 00:04:29,060
zamwionym rekwizytem, ktry w kocu jest tylko podprk zwizan z klikniciem przycisku, tam wykonujemy ten handlarz

49
00:04:29,060 --> 00:04:31,430
zakupw oraz w module obsugi zakupw,

50
00:04:31,430 --> 00:04:37,910
Ustawimy stan na zakup, a to doprowadzi do dalszego rozwoju, pokazujc nasz modalny sposb, w jaki

51
00:04:37,910 --> 00:04:40,220
moemy kontynuowa i tak dalej.

52
00:04:40,220 --> 00:04:47,110
Chodzi o to, e w kocu robimy to, co robimy w modalu, kiedy kontynuujemy, lub mwic dokadniej, co

53
00:04:47,120 --> 00:04:52,250
robimy w tym celu. Podsumowujc, kontynuujemy, w tym miejscu jest wykonywany purchaseContinueHandler, a

54
00:04:52,460 --> 00:04:58,520
nastpnie po prostu naciskamy, aby sprawdzi, aby robimy push, aby sprawdzi, gdy uytkownik zarejestruje si, jeli

55
00:04:58,640 --> 00:05:05,300
zarejestruje si poprzez nasze przekierowanie z budowniczego burger. W tym celu przede wszystkim potrzebujemy tego

56
00:05:05,330 --> 00:05:05,930
przekierowania

57
00:05:05,930 --> 00:05:12,290
wracajc do kontroli kompilacji, to przycisk, nad ktrym chcemy pracowa, ten przycisk powinien zachowywa

58
00:05:12,410 --> 00:05:14,690
si inaczej, jeli nie bdziemy uwierzytelniani.

59
00:05:14,690 --> 00:05:20,090
Poradz sobie z wikszoci tej logiki w kontenerze budowniczego hamburgera, ale

60
00:05:20,090 --> 00:05:28,400
tutaj chc zmieni tylko podpis, wic zapakuj go w nawiasy klamrowe i sprawdz tylko rekwizyty, ktre otrzymuj

61
00:05:28,420 --> 00:05:32,090
jako argument w kontrolach kompilacji komponent prezentacyjny, isAuth,

62
00:05:32,090 --> 00:05:34,460
ktry jest propem, ktry po

63
00:05:34,460 --> 00:05:38,790
prostu przekazujemy, jeli to prawda, wtedy wypisz kolejno cigw,

64
00:05:38,900 --> 00:05:44,530
w przeciwnym razie wydam polecenie rejestracji na zamwienie, co w tym rodzaju.

65
00:05:44,540 --> 00:05:47,110
Wic to jest teraz mj styl przyciskw,

66
00:05:47,180 --> 00:05:51,390
jeli wrcimy do aplikacji na budowniczym burgerw, zobaczymy, e jeli nie

67
00:05:51,390 --> 00:05:52,840
bdziemy uwierzytelniani, zobaczymy, e

68
00:05:53,030 --> 00:05:58,030
zarejestrujemy si na zamwienie, a jeli si zalogujemy, powinnimy zobaczy, e to si

69
00:05:58,190 --> 00:05:59,070
zmieni, teraz

70
00:05:59,070 --> 00:06:03,460
mamy zamwienie, teraz musimy si upewni, e ten przycisk dziaa dobrze.

71
00:06:03,470 --> 00:06:09,300
Pamitaj, e po klikniciu przycisku, po prostu wykonujemy metod, ktra jest wysyana do tego

72
00:06:09,500 --> 00:06:11,180
komponentu na zamwionym rekwiycie.

73
00:06:11,390 --> 00:06:18,380
Jeli wic wrcimy do kontenera budowniczego hamburgera, widzimy, e zamwiony rekwizyt jest zobowizany do zakupu

74
00:06:18,740 --> 00:06:26,670
handler'a, modu obsugi zakupu pokazuje nam modalny, ustawiajc ten stan na kupowanie lub kupowanie na true w

75
00:06:26,780 --> 00:06:27,650
tym kontenerze.

76
00:06:27,650 --> 00:06:30,340
Teraz chc to zrobi tylko wtedy, gdy

77
00:06:30,440 --> 00:06:34,880
jestemy uwierzytelnieni, w przeciwnym razie chc przekierowa na moj stron uwierzytelniajc.

78
00:06:34,880 --> 00:06:41,300
Wic moemy zrobi to, aby przej do moduu obsugi zakupw i sprawdzi te rekwizyty, a

79
00:06:41,930 --> 00:06:48,380
tam, gdzie rekwizyt jest ustawiony w naszej staej mapStateToProps, jest uwierzytelniony, jest to prop, ktry

80
00:06:48,380 --> 00:06:52,220
przekazalimy naszemu kontenerowi do budowania burgerw, ktry posiada status uwierzytelnienia.

81
00:06:52,250 --> 00:06:59,530
Wic jeli jestemy uwierzytelnieni, to chc ustawi stan na zakup, w przeciwnym razie chc

82
00:06:59,660 --> 00:07:00,950
uy mojego wniosku

83
00:07:03,860 --> 00:07:05,820
historycznego, to pochodzi z

84
00:07:05,930 --> 00:07:09,190
routera reagowania, jeli pamitasz, aby przesun

85
00:07:09,230 --> 00:07:19,160
uytkownika na stron / auth, aby mia szans logowa si. Teraz, jeli zapiszemy nasz aplikacj i wrcimy, teraz

86
00:07:19,160 --> 00:07:25,940
moemy doda co do burgera i klikn Zarejestruj si, aby zamwi,

87
00:07:25,940 --> 00:07:31,770
a kliknicie tego przycisku przekierowuje nas tutaj na stron rejestracji.

88
00:07:31,850 --> 00:07:38,300
Oczywicie problem polega na tym, e jeli teraz si zalogujemy, zostaniemy po prostu przekierowani z powrotem do budowniczego burgerw, a nasz

89
00:07:38,420 --> 00:07:41,570
obecnie zbudowany burger zostanie utracony. Byoby lepiej przekierowa

90
00:07:41,570 --> 00:07:48,200
bezporednio na stron kasy, a tam, jeszcze nasz burger, to drugie, bo

91
00:07:48,230 --> 00:07:53,300
skadniki burgera s przechowywane w sklepie redux i jeli nie

92
00:07:53,300 --> 00:07:56,630
wrcimy do budowniczego burgera, to wygrao

93
00:07:56,750 --> 00:08:01,460
Zostanie zresetowany, ale oczywicie to przekierowanie jest problemem, poniewa

94
00:08:01,460 --> 00:08:07,850
chcemy tylko przekierowa w tym scenariuszu. Jeli uytkownik dopiero co wejdzie do aplikacji i kliknie na opcj

95
00:08:07,850 --> 00:08:10,570
uwierzytelniania, nie chcemy przekierowywa do kasy, poniewa nie zbudowano

96
00:08:10,610 --> 00:08:12,810
jeszcze burgera, nie bdzie adnych skadnikw do kasy.

97
00:08:13,130 --> 00:08:16,400
Przyjrzyjmy si, jak rozwizujemy ten problem na nastpnym wykadzie.

