1
00:00:02,190 --> 00:00:05,310
Parliamo un po 'di sicurezza, fammi

2
00:00:05,430 --> 00:00:09,350
accedere di nuovo. Come hai appreso, gestiamo

3
00:00:09,360 --> 00:00:16,290
il nostro stato di autenticazione qui con il token e registriamo automaticamente l'utente

4
00:00:16,320 --> 00:00:22,790
se disponiamo di un token valido. Questo token  valido solo per 60 minuti, ma per

5
00:00:22,800 --> 00:00:27,000
motivi di sicurezza, perch se il token viene rubato, chiunque pu accedere ai

6
00:00:27,000 --> 00:00:29,010
dati, ovviamente, ora sembra molto brutto.

7
00:00:29,010 --> 00:00:36,150
Tenendo presente che  archiviato nell'applicazione nell'archivio locale,  possibile accedere all'archivio locale con attacchi di scripting

8
00:00:36,150 --> 00:00:43,800
cross-site e gli attacchi di cross-site scripting sono impediti da Angular, non  possibile eseguire l'output di codice

9
00:00:43,890 --> 00:00:45,760
non sicuro per impostazione predefinita.

10
00:00:46,020 --> 00:00:48,500
Quindi hai un sacco di protezione da quel lato,

11
00:00:48,750 --> 00:00:55,020
quindi i tuoi dati e la tua memoria locale dovrebbero essere al sicuro, una rete di sicurezza aggiuntiva quindi  di nuovo

12
00:00:55,020 --> 00:00:57,050
che il token scade dopo un'ora.

13
00:00:57,060 --> 00:01:02,520
Ora firebase teoricamente ti darebbe anche quel token aggiornato se controlliamo la

14
00:01:02,520 --> 00:01:03,900
risposta che otteniamo,

15
00:01:03,960 --> 00:01:08,080
qui che aggiorna il token. Il token di aggiornamento non

16
00:01:08,130 --> 00:01:14,640
scade, puoi archiviarlo anche nell'archivio locale e poi c' un punto finale specifico sull'API di autenticazione

17
00:01:14,640 --> 00:01:22,200
auth di Firebase in cui puoi scambiare un token aggiornato per un token ID, basta inviare il token aggiornato

18
00:01:22,350 --> 00:01:27,010
a questo Endpoint API e si ottiene un nuovo token ID.

19
00:01:27,180 --> 00:01:29,130
Teoricamente questo  uno schema interessante,

20
00:01:29,130 --> 00:01:34,590
puoi sempre farlo con ogni richiesta HTTP che invii, con ogni richiesta che invii ne invii

21
00:01:34,590 --> 00:01:40,410
un'altra in cui cambi il token di aggiornamento per un nuovo token ID anche se il token

22
00:01:40,410 --> 00:01:41,510
ID non 

23
00:01:41,610 --> 00:01:46,890
ancora scaduto che ottieni sempre nuovi token ID e potresti anche ottenerne uno nuovo quando l'utente

24
00:01:46,890 --> 00:01:53,760
ha eseguito l'accesso automatico con la funzionalit che abbiamo aggiunto durante le ultime lezioni, ho scelto di non utilizzarlo qui.

25
00:01:53,820 --> 00:01:59,730
 anche sicuro perch possiamo archiviare il token di aggiornamento nella memoria locale e, come ho detto, questo

26
00:01:59,730 --> 00:02:02,410
 accessibile solo con attacchi di scripting cross-site.

27
00:02:02,730 --> 00:02:09,210
Tuttavia, avere un token che non scade mai e che puoi scambiare per un token che

28
00:02:09,210 --> 00:02:16,890
ti d accesso a qualsiasi cosa potrebbe portare a problemi di sicurezza o almeno dovresti fare molta attenzione a

29
00:02:16,890 --> 00:02:20,340
proteggerlo se stai usando il token di aggiornamento.

30
00:02:20,340 --> 00:02:22,220
Questo  solo qualcosa che

31
00:02:22,260 --> 00:02:27,930
volevo aggiungere, puoi migliorare l'esperienza utente usando il token di aggiornamento, puoi essenzialmente assicurarti che l'utente

32
00:02:27,930 --> 00:02:34,980
non sia mai disconnesso perch non appena il token aggiornato scade, puoi aggiornare il token principale anche dopo una settimana

33
00:02:34,980 --> 00:02:36,220
verifica che il token

34
00:02:36,480 --> 00:02:39,240
sia valido, non lo , prendi il token

35
00:02:39,410 --> 00:02:44,280
di aggiornamento e ne ottieni uno nuovo ma, a causa di quel problema di

36
00:02:44,280 --> 00:02:48,140
sicurezza, ho deciso di non usarlo e volevo portarlo alla tua attenzione.

