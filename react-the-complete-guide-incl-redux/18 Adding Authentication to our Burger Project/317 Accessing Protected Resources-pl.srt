1
00:00:02,170 --> 00:00:09,790
W zwizku z tym, e zaimplementowalimy automatyczne wylogowanie po wyganiciu naszego tokena i nie martw si, zwrcimy

2
00:00:09,820 --> 00:00:13,900
si rwnie w kierunku zmiany ukadu w zalenoci od

3
00:00:14,040 --> 00:00:16,190
stanu uwierzytelnienia rwnie pniej, teraz,

4
00:00:16,200 --> 00:00:22,690
gdy dostaniemy automatyczne wylogowanie, zwrcimy si w stron tego tokena skada wnioski do chronionych zasobw.

5
00:00:22,690 --> 00:00:28,810
Jest to oczywicie typowy przypadek uycia, masz backend z pewnymi punktami kocowymi API, ktre powinny

6
00:00:28,810 --> 00:00:31,020
by dostpne tylko dla uwierzytelnionych uytkownikw,

7
00:00:31,150 --> 00:00:35,520
teraz w naszym zapleczu demo z firebase, ale tak nie jest.

8
00:00:35,750 --> 00:00:42,820
Jeli spojrzymy na baz danych, ktra ostatecznie daje nam nasze punkty kocowe, wszystkie punkty kocowe, tak wic wszystkie dania wysyane

9
00:00:42,820 --> 00:00:48,940
do tego adresu URL, a nastpnie do wszystkich wzw zagniedonych poza tym, s w zasadzie dostpne dla wszystkich.

10
00:00:49,120 --> 00:00:56,710
Tak jest, poniewa wczeniej na kursie zmienilimy nasze zasady tutaj, aby umoliwi wszystkim dostp do odczytu i

11
00:00:56,710 --> 00:00:59,500
zapisu, ustawiajc to na true, zrobilimy

12
00:00:59,890 --> 00:01:04,890
to, aby mc korzysta z tej bazy danych bez uwierzytelniania, teraz

13
00:01:04,960 --> 00:01:08,160
mamy uwierzytelnienie, wic moemy wreszcie to zmieni.

14
00:01:08,170 --> 00:01:13,670
Oczywicie jest to specyficzne dla firewalla, e robisz to z ustawionymi reguami, dla twojego

15
00:01:13,670 --> 00:01:15,940
wasnego zaplecza, w ktrym piszesz swj

16
00:01:15,970 --> 00:01:21,700
wasny kod API, prawdopodobnie masz troch, jeli sprawdzasz, gdzie sprawdzasz, czy jaki wany token jest

17
00:01:21,700 --> 00:01:23,920
doczony do dania i po prostu

18
00:01:23,950 --> 00:01:29,980
zwr odpowied 403, jeli tak nie jest. Tutaj jednak mamy te reguy iw najprostszym przypadku moemy ustawi

19
00:01:29,980 --> 00:01:37,120
to na autn nierwn warto null, co oznacza po prostu, e jeli auth nie jest rwne zeru, to dostp do odczytu jest przyznawany.

20
00:01:37,470 --> 00:01:41,860
Innymi sowy oznacza to, e jeli nie jeste uwierzytelniony, to auth ma warto null,

21
00:01:41,920 --> 00:01:43,560
dlatego to zwraca warto false

22
00:01:43,660 --> 00:01:45,350
i nie masz dostpu do

23
00:01:45,370 --> 00:01:47,910
odczytu, to samo mona zrobi dla dostpu do zapisu.

24
00:01:48,280 --> 00:01:54,290
Jeli tak ustawimy, jest to stosowane do caej bazy danych, do wszystkich danych, ktre

25
00:01:54,460 --> 00:02:01,870
tam s, teraz faktycznie chc zapewni wszystkim dostp do skadnikw i po prostu umoliwi dostp do zamwie

26
00:02:02,080 --> 00:02:04,150
dostpnych jedynie uwierzytelnionym uytkownikom.

27
00:02:04,180 --> 00:02:10,510
Tak wic dla firebase moemy to zrobi, moemy dostroi nasze reguy i moemy powiedzie

28
00:02:10,600 --> 00:02:16,250
"tak" oglnie, e masz dostp do odczytu i zapisu, ale moemy doda regu

29
00:02:16,270 --> 00:02:23,380
tutaj, zagnied to i powiedzmy dla wza zamwie i musisz nazwa dokadnie tak, jak nazywa si

30
00:02:23,430 --> 00:02:26,690
wze, tam mam okrelony zestaw regu, tam

31
00:02:26,770 --> 00:02:31,650
dostp do odczytu jest przyznawany tylko wtedy, gdy auth nie ma

32
00:02:31,650 --> 00:02:38,980
rwnej wartoci null, wic jeli jeste uwierzytelniony i taki sam dla dostpu do zapisu, to powinno

33
00:02:39,060 --> 00:02:48,310
to by przyznane tylko jeli jest nierwne do wartoci null. W zwizku z tym moemy opublikowa te zasady, a teraz zagwarantujemy, e rzeczywicie

34
00:02:48,400 --> 00:02:53,170
przyznajemy prawo do zapisu i odczytu dostpu do skadnikw wszystkim, ale nie do zamwie.

35
00:02:53,170 --> 00:02:58,880
Jeli jednak zrobimy to w ten sposb, nasze reguy odczytu i zapisu na najwyszym poziomie bd

36
00:02:58,900 --> 00:03:06,400
nadpisywa to dla wszystkich zagniedonych wzw, wic musz si tego pozby, a zamiast tego dodam osobn regu dla moich skadnikw i

37
00:03:06,910 --> 00:03:09,830
tam bd wci gotowe do odczytu i zapisu

38
00:03:10,000 --> 00:03:16,270
do wersji true, ale to oznacza, e tylko skadniki maj teraz dostp do odczytu i zapisu lub s

39
00:03:16,270 --> 00:03:21,100
otwarte dla wszystkich, co powinienem powiedzie, zamwienia s dostpne tylko dla uwierzytelnionych uytkownikw i

40
00:03:21,580 --> 00:03:26,670
powinienem doda przecinek tutaj po zwrocie skadnikw . Dziki temu moemy go przetestowa, jeli wrc

41
00:03:26,670 --> 00:03:31,500
do mojej aplikacji, zaaduj j ponownie i przejd do zamwie, otrzymamy bd, jeli

42
00:03:31,660 --> 00:03:34,600
jednak pjd do budowniczego hamburgerw, to nadal dziaa.

43
00:03:34,610 --> 00:03:36,370
Wic skadniki wci byy

44
00:03:36,460 --> 00:03:40,690
zaadowane, dostaj tylko nieautoryzowany bd, gdy odwiedzam tutaj zamwienia.

45
00:03:41,080 --> 00:03:42,820
Teraz jest dobrze, wanie tego chc

46
00:03:42,820 --> 00:03:44,440
i dziki temu moemy teraz

47
00:03:44,550 --> 00:03:52,460
upewni si, e nadal moemy realizowa zamwienia, jeli jestemy uwierzytelnieni i mamy token. Aby to zrobi, musz uda si do

48
00:03:52,480 --> 00:03:59,170
miejsca, w ktrym faktycznie wysalimy to zamwienie i oczywicie jest to twrca

49
00:03:59,460 --> 00:04:02,780
akcji w pliku zamwie w folderze dziaa.

50
00:04:02,920 --> 00:04:09,790
Tam musimy kupi akcj Brger i mamy rwnie akcj fetchOrders, najpierw popracuj nad

51
00:04:09,790 --> 00:04:10,600
tym.

52
00:04:10,900 --> 00:04:18,850
W tym przypadku musimy doda nasz token, nasz token, ktry otrzymalimy z bazy Firewall podczas uwierzytelniania, a

53
00:04:19,360 --> 00:04:22,920
nastpnie moemy doczy ten token do tego dania.

54
00:04:23,050 --> 00:04:30,730
Uwierzytelnienie jest bardzo proste, wystarczy tylko doda zapytanie o to, czy znak zapytania jest rwny adresowi URL, do ktrego wysyamy danie,

55
00:04:30,790 --> 00:04:37,720
a ktry wymaga tokena, a nastpnie musimy przekaza token. Teraz token jest oczywicie czym szczeglnym,

56
00:04:37,720 --> 00:04:42,540
token jest przechowywany w naszym sklepie redux, w jaki

57
00:04:42,670 --> 00:04:44,130
sposb mamy go

58
00:04:44,200 --> 00:04:47,700
tutaj, wewntrz naszego twrcy akcji fetchOrders?

59
00:04:47,710 --> 00:04:51,890
Oczywicie moglibymy otrzyma getState, dowiedzieli si o tym, nie

60
00:04:51,940 --> 00:04:58,210
tylko mona uzyska akcj wysykow, mona rwnie uzyska tutaj funkcj getState, ktr mona wykona,

61
00:04:58,210 --> 00:05:00,730
aby uzyska dostp do stanu.

62
00:05:00,730 --> 00:05:06,360
Nauczyem ci take, e nie polecam tego zbyt czsto i nie chc tego tutaj uywa, cho

63
00:05:06,400 --> 00:05:11,350
widz, e moe to by przypadek, w ktrym warto uzyska te informacje, ktre tak

64
00:05:11,350 --> 00:05:12,390
naprawd nie maj

65
00:05:12,400 --> 00:05:12,720
znaczenia

66
00:05:12,730 --> 00:05:17,980
dla twojego zobacz bezporednio w kreatorze akcji. Mimo to chc go umieci w miejscu, w ktrym

67
00:05:17,980 --> 00:05:22,110
wysyamy akcj fetchOrders, a nastpnie przekazujemy j jako argument dla tego twrcy akcji.

68
00:05:22,120 --> 00:05:27,990
Spodziewam si wic uzyska tokenow argumentacj w tej funkcji, a nastpnie zaczam token na moj

69
00:05:28,090 --> 00:05:33,850
prob, wic brakujcy element ma na celu upewnienie si, e otrzymalimy token tutaj, gdy

70
00:05:33,880 --> 00:05:37,720
wysyanie FetchOrders, pobieranie zamwie jest oczywicie wysyane w moim kontenerze

71
00:05:37,850 --> 00:05:43,750
zamwie , na dole mamy onFetchOrders i tutaj znowu musz teraz przekaza jaki token.

72
00:05:43,900 --> 00:05:49,960
Tak wic ten token bdzie musia zosta przekazany do tej anonimowej funkcji, ktr tutaj

73
00:05:49,960 --> 00:05:51,260
wykonujemy, a nastpnie

74
00:05:51,490 --> 00:05:58,410
przekazywany do twrcy akcji, tak wic ostatecznie musimy pobra token w miejscu, w ktrym wywouje on onFetchOrders,

75
00:05:58,420 --> 00:06:04,870
onFetchOrders jest wywoywany tutaj w metodzie componentDidMount, a teraz musimy upewni si, e mamy token,

76
00:06:04,930 --> 00:06:07,060
kiedy to nazywamy. Teraz token,

77
00:06:07,060 --> 00:06:15,390
jak powiedziaem, przechowywany w naszym sklepie redux, oczywicie, przechowujemy go w naszym plastycznym tu wycinku, tokenie.

78
00:06:15,430 --> 00:06:22,550
Wszystko, co musimy zrobi, to w naszym kontenerze zamwie, w ktrym mamy ju mapStateToProps. Teraz musz

79
00:06:22,600 --> 00:06:25,180
rwnie pobra token z mojego stanu.

80
00:06:25,390 --> 00:06:33,190
Tak wic nazw token wniosku i chc uzyska dostp do pastwa, a teraz nie. ale dlatego, e nie interesuje

81
00:06:33,190 --> 00:06:36,390
mnie pokrewny kawaek mojego

82
00:06:36,400 --> 00:06:42,970
stanu, jeli spojrzymy na indeks. Plik js, w ktrym czymy reduktory, reduktor auth, ktry

83
00:06:42,970 --> 00:06:48,070
ustawia stan dla tokena, reduktor auth mona znale na waciwoci auth, wic to jest to,

84
00:06:48,070 --> 00:06:49,870
do czego powinnimy uzyska dostp.

85
00:06:50,110 --> 00:06:55,330
Wic w zamwieniach powinienem uzyska dostp do pastwa. auth. token, jak to.

86
00:06:55,330 --> 00:07:01,450
Teraz udostpniamy token na tokenie, teraz mog to

87
00:07:01,450 --> 00:07:06,150
tutaj przekaza. rekwizyty. token i podkreli, e

88
00:07:06,160 --> 00:07:12,550
jest to tylko jeden sposb robienia tego, alternatyw byoby uycie getState w twrcy akcji porzdkowych.

89
00:07:12,550 --> 00:07:16,210
Mimo to powinnimy pobra token i przekaza go tutaj.

90
00:07:16,540 --> 00:07:22,930
Teraz wic, jeli zapiszemy cay nasz kod i wrcimy, wci tu nie ma, poniewa oczywicie po odwieeniu

91
00:07:22,960 --> 00:07:24,700
aplikacji wszystkie tokeny zostaj utracone.

92
00:07:24,700 --> 00:07:31,400
Przejdmy wic do logowania i szybko zaloguj si z uytkownikiem odtworzonym jaki czas temu, kliknij

93
00:07:31,420 --> 00:07:37,660
przycisk Wylij teraz moemy sprawdzi na reduxie, e mamy udane uwierzytelnienie i e w

94
00:07:37,660 --> 00:07:38,600
stanie auth

95
00:07:38,920 --> 00:07:40,810
mamy token, przejdmy teraz

96
00:07:40,990 --> 00:07:45,900
do zamwie i jak wida, teraz z powodzeniem adujemy tutaj zamwienia

97
00:07:46,090 --> 00:07:51,160
bez bdu, ten bd po prawej jest stary, poniewa teraz pomylnie wysalimy

98
00:07:51,160 --> 00:07:52,320
danie z doczonym tokenem.

99
00:07:52,600 --> 00:07:58,510
I rzeczywicie moesz to zobaczy, jeli otworzysz kart sieci w narzdziach przegldarki przegldarki, zobaczysz, e jeli

100
00:07:58,960 --> 00:08:05,650
wrc do zamwie ponownie, tutaj jest wysyane danie, w ktrym zaczony jest token, jest to bardzo dugi adres

101
00:08:05,650 --> 00:08:08,710
URL, ale poniewa token jest czci adresu URL,

102
00:08:08,830 --> 00:08:12,900
w ten sposb musimy uwierzytelni i jak wysa nasz token do zaplecza.

103
00:08:12,900 --> 00:08:19,120
Wic to jest teraz, w jaki sposb moemy uy tokena, aby uzyska dostp do chronionych

104
00:08:19,300 --> 00:08:24,530
zasobw, oczywicie to samo ma znaczenie, kiedy dokonujemy zamwienia tutaj, buyBurger, tam te

105
00:08:24,710 --> 00:08:29,670
musimy pobra ten token jako argument w kreatorze akcji, a nastpnie doda

106
00:08:29,780 --> 00:08:34,040
go jako parametr zapytania do adresu URL, do ktrego wysyamy

107
00:08:34,180 --> 00:08:41,080
danie, wic autoryzacja rwnie powinna uywa tokena tutaj lub parametr zapytania auth powinien by argumentem tokena, ktry

108
00:08:41,080 --> 00:08:41,620
tutaj

109
00:08:41,740 --> 00:08:46,190
otrzymujemy i do tego musimy oczywicie upewni si, e rwnie dostaj tuken.

110
00:08:46,480 --> 00:08:52,420
Musimy wic uda si do miejsca, w ktrym wysyamy buyBurger i

111
00:08:52,510 --> 00:08:53,320
e oczywicie

112
00:08:53,620 --> 00:09:01,890
dzieje si to w danych kontaktowych, tam mamy nasz metod skadania zamwienia, orderHandler, gdzie mamy onOrderBurger,

113
00:09:01,890 --> 00:09:08,130
ktry w kocu wysya tego twrc akcji, wic tam, buyBurger jest wysyane.

114
00:09:08,130 --> 00:09:11,540
Teraz musimy przekaza ten token, poniewa musimy

115
00:09:11,550 --> 00:09:17,760
go otrzyma na naszej licie argumentw tej metody, ktr mapujemy w rekwiacie, i

116
00:09:17,760 --> 00:09:21,650
e musimy udostpni token jako rekwizyt w tym kontenerze.

117
00:09:21,900 --> 00:09:28,290
Tak jak w kontenerze zamwie, bd mapowa waciwo tokena do stanu. auth. token i teraz moemy

118
00:09:28,560 --> 00:09:34,020
i do miejsca, w ktrym wysyamy to, gdzie nazywamy rekwizytem wysyajcym

119
00:09:34,320 --> 00:09:39,200
akcj na OrdenerBurger, a take przekazujemy ten znacznik rekwizytw tutaj.

120
00:09:39,360 --> 00:09:44,430
A dziki temu upewniamy si, e mamy token i wysyamy go, teraz otrzymujemy

121
00:09:44,430 --> 00:09:48,590
bd, poniewa aplikacja zostaa ponownie zaadowana, a wic token zosta utracony.

122
00:09:48,630 --> 00:09:55,570
Ale jeli ponownie si zaloguj, a my zajmiemy si tym automatycznym wylogowaniem, ktre mamy wkrtce, jeli

123
00:09:55,770 --> 00:09:58,310
ponownie si zaloguj, pjd do budowniczego

124
00:09:58,470 --> 00:10:01,250
burgerw, jeli teraz zbuduj tu burgera,

125
00:10:01,290 --> 00:10:02,240
zamw teraz,

126
00:10:02,430 --> 00:10:04,500
kontynuuj, pozwl mi wyczy kart

127
00:10:04,530 --> 00:10:05,350
sieci, kontynuuj

128
00:10:05,350 --> 00:10:09,460
take tutaj, a teraz szybko wprowad niektre dane, na przykad.

129
00:10:09,710 --> 00:10:14,880
Jeli teraz klikn tutaj polecenie, okae si, e to si udao, poniewa wysya danie zamwienia i

130
00:10:14,970 --> 00:10:17,250
nie myli si z wysaniem tutaj dwch

131
00:10:17,250 --> 00:10:22,620
da. Pierwsze to tylko proba o opcje, ktr zawsze wysya Chrome, jeli wysyasz proba o wpis.

132
00:10:22,620 --> 00:10:27,810
To jest istotne, ta proba pocztowa z tokenem i rzeczywicie moemy zweryfikowa w

133
00:10:27,960 --> 00:10:32,910
naszej bazie danych, e mamy tu nowe zamwienie z wanie skonfigurowanym burgerem.

134
00:10:32,910 --> 00:10:39,080
Teraz to dziaa, teraz uywamy tego tokena, aby dotrze do chronionych zasobw. Jak

135
00:10:39,240 --> 00:10:44,520
wida po przeadowaniu aplikacji i odwiedzeniu zamwie, nie dziaa, jeli nie

136
00:10:44,520 --> 00:10:45,530
masz tokena.

137
00:10:45,660 --> 00:10:48,430
Oczywicie nie jest to najlepsze dowiadczenie uytkownika, aby

138
00:10:48,430 --> 00:10:51,060
po prostu odwiedzi stron, a nastpnie nie.

139
00:10:51,180 --> 00:10:56,280
Byoby lepiej, gdybymy nie mogli odwiedza stron, na ktrych powinnimy by uwierzytelnieni,

140
00:10:56,280 --> 00:11:01,620
oczywicie byoby lepiej, gdyby interfejs uytkownika pokaza nam, czy jestemy uwierzytelnieni, i byoby

141
00:11:01,620 --> 00:11:08,150
najlepiej, gdybymy mogli rwnie zalogowa uytkownik, jeli teoretycznie nadal jest wanym tokenem, abymy nie utracili naszego

142
00:11:08,280 --> 00:11:11,910
stanu uwierzytelnienia za kadym razem, gdy ponownie zaadujemy aplikacj.

143
00:11:11,910 --> 00:11:15,060
To s wszystkie rzeczy, ktrymi bdziemy si zajmowa podczas kolejnych wykadw.

