1
00:00:02,210 --> 00:00:06,180
Ento, como a autenticao funciona em aplicativos de pgina nica?

2
00:00:06,200 --> 00:00:10,390
Temos um servidor e temos nosso aplicativo de pgina nica em execuo no navegador.

3
00:00:10,670 --> 00:00:15,980
Agora o aplicativo de pgina nica envia os dados de autenticao para o servidor porque provavelmente

4
00:00:15,980 --> 00:00:18,130
temos uma pgina de inscrio ou

5
00:00:18,140 --> 00:00:22,940
de login em nosso SPA e, portanto, obtemos dados como o endereo de email

6
00:00:23,120 --> 00:00:29,150
e a senha e enviamos isso ao servidor para validar l porque tal lgica, obviamente, sempre tem que

7
00:00:29,150 --> 00:00:30,000
acontecer no servidor

8
00:00:30,050 --> 00:00:35,750
e  tambm onde armazenamos nossos dados persistentes, no banco de dados no servidor e o servidor

9
00:00:35,750 --> 00:00:38,730
no precisa ser firebase como em nosso projeto,  claro.

10
00:00:38,750 --> 00:00:43,190
Isso pode ser qualquer servidor, qualquer API repousante para ser precisa,  com isso

11
00:00:43,300 --> 00:00:49,520
que normalmente nos comunicamos quando usamos aplicativos de pgina nica. Esse servidor ento envia algo de volta e voc

12
00:00:49,520 --> 00:00:52,670
pode pensar que  uma sesso, mas como o

13
00:00:52,910 --> 00:01:00,630
servidor em um SPA geralmente  uma API sossegada e sem estado, no estamos recebendo de volta uma sesso porque o

14
00:01:00,630 --> 00:01:05,630
servidor no liga para os diferentes clientes que se conectam a ele .

15
00:01:05,630 --> 00:01:12,810
Em vez disso, recebemos de volta um token, voc pode pensar nesse token como um objeto javascript e codific-lo como json, os tokens da

16
00:01:12,920 --> 00:01:16,410
web json so a forma tpica de tokens que voc obtm.

17
00:01:16,430 --> 00:01:21,800
Ento,  um objeto javascript no final que voc pode dizer e esse objeto javascript

18
00:01:21,800 --> 00:01:22,540
agora tem

19
00:01:22,640 --> 00:01:29,270
que ser armazenado no cliente, por exemplo, no armazenamento local. Ns tambm podemos armazen-lo em nossa loja redux, mas l, ele ser

20
00:01:29,270 --> 00:01:31,360
perdido sempre que o usurio atualizar a pgina.

21
00:01:31,370 --> 00:01:37,820
Por isso, normalmente usamos o armazenamento local, pois isso persiste a atualizao das pginas e nos permite buscar esse token,

22
00:01:38,030 --> 00:01:44,440
mesmo que o usurio tenha sado e revisitado nossa pgina, para que possamos deixar o usurio logado, se quisermos.

23
00:01:44,660 --> 00:01:47,330
E o que precisamos disso para ento?

24
00:01:47,690 --> 00:01:52,070
Bem, imagine que estamos fazendo pedidos para algum recurso protegido no servidor, como

25
00:01:52,250 --> 00:01:58,610
por exemplo, tentamos mudar a nossa senha ou queremos criar uma nova postagem no blog, tais solicitaes so permitidas

26
00:01:58,610 --> 00:02:01,380
apenas para usurios autenticados e como ns don

27
00:02:01,430 --> 00:02:06,340
' t constantemente verificar o status de autenticao no servidor, no temos nenhuma sesso l.

28
00:02:06,650 --> 00:02:13,760
Passamos o token junto com as solicitaes para esses recursos protegidos, esse token e isso  importante  criado

29
00:02:13,760 --> 00:02:15,340
pelo servidor e de

30
00:02:15,530 --> 00:02:21,590
uma forma que o servidor possa verificar se  um token vlido criado pelo servidor ou no.

31
00:02:21,740 --> 00:02:24,680
Para que no possamos falsificar esse token no cliente,

32
00:02:24,770 --> 00:02:27,310
no podemos cri-lo l e enviar para o

33
00:02:27,350 --> 00:02:28,850
servidor, isso no funcionaria.

34
00:02:28,910 --> 00:02:33,790
Apenas os tokens enviados pelo servidor so aceitos no servidor.

35
00:02:33,800 --> 00:02:40,040
Ento,  assim que nos autenticamos em solicitaes subseqentes depois de receber esse token e

36
00:02:40,040 --> 00:02:43,750
esse  o padro que vamos implementar neste mdulo.

37
00:02:43,760 --> 00:02:49,020
Agora, como eu disse, usaremos o firebase aqui, j que o usamos como backend, porque  muito

38
00:02:49,220 --> 00:02:54,830
fcil de configurar, mas esse padro ser o mesmo, no importa qual backend voc usar, desde que seja

39
00:02:54,830 --> 00:02:55,900
uma API tranquila.

40
00:02:56,300 --> 00:03:00,010
Ento, quais so os ajustes necessrios em nossa aplicao ento?

