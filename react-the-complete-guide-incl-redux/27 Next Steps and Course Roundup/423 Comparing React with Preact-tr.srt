1
00:00:02,070 --> 00:00:05,790
yleyse preact mthi, daha kk ve hemen hemen ayn API'ye

2
00:00:05,790 --> 00:00:11,220
sahip, bu yzden her zaman yeniden kullanmamz gerekir. Ve cevap her zaman olduu gibi

3
00:00:11,220 --> 00:00:13,110
deiir, farkllklarn ne olduunu

4
00:00:13,290 --> 00:00:17,810
bulalm, preactjs zerinde bunu bulalm. com, rehberi tklatarak, orada

5
00:00:18,000 --> 00:00:21,520
tepki vermek iin farkllklar da tklayabilirsiniz.

6
00:00:21,540 --> 00:00:25,360
Artk farkllklar hakknda daha fazla bilgi edinmek iin bu makaleyi okuyabilirsiniz.

7
00:00:25,620 --> 00:00:27,390
Sonunda burada gzel bir liste

8
00:00:27,450 --> 00:00:29,060
var, neyin dahil olduunu gryorsunuz,

9
00:00:29,070 --> 00:00:31,850
bylece tepki ile tam olarak ayn olan ey.

10
00:00:31,890 --> 00:00:37,440
Ve bunlar daha yksek mertebeden bileenler, bileenlerin yaratlmas, fonksiyonel bileenleriniz ve tm

11
00:00:37,440 --> 00:00:38,940
bu eyler gibi

12
00:00:38,970 --> 00:00:45,920
eylerdir, rnein tepki oluturma elemannn h (), h () olarak adlandrlan bir ilev olduunu grrsnz.

13
00:00:46,020 --> 00:00:51,240
Bu bahsettiim kk farklardan biri, hemen hemen ayn API ama tamamen deil

14
00:00:51,240 --> 00:00:53,650
ama bu sayfa tm farkllklar listeler.

15
00:00:53,940 --> 00:00:58,410
Sylediklerime ne eklendiyse, baz yeni zellikler sunuyor ve

16
00:00:58,500 --> 00:01:04,190
rnein, bunu elde edersiniz. sahne ve bu. Durum, render fonksiyonuna bir argman

17
00:01:04,320 --> 00:01:09,740
olarak geilir, bylece oradaki anahtar kelimeyi, bu anahtar kelime olmadan basite sahne ve

18
00:01:09,750 --> 00:01:15,070
durumu arayabilirsin, ancak yine de bu anahtar kelimeyi burada da belirtildii gibi kullanabilirsin.

19
00:01:15,090 --> 00:01:18,880
imdi bu ho bir ek ve genel olarak eklenen

20
00:01:18,900 --> 00:01:19,400
eylerin

21
00:01:19,410 --> 00:01:20,700
temas, gzel eklemeler.

22
00:01:20,700 --> 00:01:26,250
rnein, snf anahtar szcn kullanabilir ve tepki olarak snf adn kullanmak

23
00:01:26,250 --> 00:01:29,630
zorunda kalmazsnz, bunlar eklenen tm kk eylerdir.

24
00:01:29,910 --> 00:01:32,050
Elbette, prop tipi validasyon

25
00:01:32,160 --> 00:01:35,670
gibi baz eyler de eksiktir, ancak

26
00:01:35,670 --> 00:01:41,480
prop tipleri de en son tepkiyle birlikte ayr bir ktphaneye ekilmitir.

27
00:01:41,490 --> 00:01:45,410
yleyse eksik olan ksm burada bu kadar alakal deil, eksik

28
00:01:45,460 --> 00:01:50,450
olan ou ey sahnelerin ardndaki eyler. Burada, bunlar gerekten ok kozmetik

29
00:01:50,460 --> 00:01:55,710
eylerdir, ama ayn zamanda olduka fazla kaynak kodu karrlar, kesinlikle dikkate

30
00:01:55,770 --> 00:02:02,370
alnmas gereken bir eydir ve tepkilerin boyutunu kltmek iin tepki ekipleri tarafndan ayr bir

31
00:02:02,370 --> 00:02:10,430
ktphaneye konulduunu hayal edebiliriz. ktphane ve preact'a yaklan. imdi, burada bir ekrandaki farkllklar, bir sayfada

32
00:02:10,470 --> 00:02:18,060
ve bu makalede, reaksiyon API'sinden preact olana gei yapmaya alrsanz, size yardmc olacaktr, nk

33
00:02:18,060 --> 00:02:20,950
hemen hemen ayn olduu gibi,

34
00:02:21,030 --> 00:02:22,910
h gibi kk

35
00:02:22,920 --> 00:02:26,950
eyler ) fonksiyonu yerine tepki oluturmak eleman

36
00:02:27,120 --> 00:02:31,260
ama muhtemelen hi armak asla el ile

37
00:02:31,410 --> 00:02:34,920
eleman oluturmak ve tabii ki jsx desteklenmektedir.

38
00:02:35,070 --> 00:02:40,450
imdi sahnelerin arkasndaki en byk fark muhtemelen nasl farkllayor, o yzden

39
00:02:40,470 --> 00:02:46,110
nasl bir ey gncellemeye ihtiyac olduunu ve nasl tepki vereceini reniyor.

40
00:02:46,340 --> 00:02:54,290
Daha iyi ve daha kts, kategoriler olarak lmek istiyorsak, neyin daha iyi olduunu bulmak iin bir lme ihtiyacmz var.

41
00:02:54,660 --> 00:03:00,090
Neyin daha iyi olduuyla ilgili bu soruyu cevaplamak iin, javascript

42
00:03:00,090 --> 00:03:06,210
framework benchmark' arayabilir ve bu github deposunu bulmalsnz, orada birka farkl javascript

43
00:03:06,210 --> 00:03:07,280
erevesi birbiriyle

44
00:03:07,380 --> 00:03:09,730
kyaslandnda, bunu indirip makinenizde de

45
00:03:09,740 --> 00:03:15,210
altrabilirsiniz. Bu olduka fazla zaman aldnz, ancak bu grnty buraya tklarsanz,

46
00:03:15,210 --> 00:03:17,890
bu karlatrmalarn en son sonucunu

47
00:03:17,940 --> 00:03:24,690
github repo'da bulabileceiniz konusunda sizi uyaracam. Daha sonra, birbiri ile karlatrlan farkl javascript erevelerini

48
00:03:24,690 --> 00:03:28,000
grebileceiniz olduka byk olan bu tabloyu alrsnz, bu

49
00:03:28,170 --> 00:03:34,050
tr saylar analiz ederken her zaman dikkatli olmanz gerekir nk testler burada yaptnz uygulama

50
00:03:34,050 --> 00:03:35,800
iin nemli olmayabilir. bina.

51
00:03:35,910 --> 00:03:42,090
Sonunda burada test edilen bir ka ilem var, rnein 10000 satrlk veri yaratma ve

52
00:03:42,090 --> 00:03:43,650
karma gibi ve orada

53
00:03:43,650 --> 00:03:47,100
16 tane tepki bulabiliriz, bu yzden bu dersi

54
00:03:47,220 --> 00:03:53,370
kaydetmek iin kullandm tepkilerin en son srm ve biz de buradaki preact'u buluyoruz .

55
00:03:53,550 --> 00:04:02,370
imdi onlar karlatrrsak, performans asndan ok yakn olduklarn gryoruz, ancak rnein ikinci en

56
00:04:02,370 --> 00:04:12,060
dk sra olan balang zaman iin, 16 numaral reaksiyonun 53 milisaniye olduunu ve preamp'in

57
00:04:12,130 --> 00:04:16,350
36'ya sahip olduunu grebiliyoruz. biraz daha hzl.

58
00:04:16,350 --> 00:04:19,860
Tabii ki bunun nedeni daha kk

59
00:04:20,190 --> 00:04:27,450
boyuttadr. Ayrca, daha kk boyutlara ramen, ok sayda satrn temizlenmesi, alttan nc srann,

60
00:04:27,450 --> 00:04:35,140
tepkimenin preact'tan daha hzl olduu, nk ktphanenin dosya boyutunun yok olduunu grebiliyoruz. Bunun iin

61
00:04:35,250 --> 00:04:41,360
nemli olan, farkl algoritmann ve gncelleme algoritmasnn ne kadar verimli olduudur.

62
00:04:41,400 --> 00:04:48,840
Ve elbette preact baz eyleri karmal, dier yandan tepki gsterdiimiz zaman bu lte baktmzda

63
00:04:48,840 --> 00:04:50,740
biraz daha verimli grnyor.

64
00:04:51,090 --> 00:04:52,860
Bu ekilde bakabilirsin,

65
00:04:52,900 --> 00:04:58,770
preact uygulaman yklediinizde ok fazla zaman kazandrr, ilk kez baladnzda ok

66
00:04:58,770 --> 00:04:59,360
daha

67
00:04:59,370 --> 00:05:05,840
kktr, fazla yer kaplamaz ve lk indirme zamannn ok nemli olduu ve

68
00:05:05,840 --> 00:05:13,400
tel zerinden mmkn olduunca az kod gnderilmesini istediiniz uygulama, preact tepki vermek iin harika

69
00:05:13,430 --> 00:05:15,150
bir alternatif olabilir.

70
00:05:15,410 --> 00:05:23,600
Sper byk, performansl bir ar kurumsal uygulama oluturuyorsanz, zellikle 16 srmnde tepki vermek hala daha

71
00:05:23,900 --> 00:05:26,010
iyi bir seenek olabilir.

72
00:05:26,360 --> 00:05:32,780
Ama ne seerseniz sein, preact ile oynamaktan ekinmeyin, nasl kullanacanz renmek

73
00:05:32,780 --> 00:05:33,690
iin rehberden

74
00:05:33,740 --> 00:05:41,990
okuyun, preact-cli'yu kullanarak yeni projeler yaratn ve bu tepkiyi uygulamak iin harika bir alternatif

75
00:05:41,990 --> 00:05:46,970
olduunu unutmayn. ktphane boyutuna baktmzda temel olarak ayn ama

76
00:05:46,970 --> 00:05:48,800
ok daha kktr.

