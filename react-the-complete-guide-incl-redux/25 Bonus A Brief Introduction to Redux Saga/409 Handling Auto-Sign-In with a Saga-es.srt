1
00:00:02,190 --> 00:00:07,830
De vuelta en la autenticacin. js file en la carpeta de acciones, ya

2
00:00:07,830 --> 00:00:14,430
hemos subcontratado un montn de lgica en la carpeta saga, en la saga que creamos y, por lo tanto, obtenemos

3
00:00:14,850 --> 00:00:17,440
un archivo creador de acciones muy sencillo aqu

4
00:00:17,460 --> 00:00:23,670
donde ya no necesitamos importar axios, podemos elimine esa importacin y ahora solo tenemos creadores de acciones que devuelven

5
00:00:23,670 --> 00:00:24,110
acciones,

6
00:00:24,150 --> 00:00:27,490
que realmente hacen eso, crean acciones, bueno con una excepcin.

7
00:00:27,690 --> 00:00:35,370
En la parte inferior de este archivo, tenemos el creador de acciones authCheckState que ejecutamos en el momento en que

8
00:00:35,370 --> 00:00:40,600
nuestra aplicacin comienza a ver si podemos iniciar sesin en el usuario automticamente, esto

9
00:00:40,950 --> 00:00:43,480
tambin debera entrar en una saga. Por

10
00:00:43,710 --> 00:00:52,110
ltimo pero no menos importante, agreguemos el saga aqu tambin. Lo nombrar justo como llamamos al creador de acciones authCheckStateSaga aqu,

11
00:00:52,110 --> 00:00:54,190
as que lo llamar authCheckStateSaga, ese

12
00:00:55,200 --> 00:00:57,920
es el nombre, recibir aqu mi accin

13
00:00:58,020 --> 00:01:07,130
como argumento y volver a copiar todo el cdigo de mi autenticacin. js.

14
00:01:07,380 --> 00:01:11,260
archivo en la carpeta de acciones y reemplcelo paso a paso.

15
00:01:11,670 --> 00:01:13,320
Entonces, qu hacemos aqu?

16
00:01:13,530 --> 00:01:16,390
Obtenemos el token del almacenamiento local, voy a

17
00:01:16,440 --> 00:01:22,230
agregar el rendimiento aqu tambin como lo hago para todos los pasos que ejecuto en mis sagas.

18
00:01:22,380 --> 00:01:28,380
As que ahora obtenemos el token que es una tarea sincrnica aqu, luego verifico si el token realmente

19
00:01:28,380 --> 00:01:29,880
existe y si no, por

20
00:01:30,210 --> 00:01:38,810
supuesto todava deseo despachar el cierre de sesin aqu, voy a poner acciones. cierre sesin para bsicamente despachar esto y agregar

21
00:01:38,810 --> 00:01:42,610
rendimiento aqu tambin. Ahora, lo siguiente que

22
00:01:42,630 --> 00:01:50,460
hacemos es si tenemos un token vlido, verificamos la fecha de vencimiento, lo calculamos, tambin lo cedemos

23
00:01:50,460 --> 00:01:57,150
y luego, si esto es mucho antes de nuestra fecha actual, tambin quiero ceder el

24
00:01:57,300 --> 00:02:03,050
cierre de sesin debido a que tenemos una fecha de caducidad no vlida.

25
00:02:03,180 --> 00:02:11,280
De lo contrario obtendr una identificacin de usuario del almacenamiento local y tambin ceder eso y luego

26
00:02:11,280 --> 00:02:14,780
tuvimos xito, as que aqu ceder put

27
00:02:14,790 --> 00:02:16,070
authSuccess y pasar

28
00:02:16,080 --> 00:02:23,010
el token y el ID de usuario, sin embargo aqu tanto all como authSuccess deberan

29
00:02:23,010 --> 00:02:27,530
ser accedidos en el objeto de acciones que importar para

30
00:02:27,540 --> 00:02:30,310
usar estos creadores de accin y

31
00:02:30,340 --> 00:02:38,290
tambin quiero ceder las acciones de poner checkAuthTiemout refirindose a este creador de accin que bien, devuelve

32
00:02:38,290 --> 00:02:43,330
esta accin authCheckoutTimeout que a su vez desencadenar otra saga.

33
00:02:43,330 --> 00:02:52,790
Esto es realmente todo, estos son todos los cambios que necesitamos, esa es mi authCheckStateSaga.

34
00:02:53,060 --> 00:03:00,240
Ahora queremos conectar esto y asegurarnos de que esto se ejecute en el momento en que iniciemos

35
00:03:00,350 --> 00:03:07,210
la aplicacin, para esto ir a la autenticacin. js archivo creador de acciones y devuelve todo el cdigo en esta

36
00:03:07,210 --> 00:03:09,180
funcin all, ya no lo necesito ms.

37
00:03:09,620 --> 00:03:16,460
En cambio aqu, simplemente quiero devolver mi objeto de accin y crear un nuevo tipo

38
00:03:16,460 --> 00:03:25,900
de accin para esto, lo nombrar AUTH_CHECK_INITIAL_STATE por ejemplo, el nombre del curso es totalmente de usted, use esto aqu tambin

39
00:03:26,900 --> 00:03:29,390
o quizs no, vamos a solo

40
00:03:29,510 --> 00:03:36,410
llmalo AUTH_CHECK_STATE para que est ms en lnea con nuestro nombre de creador de acciones,

41
00:03:37,580 --> 00:03:38,780
por lo que

42
00:03:38,880 --> 00:03:47,520
AUTH_CHECK_STATE y luego all, devolver mi accin de tipo actionTypes. AUTH_CHECK_STATE y no necesito pasar ningn argumento ni

43
00:03:47,520 --> 00:03:49,800
nada con esa accin,

44
00:03:49,830 --> 00:03:57,410
esto ahora debera desencadenar mi authCheckStateSaga aqu y para permitir que lo haga, necesito configurar

45
00:03:57,600 --> 00:04:02,020
un oyente en el ndice. js file,

46
00:04:02,040 --> 00:04:14,120
all ceder takeEvery para actionTypes. AUTH_CHECK_STATE e importe mi authCheckStateSaga recin creado, que ejecutar una

47
00:04:14,120 --> 00:04:15,530
vez que

48
00:04:15,590 --> 00:04:22,340
se detecte este tipo de accin. Guardemos todos los archivos que cambiamos, regresemos

49
00:04:22,410 --> 00:04:30,760
y volvamos a cargar la aplicacin, vemos authSuccess, por lo que inici sesin con xito de forma automtica.

50
00:04:30,980 --> 00:04:33,390
Vamos a cerrar la sesin y volver

51
00:04:33,890 --> 00:04:41,630
a cargarla de nuevo, y ahora ves que inicia la llamada al estado de verificacin aqu, pero luego inicia el cierre de sesin porque

52
00:04:41,630 --> 00:04:44,150
no encuentra un token vlido, y as sucesivamente.

53
00:04:44,180 --> 00:04:52,790
Entonces ahora reemplazamos todos los efectos secundarios que manejamos en la autenticacin. js creador de accin archivo con cdigo en nuestro archivo de saga, las sagas

54
00:04:52,790 --> 00:04:54,680
que ejecut debido a nuestros oyentes,

55
00:04:54,880 --> 00:05:02,480
nuestros observadores aqu que a su vez se ejecuta aqu en el ndice. archivo js donde lo ejecutamos

56
00:05:02,480 --> 00:05:06,130
en nuestro middleware saga.

57
00:05:06,440 --> 00:05:12,990
Y con eso, hicimos redux-thunk totalmente redundante para la parte de autenticacin de nuestra aplicacin, ahora para

58
00:05:13,040 --> 00:05:20,210
poder eliminarlo por completo, por supuesto tambin necesitamos hacerlo redundante para la parte del generador de hamburguesas y

59
00:05:20,210 --> 00:05:23,440
la parte del pedido, y esto ya lo

60
00:05:23,660 --> 00:05:26,250
hara se una gran prctica para ti.

61
00:05:26,270 --> 00:05:27,450
Entonces, si te apetece,

62
00:05:27,530 --> 00:05:29,490
definitivamente prueba esto por tu cuenta.

63
00:05:29,510 --> 00:05:31,420
Intente agregar ms sagas, tal vez

64
00:05:31,490 --> 00:05:33,040
en archivos nuevos, configure observadores

65
00:05:33,170 --> 00:05:40,390
y reemplace el cdigo que tiene en burgerBuilder. js en la carpeta de acciones y en orden. js en la carpeta de acciones con

66
00:05:40,400 --> 00:05:48,290
cdigo de saga para subcontratar todos tus efectos secundarios en sagas. Haremos esto juntos comenzando con

67
00:05:48,290 --> 00:05:50,660
el prximo video.

