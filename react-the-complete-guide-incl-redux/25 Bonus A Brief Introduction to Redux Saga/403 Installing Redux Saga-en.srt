1
00:00:02,160 --> 00:00:09,220
So I'm back in our finished project, basically in the same state as we had once we deployed it

2
00:00:09,690 --> 00:00:14,170
and there, obviously if we run our application it looks like this.

3
00:00:14,220 --> 00:00:16,080
We have our burger builder,

4
00:00:16,080 --> 00:00:19,320
we can authenticate through firebase

5
00:00:19,500 --> 00:00:25,560
so by simply entering our credentials, logging in and then we can start building the burger as we always

6
00:00:25,560 --> 00:00:27,420
did it throughout this course

7
00:00:27,420 --> 00:00:29,710
so nothing spectacular here.

8
00:00:29,850 --> 00:00:33,540
If we have a look at the code which should be familiar to you,

9
00:00:33,750 --> 00:00:41,170
we handle all these asynchronous tasks or actually any side effects, even synchronous ones,

10
00:00:41,280 --> 00:00:48,660
so things that are not directly related to changing our redux store, we handle all these things in action

11
00:00:48,660 --> 00:00:49,920
creators.

12
00:00:49,920 --> 00:00:55,480
So here I'm in the auth actions file where I have all auth related action creators,

13
00:00:55,560 --> 00:00:57,620
we got a couple of synchronous ones here

14
00:00:57,810 --> 00:01:03,860
but then we also have things like accessing local store and should log out which is a synchronous action

15
00:01:03,870 --> 00:01:07,300
I will give you that but which you could argue

16
00:01:07,440 --> 00:01:13,410
and again, that's not necessarily a best practice but you could argue that this is not really related

17
00:01:13,410 --> 00:01:15,900
to the act of dispatching an action

18
00:01:15,960 --> 00:01:22,890
so maybe you don't want to have it in this file. And we also have asynchronous actions like checkoff

19
00:01:22,890 --> 00:01:30,120
timeout where we have a timeout we set and where we then dispatch log out after a certain expiration time. And

20
00:01:30,120 --> 00:01:31,320
we reach out to the web,

21
00:01:31,320 --> 00:01:35,630
we make post requests and obviously we have to wait for these to finish.

22
00:01:36,030 --> 00:01:40,230
So all these are things which we have in the action creators

23
00:01:40,500 --> 00:01:43,850
and as I said multiple times, that's not necessarily bad

24
00:01:44,070 --> 00:01:51,840
but you could make the argument that you want action creators or the whole idea of dispatching actions

25
00:01:52,260 --> 00:02:00,480
to be very clean, that you don't want to have any other code in there which is not really related to dispatching

26
00:02:00,480 --> 00:02:04,020
an action and this is where redux saga comes in.

27
00:02:04,260 --> 00:02:08,600
So first of all let's install it so that we can see how it works,

28
00:02:08,850 --> 00:02:15,180
So I will run npm install --save and that it's redux-saga,

29
00:02:15,180 --> 00:02:18,910
that's the package name and this will as always download it,

30
00:02:19,020 --> 00:02:26,550
place an entry in the package.json file and then give us access to it in this project and I will

31
00:02:26,550 --> 00:02:30,300
restart the development server with npm start again.

32
00:02:30,300 --> 00:02:35,900
Now we can start working on the project and we can start using redux saga,

33
00:02:36,030 --> 00:02:38,420
let's do this beginning in the next video.

