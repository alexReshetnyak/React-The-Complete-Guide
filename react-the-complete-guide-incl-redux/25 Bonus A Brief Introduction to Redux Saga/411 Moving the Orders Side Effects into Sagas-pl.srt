1
00:00:02,050 --> 00:00:08,990
W ostatnim filmie przenielimy nasze efekty uboczne budowniczego burgera do wasnej

2
00:00:09,110 --> 00:00:16,640
sagi, zakoczmy teraz cay modu lub transformacj projektu, pracujc nad twrcami akcji

3
00:00:16,640 --> 00:00:17,810
zamwie.

4
00:00:17,930 --> 00:00:21,760
Rzucimy okiem na ten plik, widzimy ju import aksos,

5
00:00:21,830 --> 00:00:25,020
wic robimy pewne efekty uboczne w tym pliku.

6
00:00:25,040 --> 00:00:27,390
Pierwsi twrcy akcji s jednak

7
00:00:27,560 --> 00:00:35,840
w porzdku, ale potem dostajemy buyBurger, w ktrym mamy efekty uboczne i mamy rwnie fetchOrders, gdzie

8
00:00:35,840 --> 00:00:38,140
mamy pewne efekty uboczne.

9
00:00:38,180 --> 00:00:40,490
Zacznijmy od buyBurger,

10
00:00:40,550 --> 00:00:44,330
przeniemy teraz t logik do sagi.

11
00:00:44,630 --> 00:00:52,040
W zwizku z tym zamierzam pobra cay ten kod i utworzy nowy plik, ktry bd nadawa nazw. js w folderze sagas, tam

12
00:00:52,040 --> 00:00:55,900
wyeksportuj nowy generator, a nazw

13
00:00:56,360 --> 00:01:02,420
tego generatora kupi BurgerSaga, wic buyBurgerSaga, tak

14
00:01:02,780 --> 00:01:12,140
jak tutaj, otrzyma akcj i uruchomi ten kod, ktry oczywicie zastpimy.

15
00:01:13,260 --> 00:01:14,100
Uszeregowane. Plik

16
00:01:14,110 --> 00:01:19,120
js w folderze actions, widzimy, e uywamy niestandardowej instancji

17
00:01:19,190 --> 00:01:27,940
Axios, wic sprbujmy j zaimportowa. Wrc do porzdku. plik js w folderze sagas i dodaj ten import na grze.

18
00:01:27,970 --> 00:01:32,750
Zaimportujemy rwnie efekt saga redux, wic dodajmy rwnie

19
00:01:32,980 --> 00:01:40,960
ten import, a poniewa planujemy rwnie wprowadzi pewne dziaania, ktre zasadniczo wywoaj niektre

20
00:01:40,960 --> 00:01:48,220
dziaania z tego miejsca, zaimportuj wszystkie dziaania z folderu moich dziaa.

21
00:01:48,370 --> 00:01:51,340
Dziki temu moemy rozpocz wprowadzanie akcji

22
00:01:51,340 --> 00:01:54,890
tutaj, wic wysyamy buyBurgerStart tutaj, teraz uywamy

23
00:01:54,910 --> 00:02:00,740
put, poniewa jestemy w sadze. W tym celu musimy upewni si,

24
00:02:00,740 --> 00:02:01,890
e buyBurgerStart

25
00:02:01,930 --> 00:02:08,610
jest rzeczywicie eksportowany, wic jeli przejd do indeksu. Plik js w folderze actions, powinienem upewni si,

26
00:02:08,650 --> 00:02:10,970
e z pliku zamwienia, buyBurgerStart jest

27
00:02:12,120 --> 00:02:18,780
eksportowany, i to samo bdzie istotne dla zakupuBurgerSuccess i nie powiodo si, e rwnie w kocu wysyam

28
00:02:18,780 --> 00:02:19,370
tutaj,

29
00:02:19,620 --> 00:02:27,750
wic upewnijmy si, e oba s eksportowane do zakupuBurgerFail i zakupuBurgerSuccess. Powrt do zamwienia.

30
00:02:27,750 --> 00:02:28,080
&nbsp;

31
00:02:28,080 --> 00:02:30,240
Plik js, folder sagas,

32
00:02:30,240 --> 00:02:35,340
mog wtedy wyda put (purchaseBurgerStart ()), tak jak to, jednak

33
00:02:35,340 --> 00:02:41,460
wykonane na tym obiekcie akcji, ktry czy wszystkie importowane akcje, wtedy otrzymam

34
00:02:41,460 --> 00:02:49,180
odpowied tutaj z postaci yield yield i tak jak poprzednio, zapakuj go w blok try,

35
00:02:49,220 --> 00:02:52,500
aby sprawdzi, czy to si uda.

36
00:02:52,700 --> 00:03:04,050
Wic przeniemy to tutaj i jeli to si uda, to przynios postawione dziaania. buyBurgerSuccess i przekazuj nazw danych odpowiedzi, a

37
00:03:04,050 --> 00:03:10,860
take widzimy w naszym starym kodzie, przekazalimy rwnie uporzdkowane

38
00:03:10,860 --> 00:03:18,260
dane, ktre otrzymalimy jako argument w naszym kreatorze dziaa tutaj.

39
00:03:18,360 --> 00:03:27,610
Teraz chodzi o to, aby po prostu przekaza to naszej sadze i uzyska dostp do naszej akcji, a wic

40
00:03:27,630 --> 00:03:32,190
przekaza dane dotyczce dziaania, ale naley to zrobi oczywicie, wic

41
00:03:32,190 --> 00:03:35,790
dane dotyczce dziaania bd przekazywane poza nazw danych,

42
00:03:35,820 --> 00:03:40,480
ktra bdzie kluczem ktry zosta utworzony w bazie firewall.

43
00:03:40,620 --> 00:03:47,790
Teraz jeszcze jedna rzecz, ktr powinnimy zrobi, tutaj, gdzie doczamy token i przekazujemy dane o

44
00:03:48,000 --> 00:03:55,810
zamwieniu na serwer, oba te oczywicie powinny by wydobyte z dziaania, ktre otrzymujemy, abymy mogli przekaza to.

45
00:03:55,980 --> 00:03:58,590
Dziki temu mamy skonfigurowany przypadek

46
00:03:58,620 --> 00:04:06,460
sukcesu, teraz mog zapa bd, a nastpnie wysa t akcj tutaj, jeli mamy bd,

47
00:04:06,660 --> 00:04:07,690
wic tutaj

48
00:04:07,680 --> 00:04:09,570
przynios postawione dziaania.

49
00:04:09,670 --> 00:04:16,470
buyBurgerFail i po prostu przelij bd do tego twrcy akcji.

50
00:04:16,470 --> 00:04:25,910
Dziki temu mog usun to wszystko, zapisa to, a nastpnie popracowa nad twrc akcji, aby uzyska dane i tokena do

51
00:04:25,960 --> 00:04:33,160
jednego zlecenia oraz da nam akcj, ktrej moemy sucha, abymy mogli wykona t sag, kiedy

52
00:04:33,160 --> 00:04:34,430
si pojawi.

53
00:04:34,590 --> 00:04:36,280
Do tego najpierw przejd

54
00:04:36,280 --> 00:04:40,020
do typw akcji, chcemy kupi burgera, pamitajcie o tym.

55
00:04:40,240 --> 00:04:42,310
Tak wic w

56
00:04:42,310 --> 00:04:53,350
typach akcji przejd teraz i wyeksportuj constBurger, ktry odbiera nazw jako identyfikator, tak,

57
00:04:53,350 --> 00:04:58,410
e w kolejnoci. js, mog usun cay

58
00:04:58,710 --> 00:05:05,520
stary kod tutaj i zamiast tego po prostu zwrci obiekt javascript, ktry

59
00:05:05,520 --> 00:05:13,200
jest akcj, ktr tworzymy, gdzie uywamy actionTypes. buyBurger i gdzie przekazujemy dane o zamwieniach, ktre otrzymujemy

60
00:05:13,230 --> 00:05:18,380
jako argument w kreatorze akcji i gdzie przekazujemy token, abymy nigdy nie

61
00:05:18,510 --> 00:05:23,160
musieli zmienia adnego kodu w naszej aplikacji, poniewa twrca akcji

62
00:05:23,160 --> 00:05:27,660
dziaa tak jak wczeniej, tylko teraz tworzy akcj zamiast uruchamia

63
00:05:27,810 --> 00:05:34,560
jaki kod, ale bdzie to robione w sadze, a eby odnie sukces, musimy stworzy obserwatora

64
00:05:34,560 --> 00:05:35,910
dla tego zakupuBurgerSaga.

65
00:05:35,910 --> 00:05:42,240
A wic w indeksie. Plik js w folderze sagas, utworz

66
00:05:42,780 --> 00:05:47,190
kolejn funkcj generatora, ktr nazw watchOrder, poniewa obejrzy

67
00:05:47,220 --> 00:05:50,580
on moje sagi zwizane z zamwieniami

68
00:05:50,640 --> 00:05:59,950
i tutaj, najpierw dodaj import, wic importuj co z. / kolejno i e co jest tym zakupem, ktre

69
00:05:59,950 --> 00:06:00,880
wanie stworzylimy.

70
00:06:01,030 --> 00:06:04,300
Tak wic tutaj w watchOrder,

71
00:06:04,420 --> 00:06:13,090
przynios TakeEvery typy akcji, jest to typ akcji BuyBurger, ktry wanie stworzylimy i chcemy wykona

72
00:06:13,300 --> 00:06:18,030
zakupBurgerSaga wygenerowan za kadym razem, kiedy to nastpi.

73
00:06:18,040 --> 00:06:24,460
Teraz wszystko jest powizane i powinnimy mc nadal robi zakupy, ale teraz korzystajc z naszej

74
00:06:24,460 --> 00:06:26,360
sagi, zobaczmy, czy tak jest.

75
00:06:27,180 --> 00:06:30,280
Zapiszmy wszystkie pliki i wrmy do

76
00:06:32,440 --> 00:06:34,770
naszej aplikacji, przeadujmy je i

77
00:06:34,960 --> 00:06:37,740
uwierzytelnijmy, wic po prostu si tutaj

78
00:06:37,810 --> 00:06:40,170
zaloguj, przecz si na logowanie.

79
00:06:40,250 --> 00:06:43,660
Pozwl mi teraz zbudowa maego burgera i

80
00:06:43,760 --> 00:06:46,160
zamw go teraz, kontynuuj, kontynuuj

81
00:06:46,310 --> 00:06:47,770
tutaj, wprowadmy dane.

82
00:06:49,970 --> 00:06:55,380
Po wprowadzeniu wszystkich, kliknij zamwienie i zakupBurger zostanie wykonany tutaj, nie

83
00:06:56,620 --> 00:06:58,660
widzimy nic innego, ale

84
00:06:58,660 --> 00:06:59,700
czy wiesz dlaczego?

85
00:07:01,320 --> 00:07:03,710
Poniewa przegapilimy jeden wany krok, stworzylimy

86
00:07:03,780 --> 00:07:11,590
generator zamwie zegarkw, ale nigdy nie uruchamiamy tego w indeksie. js, w ktrym tworzymy nasz

87
00:07:11,610 --> 00:07:23,010
sklep, musimy uruchomi uruchomienie middleware saga, a teraz uruchomi nasz nowo utworzony generator watchOrder.

88
00:07:23,130 --> 00:07:28,650
Przemy wic odnonik do watchOrder do tego wywoania funkcji run,

89
00:07:28,800 --> 00:07:31,750
zapiszmy to i sprbujmy ponownie.

90
00:07:31,770 --> 00:07:32,720
Nadal loguj

91
00:07:32,750 --> 00:07:36,050
si, wic pozwl mi szybko odbudowa tego

92
00:07:36,090 --> 00:07:45,350
burgera tutaj, kontynuuj i sprawd ponownie te same dane, a teraz sprbujmy jeszcze raz, pozwl mi klikn porzdek i

93
00:07:45,370 --> 00:07:46,620
wyglda to znacznie

94
00:07:46,630 --> 00:07:49,370
lepiej, teraz widzimy kupnoBurgerSuccess tutaj, wic

95
00:07:49,390 --> 00:07:54,090
wyglda na to, e zrobilimy faktycznie dokona udanego zakupu.

96
00:07:54,210 --> 00:07:55,410
To naprawd wspaniae,

97
00:07:55,410 --> 00:07:59,810
wic upewnijmy si, e otrzymujemy rwnie zamwienia z sagi, tak, e naprawd mamy

98
00:07:59,880 --> 00:08:06,710
tylko czystych twrcw akcji we wszystkich tych plikach twrcw akcji. W tym celu

99
00:08:06,720 --> 00:08:15,540
pjd do mojego zamwienia. Plik js w folderze sagas i tam utworz

100
00:08:15,540 --> 00:08:18,570
now funkcj generatora, a twrca

101
00:08:18,810 --> 00:08:23,890
zamwienia zosta nazwany fetchOrders, wic nazw sag tutaj FetchOrdersSaga,

102
00:08:24,080 --> 00:08:28,460
otrzymam moj akcj i skopiuj kod, ktry

103
00:08:28,470 --> 00:08:37,000
mam w akcji twrca do tej pory. W kocu wylemy tutaj fetchOrdersStart, fetchOrdersSuccess i fetchOrdersFail, wic powinnimy

104
00:08:37,020 --> 00:08:41,070
upewni si, e w indeksie. Plik js folderu

105
00:08:41,100 --> 00:08:51,300
dziaa, faktycznie eksportujemy wszystkie te akcje. Wic fetchOrdersSuccess, fetchOrdersStart i fetchOrdersFail, dodaem

106
00:08:51,300 --> 00:08:53,190
je wszystkie

107
00:08:53,310 --> 00:08:55,420
do eksportu.

108
00:08:55,740 --> 00:09:06,590
Wracajc do sagi filem, moemy zacz od zwykej odpowiedzi na wezwanie do wysania akcji.

109
00:09:06,620 --> 00:09:13,490
fetchOrdersStart, aby w zasadzie pokaza spinner. Nastpnie konfigurujemy parametry zapytania, w ktrych wyodrbniamy

110
00:09:13,490 --> 00:09:20,030
token i identyfikator uytkownika, aby uzyska do nich dostp, powinnimy oczekiwa, e dostan je

111
00:09:20,030 --> 00:09:29,290
z dziaania, ktre obsugujemy, wic dodajmy akcj. przed obiema. Nastpnie tworzymy danie HTTP i nauczysz si, jak to

112
00:09:29,380 --> 00:09:30,670
zrobi, przechowujc je w

113
00:09:31,520 --> 00:09:38,880
odpowiedzi lub w staej w ogle, bez wzgldu na to, jak to nazwae, uyj plonu, aby upewni si, e czekasz

114
00:09:39,730 --> 00:09:44,150
na jego zakoczenie i uyj bloku prbnego / catch rwnie obsugiwa bdy.

115
00:09:44,200 --> 00:09:52,780
Sprbuj wic speni moje proby o uzyskanie, upewnij si, e zabior to, ale te

116
00:09:53,940 --> 00:09:57,800
zapi wszelkie bdy, ktre moemy napotka.

117
00:09:58,050 --> 00:10:00,180
Najpierw jednak popracujmy nad przypadkiem sukcesu

118
00:10:00,360 --> 00:10:03,370
i wykorzystajmy kod, ktry mielimy w tym bloku.

119
00:10:03,420 --> 00:10:11,220
Wic tutaj, w naszym bloku try, wklej kod, ktry mielimy wczeniej w funkcji, tworzymy pust tablic, przechodzimy przez dane odpowiedzi

120
00:10:11,340 --> 00:10:15,460
i wciskamy j na t tablic, wic wszystko jest w porzdku.

121
00:10:15,600 --> 00:10:25,780
I na koniec wysalimy fetchOrdersSuccess tutaj lub tutaj, po prostu przynios akcje put. fetchOrdersSukces i przekazuj t tablic

122
00:10:25,870 --> 00:10:33,160
fetchedOrders, ktr wypenilimy. Po wykonaniu tego bloku, mamy t funkcjonalno dodan do

123
00:10:33,160 --> 00:10:41,770
naszej sagi, w przypadku strzaek musimy tylko wykona akcje put. fetchOrdersFail i przekazuj

124
00:10:41,950 --> 00:10:45,130
bd, to

125
00:10:45,280 --> 00:10:46,910
wszystko.

126
00:10:46,940 --> 00:10:55,450
Teraz, zrbmy to wszystko, jedn rzecz, ktr musz zrobi, mam dostp do danych res, c,

127
00:10:55,480 --> 00:10:57,640
to waciwie odpowied, wic

128
00:10:57,810 --> 00:11:01,990
uyjmy tej staej nazwy, zrestrukturyzuj kod i

129
00:11:02,190 --> 00:11:07,670
po tym, skoczmy, ruszamy to do naszej sagi, do FetchOrdersSaga.

130
00:11:08,100 --> 00:11:17,520
Teraz twrca akcji fetchOrders powinien tak naprawd po prostu stworzy nasz obiekt akcji, poniewa

131
00:11:17,520 --> 00:11:24,280
utworz nowy typ akcji jak zawsze, tym nowym typem akcji

132
00:11:24,390 --> 00:11:30,340
bd fetchOrders, wic wyeksportujmy sta o nazwie fetchOrders.

133
00:11:30,410 --> 00:11:37,880
Uyjemy tego rwnie jako identyfikatora acucha, a nastpnie w zamwieniu twrcy akcji. js, ustawi

134
00:11:37,970 --> 00:11:43,730
typ actionTypes. FETCH_ORDERS i przekazuj token oraz identyfikator

135
00:11:43,970 --> 00:11:49,250
uytkownika, poniewa wyodrbnimy oba elementy z akcji w naszej sadze.

136
00:11:49,250 --> 00:11:56,020
Wreszcie powinnimy sucha fetchOrders, do tego typu akcji w indeksie. Plik js w folderze

137
00:11:56,140 --> 00:12:08,540
sagas, tutaj, gdy mamy watchOrder, wydam takeEvery actionTypes. FETCH_ORDERS, a nastpnie uyj mojej nowo utworzonej fetchOrdersSaga, wic to jest

138
00:12:08,600 --> 00:12:10,270
to, co chc

139
00:12:10,490 --> 00:12:19,600
wykona za kadym razem, gdy wykryjemy ten typ akcji. Zachowajmy to wszystko, a przy tym powinnimy mie

140
00:12:19,600 --> 00:12:26,530
skonfigurowane miejsce, w ktrym moemy ponownie zaadowa aplikacj, jestemy automatycznie zalogowani i

141
00:12:26,800 --> 00:12:30,500
odwiedzamy nasze zamwienia, a to dziaa,

142
00:12:30,520 --> 00:12:32,350
teraz przez sag.

