1
00:00:02,360 --> 00:00:09,290
Bem-vindo a este mdulo de bnus. Neste curso, obviamente usamos muito redux, pois

2
00:00:09,380 --> 00:00:17,120
 parte integrante de aplicativos de reao. Em nosso construtor de hambrgueres, tambm o usamos e,

3
00:00:17,120 --> 00:00:24,890
ao trabalhar com o redux, tambm precisamos lidar com o problema, entre aspas, de manipular aes assncronas, como chegar

4
00:00:24,890 --> 00:00:25,980
a um servidor.

5
00:00:26,180 --> 00:00:33,140
Ns lidamos com este problema usando o redux-thunk neste curso, o redux-thunk apenas para traz-lo de volta 

6
00:00:33,140 --> 00:00:40,510
memria  um pacote que nos permite criar criadores de ao onde ns executamos o cdigo assncrono e ento enviamos

7
00:00:40,520 --> 00:00:42,520
outras aes est pronto e

8
00:00:42,530 --> 00:00:47,690
no h nada de errado com essa abordagem, isso  realmente importante para mim.

9
00:00:47,930 --> 00:00:55,220
Neste mdulo vou apresentar uma alternativa que no  necessariamente melhor ou pior,  apenas uma

10
00:00:55,250 --> 00:00:58,600
alternativa que voc pode gostar mais, mas

11
00:00:58,610 --> 00:01:07,130
que voc tambm pode no gostar mais, redux saga. Agora o redux saga  um pacote que segue uma abordagem diferente

12
00:01:07,130 --> 00:01:12,440
de trabalhar com cdigo assncrono e no o mistura com o ato de despachar aes.

13
00:01:12,440 --> 00:01:16,840
Agora vamos dar uma olhada em como funciona e qual o melhor lugar para

14
00:01:16,910 --> 00:01:23,080
pratic-lo do que em nosso projeto de construtor de hambrguer, que  onde j temos toda a lgica, certo?

15
00:01:23,180 --> 00:01:24,520
Ento vamos mergulhar nisso

16
00:01:24,620 --> 00:01:27,430
e deixar-me mostrar como funciona a saga do redux.

