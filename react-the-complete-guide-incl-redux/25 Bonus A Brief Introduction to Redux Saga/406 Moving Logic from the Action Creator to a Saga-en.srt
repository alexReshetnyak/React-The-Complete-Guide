1
00:00:02,150 --> 00:00:07,760
So we worked a lot of sagas but I would assume that it's still a bit confusing,

2
00:00:07,850 --> 00:00:09,850
it'll soon get clearer.

3
00:00:09,860 --> 00:00:13,020
Let's go to the auth.js file in the actions folder,

4
00:00:13,100 --> 00:00:16,840
there we have our logout actions creator

5
00:00:17,030 --> 00:00:20,080
and here, I want to make a very important change.

6
00:00:20,210 --> 00:00:25,810
I'm going to take all the local storage code and I'm going to comment it out here, instead here,

7
00:00:25,940 --> 00:00:28,010
I really just want to dispatch an action,

8
00:00:28,020 --> 00:00:30,530
I want to create an action, nothing else.

9
00:00:30,530 --> 00:00:35,990
I don't want to have any side effects in there anymore because I want to handle these with redux saga

10
00:00:36,010 --> 00:00:36,760
now.

11
00:00:37,190 --> 00:00:45,270
So what I will do is I will dispatch something here and I will create a new action type for this,

12
00:00:45,290 --> 00:00:54,290
so besides auth logout, I'll export a new constant in the action types folder which I'll name AUTH_INITIATE_LOGOUT

13
00:00:54,740 --> 00:00:59,220
because it's kind of the step before we really logout,

14
00:01:00,100 --> 00:01:01,390
there's a typo.

15
00:01:01,730 --> 00:01:08,070
This will again as always receive the same identifier as a string as we named the constant

16
00:01:08,320 --> 00:01:17,080
and now I will go back to the auth.js actions file and here, I will dispatch action types AUTH_INITIATE_LOGOUT

17
00:01:17,080 --> 00:01:20,020
and not auth logout anymore,

18
00:01:20,080 --> 00:01:27,290
so whenever I dispatch logout, I will now simply initiate the logout instead.

19
00:01:27,640 --> 00:01:35,530
Now the goal is to listen to this newly created action creator and execute our logout saga generator

20
00:01:35,560 --> 00:01:43,900
whenever we detect this initiate logout call. For that, I'll create a new file in the sagas folder, I'll

21
00:01:44,100 --> 00:01:45,640
name it index.js,

22
00:01:45,670 --> 00:01:50,640
you can also name root, saga or whatever you want. In index.js,

23
00:01:50,720 --> 00:01:59,520
I will simply import something from the auth saga file and that something of course is the only saga

24
00:01:59,520 --> 00:02:01,910
I got so far, the logout saga

25
00:02:02,010 --> 00:02:07,270
but I also will import something from this redux saga package.

26
00:02:07,270 --> 00:02:15,820
So from redux saga, I will import takeEvery,

27
00:02:15,960 --> 00:02:25,320
that's another useful function we can use and takeEvery will allow us to listen to certain actions and

28
00:02:25,320 --> 00:02:27,350
do something when they occur,

29
00:02:27,570 --> 00:02:29,470
now how do we use it?

30
00:02:29,550 --> 00:02:36,450
We first of all create another generator, so a function with this star after the function keyword and

31
00:02:36,450 --> 00:02:37,420
I'll name it

32
00:02:37,480 --> 00:02:46,130
watchAuth. Now in here I will yield something as we have to do in generators, basically say execute this

33
00:02:46,120 --> 00:02:53,610
and wait for it to finish and then takeEvery, the function I import and to takeEvery, I'll now pass the action I

34
00:02:53,630 --> 00:02:55,010
want to listen to,

35
00:02:55,210 --> 00:03:03,410
so I'll also imports that, I'll import everything as action types from

36
00:03:03,430 --> 00:03:09,820
and now let's go into the actions folder into the action types file and here I will listen to every action

37
00:03:10,030 --> 00:03:12,510
of type initiate logout.

38
00:03:13,060 --> 00:03:20,130
Now takeEvery takes a second argument, this second argument is the generator, the saga

39
00:03:20,140 --> 00:03:21,490
we then want to execute

40
00:03:21,490 --> 00:03:26,200
when this action occurs and that would be the logout saga.

41
00:03:26,200 --> 00:03:32,500
Now don't execute the function, so don't use parentheses here, just pass a reference to it.

42
00:03:32,650 --> 00:03:38,910
What this will do is that whenever we execute this generator, we will basically set up a listener to

43
00:03:38,920 --> 00:03:45,610
in this case auth initiate logout and then execute logout saga whenever that appears.

44
00:03:46,060 --> 00:03:52,300
So now we can go to the index.js file here and we no longer want to run the logout saga at the beginning

45
00:03:52,750 --> 00:03:56,630
but instead run the generator where we set up this watcher.

46
00:03:56,890 --> 00:04:04,250
So in index.js, I will no longer import logout saga from sagas auth, instead from sagas

47
00:04:04,270 --> 00:04:08,430
/index which I can omit due to our set up here,

48
00:04:08,470 --> 00:04:15,400
I want to import our newly created watchAuth function and therefore of course, I'll have to add the export

49
00:04:15,410 --> 00:04:16,780
keyword to it.

50
00:04:16,780 --> 00:04:24,250
Now with that, I can import watchAuth and I want to run watchAuth, setting up the watcher right at the

51
00:04:24,250 --> 00:04:26,570
start of our application.

52
00:04:26,590 --> 00:04:29,630
Now let's go back to our application and see if that works

53
00:04:29,630 --> 00:04:38,800
now, if I reload it, everything looks as it did before, we see one important change though, auth initiate

54
00:04:38,800 --> 00:04:40,450
logout is dispatched

55
00:04:40,450 --> 00:04:46,900
and that makes sense because we're now dispatching this in our logout action creator which we still

56
00:04:46,900 --> 00:04:47,920
call in our

57
00:04:47,950 --> 00:04:50,210
we try to sign you in code.

58
00:04:50,530 --> 00:04:54,340
So now we're already using the new action creator

59
00:04:54,670 --> 00:05:02,800
and since we also see that auth logout was dispatched thereafter, we see that our saga is working because

60
00:05:02,800 --> 00:05:10,390
we're no longer dispatching this from anywhere in our auth action creator, this action type of logout

61
00:05:10,480 --> 00:05:14,610
isn't used in here anymore, it's auth initiate logout instead,

62
00:05:14,880 --> 00:05:17,000
so our saga is already working.

63
00:05:17,050 --> 00:05:20,260
Now let's confirm this by really signing in here

64
00:05:23,130 --> 00:05:25,130
and then hitting the logout button

65
00:05:25,350 --> 00:05:29,530
and we did sign out and now let's now check the application tab

66
00:05:32,300 --> 00:05:36,570
to see if in the local storage, we still have a token and we don't,

67
00:05:36,650 --> 00:05:37,470
it's empty.

68
00:05:37,580 --> 00:05:39,060
So indeed we did clear it,

69
00:05:39,110 --> 00:05:41,270
we did call remove item,

70
00:05:41,330 --> 00:05:44,360
so redux saga did work here.

71
00:05:44,380 --> 00:05:52,730
Now let's dive deeper to make this more clear and to replace all our side effects in the action creators

72
00:05:52,970 --> 00:05:55,480
with saga generators instead.

