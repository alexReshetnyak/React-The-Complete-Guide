1
00:00:02,140 --> 00:00:10,000
Ento vamos continuar nosso caminho para um mundo focado em criadores de ao pura, terceirizando o construtor de hambrguer e o

2
00:00:10,180 --> 00:00:13,630
cdigo do criador de aes em sagas Vamos comear

3
00:00:13,870 --> 00:00:15,770
com o construtor de hambrguer,

4
00:00:15,940 --> 00:00:20,290
se analisarmos o arquivo do criador de aes,  muito simples, temos

5
00:00:20,290 --> 00:00:23,390
um Muitos criadores de ao pura j esto

6
00:00:23,440 --> 00:00:27,630
l, ento criadores de ao que apenas fazem isso, criam uma ao.

7
00:00:27,940 --> 00:00:35,050
Mas ns temos um criador de aes initIngredients que realmente executa algum cdigo assncrono que executa um efeito colateral, ento

8
00:00:35,050 --> 00:00:36,390
para isso, eu vou

9
00:00:36,400 --> 00:00:45,010
criar um novo arquivo na pasta sagas BurgerBuilder. js. L, eu vou criar minha saga

10
00:00:45,030 --> 00:00:49,900
initIngredients que ser exportada funo geradora, adicionar saga aps o

11
00:00:50,780 --> 00:00:59,840
nome, vamos comear a nossa ao l e agora eu vou pegar o cdigo de initIngredients e coloc-lo

12
00:01:00,710 --> 00:01:02,790
no BurgerBuilder. arquivo

13
00:01:02,800 --> 00:01:04,160
js aqui.

14
00:01:04,930 --> 00:01:06,830
Agora ns usamos axios aqui, mas

15
00:01:06,950 --> 00:01:12,950
se voltarmos para o arquivo do burger builder na pasta actions, vemos que na verdade importamos axios da

16
00:01:13,040 --> 00:01:18,930
nossa instncia customizada, de modo que usamos nossa instncia de axios customizada do arquivo de pedidos axios.

17
00:01:19,040 --> 00:01:25,340
Ento eu vou usar a mesma importao aqui no meu arquivo saga porque eu obviamente quero usar a

18
00:01:25,340 --> 00:01:35,340
mesma instncia de axios aqui, isso significa que tambm podemos nos livrar dele no BurgerBuilder. arquivo js na pasta de aes.

19
00:01:35,490 --> 00:01:41,910
Agora de volta ao BurgerBuilder. arquivo js na pasta sagas, ns importamos

20
00:01:41,970 --> 00:01:48,720
axios, agora se dermos uma olhada no auth. js arquivo, vemos que provavelmente tambm deve importar colocar

21
00:01:48,770 --> 00:01:53,790
de efeitos saga redux para que possamos enviar aes de dentro de nossa saga.

22
00:01:53,820 --> 00:02:00,610
Ento deixe-me adicionar esta importao aqui tambm e com isso, eu vou usar a mesma abordagem como

23
00:02:00,620 --> 00:02:08,060
fizemos anteriormente, eu vou armazenar a resposta aqui na resposta constante e usar o rendimento para esperar que ele

24
00:02:08,090 --> 00:02:11,190
seja retornado e automaticamente Obter os dados que

25
00:02:11,200 --> 00:02:19,190
esta promessa nos d, uma vez que resolve e tambm lidar com uma falha, eu vou envolv-lo com tente.

26
00:02:19,520 --> 00:02:24,680
Ento, vou tentar obter a minha constante, minha resposta aqui, devo dizer, mas

27
00:02:24,820 --> 00:02:32,110
se isso falhar, bem, ento vamos entrar no bloco catch aqui e pegar qualquer erro que possamos ter

28
00:02:34,370 --> 00:02:37,350
e, em seguida, manipul-lo no bloco depois disso.

29
00:02:37,670 --> 00:02:41,810
Agora, as nicas coisas que fao  enviar algo, ento,

30
00:02:41,810 --> 00:02:49,640
no mundo da saga, fazemos isso produzindo uma ligao e o que colocamos , naturalmente, nosso criador de

31
00:02:49,640 --> 00:02:57,770
aes chama aqui, onde passamos os dados que recebemos. Para isso, eu precisarei import-los, ento importarei tudo como aes

32
00:02:57,830 --> 00:03:00,340
e agora vamos para a pasta

33
00:03:00,350 --> 00:03:05,610
actions e l para o arquivo de ndice, que tambm podemos importar exatamente

34
00:03:05,630 --> 00:03:13,640
assim, apenas referindo-se  pasta como um todo . E ento eu posso dar aes put e agora

35
00:03:13,850 --> 00:03:15,820
setIngredients  necessrio aqui,

36
00:03:15,830 --> 00:03:22,520
por isso devemos ter certeza que no ndice. js arquivo na pasta actions, setIngredients  realmente fornecido,

37
00:03:22,550 --> 00:03:23,990
atualmente no , ento

38
00:03:24,230 --> 00:03:32,480
vamos adicion-lo como uma exportao do arquivo burger builder l, setIngredients. Ns tambm temos fetchIngredients falhou

39
00:03:32,490 --> 00:03:34,240
aqui, devemos

40
00:03:34,410 --> 00:03:38,360
tambm exportar isso de burger

41
00:03:38,460 --> 00:03:47,240
builder, ento vamos adicionar isso tambm. Com estas duas exportaes adicionadas, podemos voltar para a nossa saga e despachar

42
00:03:47,250 --> 00:03:50,230
aes definir ingredientes, passar os dados de resposta, whoops

43
00:03:51,070 --> 00:03:53,010
desculpe-me, aqui  claro para transmitir

44
00:03:53,110 --> 00:04:01,300
os dados de resposta ou no caso de erro, colocar aes. fetchIngredientsFailed, certifique-se de tambm executar isso,

45
00:04:01,330 --> 00:04:02,740
ento voc

46
00:04:02,730 --> 00:04:07,310
pode remover o cdigo catch ento.

47
00:04:07,320 --> 00:04:09,750
Esta  a nossa

48
00:04:10,090 --> 00:04:17,890
saga recm-criada, vamos agora voltar ao ndice. js l embaixo e vamos registr-lo, e para isso, vou exportar um

49
00:04:17,900 --> 00:04:23,550
novo gerador aqui, que eu vou nomear watchBurgerBuilder para agrupar todo o cdigo relacionado ao burger builder.

50
00:04:23,710 --> 00:04:30,280
Tecnicamente, poderamos adicionar aqui tambm e poderamos ter uma grande funo de relgio ou gerador, mas eu gostaria

51
00:04:30,280 --> 00:04:31,770
de ter vrios e,

52
00:04:32,350 --> 00:04:35,650
em seguida, eu tambm vou importar minhas sagas, aqui

53
00:04:35,680 --> 00:04:40,850
 apenas uma, mas poderia ser mais. / BurgerBuilder e aquela

54
00:04:41,190 --> 00:04:45,080
saga que temos,  claro, 

55
00:04:45,430 --> 00:04:47,540
a saga initIngredients.

56
00:04:47,800 --> 00:04:49,660
Ento, no watchBurgerBuilder, eu produzirei

57
00:04:49,870 --> 00:04:50,980
tipos de ao

58
00:04:51,040 --> 00:04:54,230
takeEvery e agora eu preciso de um novo

59
00:04:54,430 --> 00:05:00,460
tipo de ao que ns realmente enviamos no arquivo do burger builder no criador da

60
00:05:00,460 --> 00:05:02,770
ao ou na pasta actions.

61
00:05:02,860 --> 00:05:08,890
Portanto, a ao que criamos aqui agora, porque eu no quero mais retornar o dispatch e

62
00:05:08,890 --> 00:05:12,550
executar o cdigo assncrono, eu quero apenas criar uma ao.

63
00:05:12,820 --> 00:05:18,690
Ento, vamos criar um novo tipo de ao para isso, vou criar uma constante aqui

64
00:05:18,690 --> 00:05:20,820
na pasta de tipos de

65
00:05:20,850 --> 00:05:25,310
ao que eu vou chamar INIT_INGREDIENTS, assim como o criador de

66
00:05:25,310 --> 00:05:31,890
aes  chamado ento, INIT_INGREDIENTS, assim e no criador de ao, em o arquivo do construtor do

67
00:05:32,250 --> 00:05:38,710
hambrguer na pasta actions, configurarei o tipo como actionTypes. INIT_INGREDIENTS.

68
00:05:38,740 --> 00:05:41,350
Portanto, esse  o tipo de ao

69
00:05:41,410 --> 00:05:49,330
ao qual voc deseja ouvir, portanto, no ndice. arquivo js, eu vou ouvir actionTypes. INIT_INGREDIENTS e eu executaremos o

70
00:05:49,410 --> 00:05:51,990
initIngredientsSaga sempre que isso ocorrer.

71
00:05:52,210 --> 00:06:00,100
O passo final  tambm chamar esta funo geradora recm-criada aqui do nosso ndice. js no nvel raiz do nosso aplicativo, por

72
00:06:00,100 --> 00:06:07,280
assim dizer, l onde ns temos o saga middleware run watch off, eu tambm

73
00:06:07,390 --> 00:06:09,640
adicionarei saga middleware run

74
00:06:09,850 --> 00:06:16,270
e agora vamos importar isso da nossa pasta sagas para ver o

75
00:06:16,550 --> 00:06:21,540
burger builder, essa saga aqui tambm deve ser executado no

76
00:06:21,580 --> 00:06:25,650
incio sem parnteses aqui. Vamos salvar tudo isso e

77
00:06:26,110 --> 00:06:26,920
isso parece

78
00:06:26,920 --> 00:06:30,440
bom, ns ainda inicializamos nossos ingredientes aqui com sucesso.

79
00:06:30,550 --> 00:06:37,060
Se eu recarregar esse aplicativo mais uma vez, veremos que setIngredients  despachado aqui

80
00:06:37,060 --> 00:06:45,720
e ns configuramos os ingredientes e isso funciona porque temos nossa saga de construtores de hambrgueres onde produzimos setIngredients.

81
00:06:45,880 --> 00:06:53,610
Se eu comentar aqui, voc ver que temos uma tela de carregamento infinita porque nunca definimos os ingredientes para

82
00:06:53,700 --> 00:06:57,570
que possamos dizer que nossa saga est funcionando corretamente aqui.

83
00:06:57,780 --> 00:06:59,070
Deixe-me coment-lo de volta.

