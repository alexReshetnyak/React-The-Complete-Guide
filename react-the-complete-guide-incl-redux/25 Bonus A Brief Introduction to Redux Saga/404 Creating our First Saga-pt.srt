1
00:00:02,180 --> 00:00:05,520
Ento eu falei muito sobre como podemos usar o redux saga, vamos

2
00:00:05,720 --> 00:00:11,540
agora us-lo para ter uma ideia de como ele realmente funciona. Com o redux saga, voc cria

3
00:00:11,570 --> 00:00:21,050
as chamadas sagas que so essencialmente funes que voc executa em certas aes e que lidam com toda a

4
00:00:21,130 --> 00:00:28,460
lgica do efeito colateral e um efeito colateral simplesmente  como acessar o armazenamento local,

5
00:00:28,460 --> 00:00:36,280
entrar em um servidor, talvez mudando a rota ou executando um temporizador como este aqui.

6
00:00:36,290 --> 00:00:41,930
Estes so todos efeitos colaterais porque eles no manipulam diretamente seu repositrio redux, eles podem

7
00:00:41,930 --> 00:00:47,330
fazer algo que leva a um estado diferente que no final  armazenado em seu

8
00:00:47,660 --> 00:00:51,450
repositrio redux, mas eles no so diretamente consumidos pelo redutor.

9
00:00:51,890 --> 00:00:56,700
Ento, para isso, eu vou criar uma nova subpasta na pasta de armazenamento e vou nome-la sagas, o

10
00:00:56,870 --> 00:00:59,970
nome  com voc, mas isso  algo que voc ver bastante.

11
00:01:00,170 --> 00:01:05,290
Agora, em sagas, vou criar arquivos diferentes para os diferentes tipos de sagas e

12
00:01:05,300 --> 00:01:08,800
por que no comeamos com a saga auth aqui.

13
00:01:08,990 --> 00:01:18,170
Ento eu vou criar um novo arquivo, auth. js na pasta sagas, agora aqui, eu quero criar minhas redux

14
00:01:18,260 --> 00:01:22,100
sagas, a questo  como criar uma saga, o

15
00:01:22,100 --> 00:01:25,010
que  realmente? Em seu ncleo, 

16
00:01:25,040 --> 00:01:31,280
uma espcie de funo e eu estou dizendo, porque h uma pequena reviravolta que eu vou mostrar

17
00:01:31,280 --> 00:01:32,280
em breve.

18
00:01:32,660 --> 00:01:35,900
Ento, primeiro de tudo vamos criar uma funo

19
00:01:36,100 --> 00:01:39,490
aqui, eu vou usar a palavra-chave function e

20
00:01:39,530 --> 00:01:46,820
eu vou nomear vamos dizer que queremos substituir a saga por logout, onde ns a limpamos no armazenamento

21
00:01:46,850 --> 00:01:52,580
local, ento nenhum cdigo assncrono l, apenas algum efeito colateral que acontece sincronamente, na verdade.

22
00:01:52,730 --> 00:01:54,550
Ento, eu vou nomear a

23
00:01:54,710 --> 00:01:55,880
funo aqui logout,

24
00:01:55,880 --> 00:02:01,880
agora nessa funo, eu posso aceitar um argumento que eu irei novamente obter automaticamente, eu

25
00:02:01,880 --> 00:02:04,370
irei mostrar-lhe como conectar essas sagas,

26
00:02:04,370 --> 00:02:07,020
o argumento seria a ao ento a

27
00:02:07,070 --> 00:02:12,820
ao que foi despachado porque as sagas esto relacionadas a aes, volto a isso.

28
00:02:12,860 --> 00:02:18,660
Agora eu disse que isso no seria uma funo, eu disse tipo uma funo, vamos

29
00:02:19,070 --> 00:02:25,350
adicionar uma estrela depois da palavra-chave da funo e essa estrela aqui  importante, no 

30
00:02:25,580 --> 00:02:28,820
parte do nome da funo, ela est realmente

31
00:02:28,820 --> 00:02:34,480
transformando essa funo em uma assim chamada gerador. Os geradores so recursos de javascript

32
00:02:34,480 --> 00:02:42,830
de prxima gerao, que podem ser executados de forma incremental, para que voc possa cham-los e no sejam

33
00:02:42,830 --> 00:02:49,490
executados do incio ao fim imediatamente, mas voc pode pausar durante a execuo da funo,

34
00:02:49,490 --> 00:02:56,780
por exemplo, aguardar a concluso do cdigo assncrono e  exatamente disso que o redux saga

35
00:02:56,780 --> 00:02:57,760
se aproveita.

36
00:02:57,950 --> 00:03:03,470
E se voc tiver cdigo sncrono, bem, ento voc pode simplesmente execut-lo do comeo ao fim

37
00:03:03,470 --> 00:03:06,860
imediatamente, eu vou te mostrar como ambos funcionam neste mdulo.

38
00:03:06,860 --> 00:03:11,600
Ento ns temos essa funo de gerador aqui, agora no logout eu obviamente

39
00:03:11,600 --> 00:03:17,870
quero fazer o mesmo que fao com meu criador de aes de logout, ento vou copiar as

40
00:03:17,870 --> 00:03:23,900
trs chamadas de armazenamento local aqui e col-las no meu gerador de saga de logout aqui.

41
00:03:23,900 --> 00:03:26,780
Agora voc j v o meu IDE no gosta

42
00:03:26,860 --> 00:03:33,710
disso, ele est dizendo que este gerador no tem uma funo de rendimento ou um rendimento, qualquer palavra-chave de rendimento, agora vamos cuidar

43
00:03:33,770 --> 00:03:36,800
disso e eu vou explicar o que o rendimento faz.

44
00:03:36,800 --> 00:03:39,460
Por enquanto estamos limpando o armazenamento local aqui,

45
00:03:39,710 --> 00:03:48,260
agora com o armazenamento local removendo itens aqui, podemos dar uma olhada na autenticao. criador de ao js e vemos que l

46
00:03:48,260 --> 00:03:54,410
no final, retornamos esse objeto de ao que essencialmente levaria a

47
00:03:54,410 --> 00:03:55,860
isso ser despachado.

48
00:03:56,210 --> 00:04:03,620
Ento, ns queremos fazer o mesmo aqui e em uma saga, ns realmente fazemos isso com uma funo especial que

49
00:04:03,620 --> 00:04:05,870
obtemos do pacote que acabamos de

50
00:04:06,170 --> 00:04:16,610
instalar, ento eu importarei algo da saga do redux e realmente do subpackage de efeitos. L, eu quero importar a funo put, agora colocar no

51
00:04:16,620 --> 00:04:24,960
final s vai despachar uma nova ao, ento vamos executar colocar aqui e agora vou

52
00:04:25,480 --> 00:04:32,370
simplesmente copiar a mesma definio de ao que usei no action criador, com

53
00:04:32,370 --> 00:04:36,220
tipos de ao de logout, ento eu

54
00:04:36,220 --> 00:04:40,830
vou colocar essa ao.  claro que para isso

55
00:04:40,840 --> 00:04:49,320
funcionar, tambm preciso importar meu tipo de ao, ento importarei tudo como tipos de ao de aes como essa.

56
00:04:49,330 --> 00:04:57,780
Ento, da mesma forma que fizemos na autenticao. arquivo js e l do arquivo de tipos de ao.

57
00:04:58,020 --> 00:05:04,170
Ento, agora estamos colocando isso e ainda assim eu tenho todos esses erros porque esta no

58
00:05:04,170 --> 00:05:06,580
 uma funo normal, mas um

59
00:05:06,690 --> 00:05:09,150
gerador, e em um gerador, devemos

60
00:05:09,360 --> 00:05:17,060
prefixar, prefixar cada passo que executamos com a palavra-chave yield. Isso significa simplesmente que essa etapa deve ser executada e,

61
00:05:17,060 --> 00:05:19,380
em seguida, ela aguardar que ela

62
00:05:19,380 --> 00:05:25,030
termine, portanto, se fosse uma ao assncrona, ela no continuaria antes que a etapa fosse

63
00:05:25,110 --> 00:05:26,180
concluda, o mesmo aqui.

64
00:05:26,400 --> 00:05:34,200
Ento ns produzimos todos estes passos aqui e agora executaremos este passo, este passo, este passo

65
00:05:34,200 --> 00:05:36,590
e finalmente chamaremos de colocar,

66
00:05:36,600 --> 00:05:41,750
o que no final dos bastidores apenas despachar esta ao.

67
00:05:41,910 --> 00:05:47,950
Agora esta  uma saga de redux e parece uma maneira mais complicada de criar um criador de ao, certo?

68
00:05:48,000 --> 00:05:54,660
Bem, a ideia  ter sua rea separada no aplicativo onde voc lida com isso,

69
00:05:54,660 --> 00:06:01,860
ns temos nosso gerador de logout e agora s precisamos conect-lo  nossa loja para poder us-lo.

70
00:06:01,860 --> 00:06:04,960
Agora vamos ver como isso funciona na prxima aula.

