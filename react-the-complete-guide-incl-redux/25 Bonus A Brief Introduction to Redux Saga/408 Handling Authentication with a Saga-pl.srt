1
00:00:02,130 --> 00:00:08,590
W ostatnim wykadzie kontynuowalimy przenoszenie treci z naszego pliku twrcw akcji do naszej autorskiej sagi.

2
00:00:08,670 --> 00:00:17,610
Kontynuujmy to i przejdmy do naszego auth. Plik js w folderze actions, tutaj, gdzie

3
00:00:17,610 --> 00:00:27,720
naprawd si uwierzytelniamy, wysyamy auth start, a my w kocu mamy nasze danie Ajax tutaj, gdzie staramy

4
00:00:27,810 --> 00:00:35,640
si dobrze uwierzytelni i gdzie po prostu prbujemy si zarejestrowa lub zalogowa, wic

5
00:00:35,640 --> 00:00:43,380
celem byoby teraz poradzi sobie z sag. Aby to zrobi, oczywicie stwrz now

6
00:00:43,380 --> 00:00:53,440
funkcj generatora, wic funkcj z gwiazd i moemy nazwa t authSag lub uwierzytelniUserSaga, nazwijmy

7
00:00:53,440 --> 00:00:56,180
j authUserSaga. Tam te dostaj

8
00:00:56,180 --> 00:01:01,110
moje dziaanie i teraz moemy ponownie uruchomi kod tutaj.

9
00:01:01,250 --> 00:01:09,200
Teraz w naszym kreatorze akcji zrobilimy polecenie auth start, a nastpnie wysalimy danie HTTP, pozwl mi skopiowa

10
00:01:09,200 --> 00:01:14,210
cay kod do sagi i zastpmy go krok po kroku.

11
00:01:14,390 --> 00:01:18,610
Przede wszystkim nauczye si, e nie nazywamy takich wysyek

12
00:01:18,860 --> 00:01:21,310
w sadze, zamiast tego wzywamy

13
00:01:21,320 --> 00:01:30,830
put, wic pierwsz rzecz, ktr zrobimy, jest poddanie si i dotarcie do dziaa, w ktrych teraz chc uy mojego auth startu

14
00:01:30,920 --> 00:01:33,140
akcja, do tego przejdmy do

15
00:01:33,140 --> 00:01:34,130
indeksu. Plik

16
00:01:34,150 --> 00:01:41,060
js w folderze actions, upewnijmy si, e authStart jest tam eksportowany, abymy mogli go zaimportowa do

17
00:01:41,060 --> 00:01:41,360
innych

18
00:01:41,360 --> 00:01:49,850
plikw, dodaem ten eksport teraz iz powrotem do auth. Plik js w folderze saga,

19
00:01:49,850 --> 00:01:58,020
teraz mog korzysta z dziaa. authStart tutaj i wykonaj t funkcj, aby uzyska wywoywan akcj.

20
00:01:58,040 --> 00:02:00,570
To pierwsza rzecz, ktr tutaj umiecilimy.

21
00:02:00,770 --> 00:02:05,900
Nastpnie tworzymy nasze dane uwierzytelniajce, w ktrych uywamy adresu e-mail i

22
00:02:05,900 --> 00:02:13,330
hasa, i tak dalej, teraz tutaj powinienem wyodrbni wiadomo e-mail z akcji i hasa z akcji,

23
00:02:13,330 --> 00:02:21,280
co oznacza, e musimy upewni si, e za kadym razem, gdy wykonywana jest authUserSaga, akcja faktycznie zawiera

24
00:02:21,730 --> 00:02:28,350
te informacje, zapewnimy to w nastpnym kroku, zanim to zrobimy, przejdmy do tego kodu tutaj.

25
00:02:28,540 --> 00:02:31,290
Skonfigurowalimy adres URL, a nastpnie mamy tam

26
00:02:31,480 --> 00:02:35,830
opcj sprawdzania, a take ustawi akcj. isSignUp z czekiem.

27
00:02:35,830 --> 00:02:40,060
Nastpnie mamy nasze danie HTTP, gdzie uywamy

28
00:02:40,110 --> 00:02:44,190
axios, teraz w auth. Plik js importujemy aksiosa z

29
00:02:44,200 --> 00:02:46,450
osi, nie uywamy naszej niestandardowej instancji.

30
00:02:46,450 --> 00:02:52,730
Przejdmy wic do naszego pliku sagi i po prostu dodajmy tam rwnie import, importujmy aksje z osi.

31
00:02:54,040 --> 00:02:57,530
Teraz w naszej sadze ju nie popeniamy bdu,

32
00:02:57,760 --> 00:03:04,830
ale teraz zrobimy co wanego, naprawd zmieni sposb, w jaki uywamy tego obiecujcego postu, ktry

33
00:03:04,940 --> 00:03:10,490
nas zwraca, teraz otrzymujemy odpowied, a potem robimy co z odpowiedzi .

34
00:03:10,510 --> 00:03:16,780
Zmieni to, utworz now sta, odpowied i przypisz post Axios, byoby to jednak niepoprawne,

35
00:03:16,840 --> 00:03:22,750
poniewa post axios zwraca obietnic, ale teraz dodam sowo yield, ktre tak samo

36
00:03:23,140 --> 00:03:28,990
jak notatka nie zostanie ujawnione przez redux saga, ale s to funkcje javascript

37
00:03:29,080 --> 00:03:32,200
nastpnej generacji zwizane z t koncepcj generatora.

38
00:03:32,200 --> 00:03:34,210
Teraz, w ten sposb,

39
00:03:34,210 --> 00:03:37,360
nie zwrci to ju obietnicy, ale poczekaj,

40
00:03:37,480 --> 00:03:45,330
a ta obietnica rozwie lub odrzuci, a nastpnie zapamita to, co otrzymamy w tej staej, wic nie

41
00:03:45,520 --> 00:03:48,960
musz ju czy si z tym tutaj.

42
00:03:49,090 --> 00:03:57,600
Oznacza to, e ju nie potrzebuj tutaj, mog to usun, wkrtce te usuniemy catch i oczywicie oznacza

43
00:03:57,600 --> 00:04:02,510
to, e cay kod, ktry zaley od odpowiedzi, moe by

44
00:04:02,670 --> 00:04:10,390
teraz wykonywany synchronicznie, poniewa wykonanie zostanie tu wstrzymane do momentu obietnica zostaa rozwizana lub odrzucona.

45
00:04:10,440 --> 00:04:19,560
Tak wic wyliczamy dat wyganicia tutaj, zachowujemy nasze obliczenia dokadnie tak, jak jest, zrb to samo dla

46
00:04:19,560 --> 00:04:21,940
lokalnego magazynu, do ktrego

47
00:04:23,220 --> 00:04:28,400
mamy dostp, tak jak przedtem, a nastpnie wysyamy nowe akcje.

48
00:04:28,400 --> 00:04:31,890
Chocia nauczylicie si, e nie odsyaj tu akcji, zamiast

49
00:04:32,120 --> 00:04:43,320
tego dajemy tutaj i uzyskujemy dostp do dziaa. authSuccess. W tym celu musimy przej do indeksu. Plik js w folderze actions

50
00:04:43,330 --> 00:04:51,570
i upewnij si, e wyeksportujemy wszystkie akcje, ktre chcemy umieci w naszej sadze, abymy

51
00:04:51,570 --> 00:04:56,690
mogli uzyska autoryzacj, a ostatecznie bdziemy potrzebowa authFail, wic

52
00:04:56,820 --> 00:05:01,070
ju teraz wyeksportujmy to tutaj, authFail.

53
00:05:01,930 --> 00:05:08,860
Majc to w sadze, teraz ustpuj tutaj, authSuccess, a

54
00:05:08,860 --> 00:05:12,630
ja wydam kolejn, w ktrej

55
00:05:14,330 --> 00:05:16,630
wykonuj akcje checkAuthTimeout,

56
00:05:16,620 --> 00:05:25,090
teraz jest to funkcja, ktr musimy wyeksportowa tutaj, checkAuthTimeout, w ten sposb.

57
00:05:25,100 --> 00:05:28,340
To jest to, co chc tutaj wykona, teraz

58
00:05:28,640 --> 00:05:34,020
moemy rwnie dodawa deklaracje zysku przed lokalnymi wywoaniami pamici masowej, tak jak to

59
00:05:34,070 --> 00:05:40,160
robilimy wczeniej, chocia lokalne przechowywanie jest dziaaniem synchronicznym, wic tak naprawd nie musimy si

60
00:05:40,160 --> 00:05:40,610
tam

61
00:05:40,610 --> 00:05:48,160
zatrzymywa, ale wci moemy zrb to, moemy doda wydajno tutaj, aby mie spjne podejcie, moe rwnie doda wydajno

62
00:05:49,870 --> 00:05:56,640
tutaj przed now dat, a teraz z t, mamy ca nasz funkcj prawie zakoczon, ale co

63
00:05:56,850 --> 00:05:59,110
z tym bdem tutaj?

64
00:06:00,530 --> 00:06:03,540
C, moemy teraz zaj si tym w

65
00:06:03,950 --> 00:06:09,200
bardzo elegancki sposb, wyodrbniamy tutaj odpowied, poniewa powiedziaem, e wydajno zatrzyma to

66
00:06:09,200 --> 00:06:12,140
i czeka na obietnic rozwizania lub odrzucenia,

67
00:06:12,140 --> 00:06:18,710
teraz moemy uy domylnego konstruktu javascript do obsugi zarwno sukcesu, jak i bdu case, moemy

68
00:06:18,710 --> 00:06:21,750
zawin to przy pomocy bloku try.

69
00:06:22,070 --> 00:06:25,440
Wic prbujemy tego kodu, czekamy na

70
00:06:25,460 --> 00:06:29,640
odpowied, a nastpnie robimy z nim sukces.

71
00:06:30,310 --> 00:06:40,200
Jeli jednak to si nie powiedzie, faktycznie zapiemy bd, a nastpnie uyjemy tego alternatywnego kodu, a tam

72
00:06:40,840 --> 00:06:45,060
odbior moj akcj wysykow i naprawd nie

73
00:06:45,990 --> 00:06:52,590
wyl, ale wydaj polecenie authFail i tak dalej, i tutaj nazwaem

74
00:06:52,770 --> 00:06:57,420
ten bd, wic powinienem zrobi wic i tutaj

75
00:06:57,690 --> 00:07:01,880
i uywaj akcji. authFail.

76
00:07:02,010 --> 00:07:10,680
Teraz otrzymujemy sposb radzenia sobie z tym saga, stosujc wydajno, aby wstrzyma wykonywanie, aby umieci authStart,

77
00:07:10,680 --> 00:07:17,690
a nastpnie sprbuj, jeli moemy uzyska odpowied na sukces i inaczej, wylij authFail.

78
00:07:18,210 --> 00:07:24,240
Po zmianie wszystkich tych rzeczy, musimy tylko upewni si, e authUserSaga

79
00:07:24,240 --> 00:07:30,730
rzeczywicie zostanie wykonana, gdy sprbujemy utworzy lub przypisa uytkownika, wic musimy wrci

80
00:07:30,900 --> 00:07:34,190
do naszego auth. js action creator

81
00:07:34,320 --> 00:07:41,420
file i tam mamy tego twrc auth action, ktry wysyamy w naszym kodzie.

82
00:07:41,430 --> 00:07:49,380
Teraz nie powinnimy ju wykonywa starego kodu, ktry mielimy wczeniej, ale zamiast tego po

83
00:07:49,380 --> 00:07:53,320
prostu zwr akcj, a do tego, utworz

84
00:07:53,760 --> 00:08:04,860
tutaj nowy typ akcji, wyeksportuj go tutaj, eksportuj autouytkownika, moe authUser i w pliku auth action creator, bd teraz wykona

85
00:08:05,130 --> 00:08:10,330
to lub zwrc typ actionTypes. authUser, nowo utworzony typ

86
00:08:10,350 --> 00:08:17,460
akcji, wkrtce stworzymy obserwatora, ktry uyje naszej nowo utworzonej sagi za kadym

87
00:08:17,480 --> 00:08:26,250
razem, gdy pojawi si taka akcja i jest bardzo wana, w naszej funkcji lub generatorze

88
00:08:26,280 --> 00:08:34,260
authUserSaga tutaj oczywicie wyodrbniamy e-mail, haso i oczywicie rejestracja z dziaania, wic musimy

89
00:08:34,290 --> 00:08:35,040
przekaza

90
00:08:35,070 --> 00:08:40,040
te informacje, musimy przekaza te informacje podczas tworzenia dziaania.

91
00:08:40,140 --> 00:08:43,400
Dostajemy to tutaj jako argumenty w

92
00:08:43,500 --> 00:08:51,870
kreatorze akcji, wic powinnimy po prostu przekaza wiadomo e-mail na temat waciwoci e-maila, hasa na wasnoci

93
00:08:51,930 --> 00:08:56,060
hasa i isSignUp na wasnoci isSignUp, jak to.

94
00:08:56,080 --> 00:08:57,030
Teraz to

95
00:08:57,270 --> 00:08:58,900
jest saga, jedyn

96
00:08:58,930 --> 00:09:06,270
rzecz, ktrej brakuje, jest to, e podczamy nasz nowo wygenerowan authUserSag tutaj z obserwatorem.

97
00:09:06,490 --> 00:09:11,980
A wic w indeksie. Plik js w folderze

98
00:09:11,990 --> 00:09:14,040
sagas, dodam kolejny

99
00:09:14,050 --> 00:09:23,890
yield, takeEvery i tam uyj actionTypes. authUser i ja chcemy wykona moj nowo dodan sag, ktr

100
00:09:23,890 --> 00:09:30,560
zaimportuj przede wszystkim, co oczywicie jest authUserSag, ktr wanie stworzylimy tutaj, to jest

101
00:09:30,620 --> 00:09:32,720
to, co chc tutaj

102
00:09:32,810 --> 00:09:38,000
wykona, jak zawsze bez nawiasw, tylko podanie wskanika do tego funkcjonowa.

103
00:09:38,360 --> 00:09:39,420
Zapiszmy teraz,

104
00:09:39,650 --> 00:09:43,750
wrmy do naszego budowniczego burgerw i przeadujmy t stron,

105
00:09:44,150 --> 00:09:45,830
sprbujmy, jeli to dziaa.

106
00:09:45,950 --> 00:09:51,960
Sprbuj si zalogowa, wic przecz si na logowanie i wysyanie,

107
00:09:51,960 --> 00:09:57,690
dziaa to, jak wida, mamy zainicjowane authSuccess i authCheckTimeout.

108
00:09:57,840 --> 00:10:04,430
Jestem te wylogowany po krtkim czasie, a to si po prostu

109
00:10:04,440 --> 00:10:11,250
dzieje, poniewa co zapomniaem, w auth. js w folderze sagas, gdzie opniam o czas wyganicia, teraz

110
00:10:11,250 --> 00:10:14,690
czas wyganicia to tylko dane, ktre otrzymujemy z odpowiedzi, pole

111
00:10:14,910 --> 00:10:16,720
expiresIn i to w sekundach.

112
00:10:16,770 --> 00:10:19,110
Jednak opnienie dziaa z milisekundami,

113
00:10:19,110 --> 00:10:23,060
wic po prostu musz pomnoy to przez 1000.

114
00:10:23,070 --> 00:10:25,570
Najwaniejsze jednak, e zadziaao, sprbujmy jeszcze

115
00:10:25,590 --> 00:10:28,120
raz z tym naprawionym bdem, jeli

116
00:10:28,380 --> 00:10:34,860
wrc do uwierzytelnienia i zaloguj si jeszcze raz, tym razem nie powinienem by znowu tak

117
00:10:34,860 --> 00:10:35,450
szybki,

118
00:10:35,580 --> 00:10:36,860
wic pozwl mi

119
00:10:36,900 --> 00:10:43,050
przesa zobaczysz authSuccess i ustawimy timer, aby wszystko dziaao jak poprzednio, ale teraz uywajc sagi.

120
00:10:43,290 --> 00:10:49,530
Pozwl mi si wylogowa i pozwl mi sprbowa utworzy nowego uytkownika, wic utworz tutaj nowy adres

121
00:10:49,620 --> 00:10:52,680
e-mail i klikn przycisk przesyania. To rwnie dziaa.

122
00:10:52,830 --> 00:10:58,870
Mamy wic takie samo zachowanie jak poprzednio, ale teraz radzimy sobie z tym poprzez

123
00:10:58,870 --> 00:11:05,180
sag, teraz kontynuujmy dodawanie rzeczy od auth. Plik js w folderze dziaa do naszego pliku sagi.

