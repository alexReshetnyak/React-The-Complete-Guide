1
00:00:02,200 --> 00:00:09,730
Son konumada, dahi X'in aslnda ne olduuna bir gz attm ve bunu anlamak ok nemli.

2
00:00:09,990 --> 00:00:14,850
imdi bu derste karlatmz baz kstlamalar vurgulamak istiyorum.

3
00:00:14,850 --> 00:00:21,720
rnein, bu snf ad ey burada James x aka htmln gibi grnyor, nk

4
00:00:21,720 --> 00:00:28,680
bir javascript dosyas olmad halde HVM Elish kodunu bizim javascript dosyalarmzda yazmamza izin

5
00:00:28,680 --> 00:00:36,780
vermeliyiz ve javascript olduundan baz kelimeler CLOS olarak kullanlabilir normal hml'de snf olarak eriim atamak

6
00:00:36,780 --> 00:00:41,620
iin kullanacamz ey, javascript'te kelimeyi ayrt ettiim iin kullanlamyor.

7
00:00:41,700 --> 00:00:45,360
Zaten bunu burada yeni bir snf yaratma yolunda kullandk.

8
00:00:45,360 --> 00:00:48,210
Bu yzden snf adn kullanmak zorundayz.

9
00:00:48,210 --> 00:00:56,140
Burada kullanabileceiniz Def ve H gibi unsurlarn hepsi tepki kitapl tarafndan ynetiliyor veya

10
00:00:56,160 --> 00:00:57,090
salanyor.

11
00:00:57,360 --> 00:01:04,240
Gerek HVM'yi kullanmyor, metin yeniden eriime sokacam ve bunlar sahnelerin arkasnda

12
00:01:04,250 --> 00:01:07,970
dntrp syleyeceim trnak iaretindeki nitelikleri buluyor.

13
00:01:08,100 --> 00:01:13,620
Btn bu unsurlar zerinde tanmlayabiliriz ve normal h m l unsurunda olduu gibi snf

14
00:01:13,620 --> 00:01:14,970
niteliine sahip deiliz.

15
00:01:15,120 --> 00:01:18,070
Burada snf ad zniteliine sahibiz.

16
00:01:18,180 --> 00:01:22,930
C eklemek iin, final kodumuzda grebileceiniz kadar snf vardr.

17
00:01:23,000 --> 00:01:27,180
Buraya snf ad gelse de, bu snf tercme eder.

18
00:01:27,210 --> 00:01:33,850
Bir kere grntlendiinde karmza kan bir say kstlamas ld.

19
00:01:33,870 --> 00:01:35,760
Burada bir eyler dndmzde.

20
00:01:36,030 --> 00:01:42,940
Diyelim ki hepimiz aslnda burada yapamayacamz bir say bal gndermek istiyoruz.

21
00:01:43,140 --> 00:01:47,360
GSX ifademizin bir kk eleman olmaldr.

22
00:01:47,370 --> 00:01:51,670
imdi yeniden hareketle 16 bu tr gevedi.

23
00:01:52,080 --> 00:01:58,450
Ve sonunda bitiik elemanlar gerekten geri getirebildiimiz puanlar greceiz.

24
00:01:58,530 --> 00:02:06,780
ve bu da mantkl olmasna ramen, kk elemann stilinden sorumlu olan CCS S-Snf'n eklemek istiyorsunuz biz burada yapyoruz.

25
00:02:06,820 --> 00:02:13,170
Tipik bir ey ve bileenleri bana bir kk unsurun iine her eyi sarmak iin

26
00:02:13,170 --> 00:02:18,050
tipik bir en iyi uygulama tipik olarak rakiplerinizi stil etmek istediinizden

27
00:02:18,060 --> 00:02:23,760
Dolaysyla genelde her eyi geri dndnz tek bir kk unsurun iine yerletirirsiniz.

28
00:02:23,760 --> 00:02:29,800
Ve burada bu parantezler hakknda merak ediyorsanz, bunlar sadece HVM L'ye geebilmemiz iin kullanlr ve ben

29
00:02:29,820 --> 00:02:36,570
her zaman H'yi sylerim. M. S. Ancak, James knn javascripti

30
00:02:36,570 --> 00:02:42,780
olduunu unutmayn; bylece, bu HVM'ye, hatalar almadan ok satrl bir ekilde yaplandrlm tm kodu dndrebilirsiniz.

31
00:02:42,780 --> 00:02:44,830
Bu yzden parantezleri kullanyoruz.

32
00:02:45,120 --> 00:02:51,020
yleyse, burada gerekten altn syleyen bir paragraf ekleyebilirsem.

33
00:02:51,450 --> 00:02:53,220
Ve bu ok yakn.

34
00:02:53,460 --> 00:02:56,450
imdi bununla birlikte, o paragraf da burada gryoruz.

35
00:02:56,540 --> 00:03:02,370
Ve GSX kullanrken dikkat etmeniz gereken kstlamalar veya baz eyleri de inceledik nk

36
00:03:02,410 --> 00:03:03,730
yine bir HMO.

37
00:03:03,810 --> 00:03:07,140
Fakat ou durumda aslnda onun gibi alr.

