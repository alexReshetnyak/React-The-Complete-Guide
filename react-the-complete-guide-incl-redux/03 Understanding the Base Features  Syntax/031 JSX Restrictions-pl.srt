1
00:00:02,200 --> 00:00:09,730
Podczas ostatniego wykadu rzuciem okiem na to, czym jest jsx i tak wane jest zrozumienie tego.

2
00:00:09,990 --> 00:00:14,850
W tym wykadzie chciabym podkreli niektre z ogranicze, z jakimi mamy do czynienia.

3
00:00:14,850 --> 00:00:21,720
Na przykad ta nazwa klasy rzeczy tutaj, jsx wyranie wyglda jak html i powinno, powinno pozwoli

4
00:00:21,720 --> 00:00:28,680
nam napisa kod html-ish w naszych plikach javascript, nadal poniewa nie jest to plik javascript, a

5
00:00:28,680 --> 00:00:36,780
poniewa jest to javascript, niektre sowa mog nie uywa. Na przykad klasa, ktrej uylibymy w normalnym html do przypisania klasy

6
00:00:36,780 --> 00:00:41,620
css, nie moe by uywana, poniewa jest to sowo zarezerwowane w javascript, uywalimy

7
00:00:41,700 --> 00:00:45,360
go ju tu przy okazji, aby utworzy now klas.

8
00:00:45,360 --> 00:00:48,210
Wanie dlatego musimy uywa nazwy klasy.

9
00:00:48,210 --> 00:00:56,140
Wszystkie te elementy, ktre mona wykorzysta tutaj, takie jak div i h1, s w rzeczywistoci zarzdzane

10
00:00:56,160 --> 00:00:57,090
lub dostarczane

11
00:00:57,360 --> 00:01:04,240
przez bibliotek reagowania, nie uywamy prawdziwych znacznikw html, reagujemy je za kulisami i reagujemy

12
00:01:04,250 --> 00:01:07,970
definiujc atrybuty w cudzysowach, ktre powinienem powiedzie.

13
00:01:08,100 --> 00:01:13,620
Moemy zdefiniowa na wszystkich tych elementach i nie mamy atrybutu class, jak mamy

14
00:01:13,620 --> 00:01:14,970
na zwykym elemencie

15
00:01:15,120 --> 00:01:18,070
html, mamy tutaj atrybut class name, aby

16
00:01:18,180 --> 00:01:22,930
doda go jako klas css. Jak wida w naszym ostatecznym

17
00:01:23,000 --> 00:01:27,180
kodzie, jest to przetumaczone na klas, ale nie jest

18
00:01:27,210 --> 00:01:33,850
to nazwa klasy tutaj, gdy zostanie wyrenderowana. Kolejnym ograniczeniem, przed ktrym stoimy, jest to,

19
00:01:33,870 --> 00:01:35,760
e kiedy zwracamy co

20
00:01:36,030 --> 00:01:42,940
tutaj, powiedzmy, e wszyscy chcemy zwrci inny nagwek, tak naprawd nie moemy tego zrobi

21
00:01:43,140 --> 00:01:47,360
tutaj, nasze wyraenie jsx musi mie jeden element gwny.

22
00:01:47,370 --> 00:01:51,670
Teraz z reakcj 16, jest to troch rozlunione

23
00:01:52,080 --> 00:01:58,450
i zobaczymy w tym kursie, e faktycznie moemy zwrci ssiednie elementy na kocu.

24
00:01:58,530 --> 00:02:06,780
Typow rzecz i typow najlepsz praktyk jest zawijanie wszystkiego w jeden element gwny na komponent, chocia ma to

25
00:02:06,820 --> 00:02:13,170
rwnie sens, poniewa zazwyczaj chcesz stylizowa swoich przeciwnikw i chcesz doda klas css, ktra

26
00:02:13,170 --> 00:02:18,050
jest odpowiedzialna za stylizacj do elementu gwnego, tak jak my rb

27
00:02:18,060 --> 00:02:23,760
tutaj, wic zazwyczaj zagniedasz wszystko w jednym zwrconym przez ciebie gwnym elemencie.

28
00:02:23,760 --> 00:02:29,800
A jeli zastanawiasz si nad tymi nawiasami tutaj, s one po prostu uywane,

29
00:02:29,820 --> 00:02:36,570
abymy mogli napisa kod HTML i zawsze mwi html, ale pamitaj, e to jsx, to

30
00:02:36,570 --> 00:02:42,780
javascript, dziki czemu moesz ten kod HTML adnie skonstruowa na wiele sposobw. linie bez

31
00:02:42,780 --> 00:02:44,830
otrzymywania bdw, dlatego uywamy nawiasw.

32
00:02:45,120 --> 00:02:51,020
Jeli tak, mog doda akapit, w ktrym mwi, e to naprawd dziaa

33
00:02:51,450 --> 00:02:53,220
i zamknijmy to.

34
00:02:53,460 --> 00:02:56,450
Teraz wraz z tym widzimy rwnie ten akapit

35
00:02:56,540 --> 00:03:02,370
i przygldamy si niektrym ograniczeniom lub rzeczom, na ktre naley zwrci uwag przy korzystaniu z jsx,

36
00:03:02,410 --> 00:03:03,730
poniewa znowu nie jest

37
00:03:03,810 --> 00:03:07,140
to html, ale w wikszoci przypadkw dziaa tak jak on.

