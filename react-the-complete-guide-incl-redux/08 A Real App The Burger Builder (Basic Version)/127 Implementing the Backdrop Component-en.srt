1
00:00:02,200 --> 00:00:09,910
Let's add this backdrop and let's first of all create the backdrop component and add the styling for

2
00:00:09,910 --> 00:00:10,970
the backdrop.

3
00:00:11,350 --> 00:00:15,370
So let's head over to our UI folder in the backdrop

4
00:00:15,550 --> 00:00:19,390
and let's start working on that backdrop component,

5
00:00:19,420 --> 00:00:21,420
it'll be a super simple component.

6
00:00:21,790 --> 00:00:28,200
As always it's a functional component here which receive some props and return some jsx,

7
00:00:28,210 --> 00:00:37,140
it therefore also needs to import react from react and it needs to export itself as the default.

8
00:00:37,220 --> 00:00:40,380
Now in the jsx code I return,

9
00:00:40,670 --> 00:00:44,260
I don't actually even need to write complex code

10
00:00:44,270 --> 00:00:47,670
I just want to check if props.show is true,

11
00:00:47,810 --> 00:00:55,490
if that is the case, again using a ternary expression here, if that is the case then I want to return a div,

12
00:00:56,340 --> 00:01:00,760
this div will simply hold the styling for the backdrop

13
00:01:00,960 --> 00:01:02,710
otherwise I will return null.

14
00:01:02,730 --> 00:01:09,150
You may return null in components, that is OK, it just means nothing gets rendered but it is OK,

15
00:01:09,750 --> 00:01:14,760
now I don't need to pass any content to the div, I need to set up some styling though.

16
00:01:14,880 --> 00:01:21,040
So let's add a backdrop.css file where we add some styling for the backdrop and

17
00:01:21,110 --> 00:01:23,250
we can quickly write this together.

18
00:01:23,280 --> 00:01:30,570
Let's add the backdrop css class so that we can use this through css modules and then backdrop should

19
00:01:30,570 --> 00:01:36,390
span the full height and width of the page to cover everything,

20
00:01:36,590 --> 00:01:43,010
it should have a fixed position so that it stays in position even as we scroll, it should have a set

21
00:01:43,010 --> 00:01:50,620
index of let's say 100 so that it is above the elements you want to have it sit up of

22
00:01:50,750 --> 00:01:55,570
and this will become important later once we add toolbar, for example

23
00:01:55,670 --> 00:02:00,890
but if we check out the modal styling, you will see it also has a set index of 500.

24
00:02:00,890 --> 00:02:02,070
That's of course important,

25
00:02:02,090 --> 00:02:07,610
the modal needs to sit above the backdrop and the backdrop will later need to sit above some other elements

26
00:02:07,610 --> 00:02:08,790
like the toolbar.

27
00:02:09,110 --> 00:02:10,070
Lets also add

28
00:02:10,100 --> 00:02:18,200
left zero and top zero to position it in the top left corner and let's add a background color where I will

29
00:02:18,200 --> 00:02:26,120
use a rgba value to set this to a black color with 50% transparency.

30
00:02:26,120 --> 00:02:34,940
Now it's time to import these classes or this single class actually into the backdrop

31
00:02:34,940 --> 00:02:36,010
component.

32
00:02:36,260 --> 00:02:46,760
So here I will therefore simply import classes from ./backdrop css and assign this as

33
00:02:46,760 --> 00:02:54,450
a class name to the div, so class name is now equal to classes.Backdrop with a capital B,

34
00:02:54,470 --> 00:02:58,590
that's important. With that, we get a backdrop component,

35
00:02:58,760 --> 00:03:00,840
now we need to use it.

36
00:03:00,910 --> 00:03:03,490
It expects to get a show property,

37
00:03:03,500 --> 00:03:07,610
the question now is where do we add this backdrop

38
00:03:07,880 --> 00:03:14,280
and now you can have multiple places where you could add it, where you could argue that it makes sense.

39
00:03:15,290 --> 00:03:22,310
One such place would be in the app component, have it sit next to the layout, outside of the layout even

40
00:03:22,460 --> 00:03:26,670
because it's not part of the core page content.

41
00:03:26,700 --> 00:03:34,100
Have it sit in the layout component could you argue because it is part of the page but it should not

42
00:03:34,100 --> 00:03:39,160
be part of the main content and not be part of the toolbar or anything like that.

43
00:03:39,350 --> 00:03:42,840
You can definitely do that, you can put it into the layout component,

44
00:03:42,920 --> 00:03:48,150
you just need to make sure that you then can reach that by passing the show.

45
00:03:48,150 --> 00:03:52,130
the backdrop state up to that component and so on.

46
00:03:52,160 --> 00:03:54,040
This is a nice challenge for you,

47
00:03:54,260 --> 00:03:58,820
try placing and handling the backdrop in different places of your app,

48
00:03:59,120 --> 00:04:05,960
for that you might also have to switch some components from stateless functional components to class

49
00:04:05,960 --> 00:04:12,190
based components because maybe all of a sudden, you need to define some method in a component.

50
00:04:12,230 --> 00:04:20,930
I will go for another approach though, I will add the backdrop to my modal because in my opinion, this

51
00:04:20,930 --> 00:04:23,930
backdrop is closely connected to the modal,

52
00:04:24,020 --> 00:04:32,000
if the modal is shown, the backdrop should be shown. So therefore, I will import my auxiliary components

53
00:04:32,000 --> 00:04:35,450
here because I need to place that modal next to the backdrop.

54
00:04:35,840 --> 00:04:45,090
So let me simply go up all the way to the place where I can access hoc and then my auxiliary

55
00:04:45,200 --> 00:04:56,120
and now let's wrap the div of the modal into this aux component and let's now import the backdrop

56
00:04:56,150 --> 00:05:04,110
into this file too, import backdrop from the backdrop folder, the backdrop.js file,

57
00:05:04,220 --> 00:05:06,800
let's place it next to the modal,

58
00:05:06,820 --> 00:05:08,660
this is my backdrop.

59
00:05:08,970 --> 00:05:15,200
Now we should configure the show property on the backdrop because we expect it in there and thankfully,

60
00:05:15,200 --> 00:05:21,980
we get the show information on props in the modal component itself. So we can simply pass on props

61
00:05:22,070 --> 00:05:23,830
show to the backdrop,

62
00:05:24,080 --> 00:05:27,200
if the modal is shown, the backdrop should be shown.

63
00:05:27,920 --> 00:05:32,770
If we do this, let's save all the files and let's see if that works,

64
00:05:32,960 --> 00:05:33,500
looks good,

65
00:05:33,500 --> 00:05:34,960
we get a backdrop,

66
00:05:35,360 --> 00:05:39,680
let's make sure that we can click this backdrop too. For that,

67
00:05:39,680 --> 00:05:46,430
we of course need to add a click listener inside the backdrop on the div, so onClick

68
00:05:46,650 --> 00:05:55,070
should executes some method and of course will receive a reference to that method on a property. So I'll execute

69
00:05:55,070 --> 00:05:55,860
props

70
00:05:55,910 --> 00:05:58,950
and then let's say clicked could be the property name,

71
00:05:59,090 --> 00:06:01,820
you can choose any name you want here

72
00:06:01,930 --> 00:06:03,960
Let's now go back to the modal,

73
00:06:04,030 --> 00:06:11,890
here we have to provide a click property and now we have to do something there and I will simply trigger a

74
00:06:12,490 --> 00:06:17,200
prop on that modal which should be modalClosed.

75
00:06:17,590 --> 00:06:23,280
So modalClosed is now a property we have to add to the modal component

76
00:06:23,320 --> 00:06:24,930
when we add it to jsx

77
00:06:24,940 --> 00:06:26,960
to our output,

78
00:06:27,010 --> 00:06:32,480
so to say, and we do of course use that modal in the burger builder

79
00:06:32,820 --> 00:06:41,340
here. So what we now need to do is we have to add this modalClosed property to modal because we just

80
00:06:41,400 --> 00:06:46,030
added it in there as a reference of the method we want to execute

81
00:06:46,140 --> 00:06:53,100
once the backdrop fires clicked just to reassure that it is clear when this happens, which happens when

82
00:06:53,340 --> 00:06:54,770
onClick is fired

83
00:06:54,810 --> 00:07:01,790
on the div which makes up the backdrop. So in burger builder where we in the end will get this information,

84
00:07:01,950 --> 00:07:10,280
I want to execute some code once this backdrop was clicked in the end and I will add a new handler,

85
00:07:10,480 --> 00:07:16,500
the purchaseCancelHandler because clicking the backdrop essentially means that we want to close the modal

86
00:07:16,620 --> 00:07:18,900
and that we want to cancel the purchase,

87
00:07:18,900 --> 00:07:29,560
we don't want to continue. So I will call this set state and set purchasing to false, notice the special

88
00:07:29,690 --> 00:07:37,140
syntax I'm using here again to make sure this inside of this method refers to the class and not to something

89
00:07:37,140 --> 00:07:38,610
else.

90
00:07:38,610 --> 00:07:41,040
So it's the purchaseCancelHandler

91
00:07:41,310 --> 00:07:44,420
I want to execute once the modal was closed,

92
00:07:44,580 --> 00:07:47,470
so this.purchaseCancelHandler.

93
00:07:47,820 --> 00:07:53,790
If we now save everything and we go back to the application and we open the modal, we see it,

94
00:07:53,820 --> 00:07:59,490
if I click the backdrop, you'll see the modal disappears and the backdrop disappears and we can do this

95
00:07:59,670 --> 00:08:01,340
as often as we want.

96
00:08:01,340 --> 00:08:03,400
This by the way is a super tasty burger,

97
00:08:03,450 --> 00:08:05,240
no meat but a lot of cheese,

98
00:08:05,310 --> 00:08:06,930
delicious.

99
00:08:06,960 --> 00:08:13,830
Now let's continue and let's make sure we add some buttons as part of the order summary so that we may

100
00:08:13,830 --> 00:08:14,650
continue

101
00:08:14,790 --> 00:08:16,290
or that we may cancel.

