1
00:00:02,200 --> 00:00:07,690
We added the modal, let's make sure we only display it if we are actually buying something, if we did

2
00:00:07,690 --> 00:00:09,800
click the order now button.

3
00:00:09,910 --> 00:00:15,820
So the modal is included in the burger builder and that's good because the burger builder, we actually

4
00:00:15,820 --> 00:00:21,160
have our state and that is where we can also determine whether this order now button was clicked or

5
00:00:21,160 --> 00:00:22,510
not.

6
00:00:22,510 --> 00:00:24,440
Actually we can't right now

7
00:00:24,490 --> 00:00:27,270
but we can easily add the logic to do so.

8
00:00:27,480 --> 00:00:30,550
For this, I first of all add something to my state,

9
00:00:30,820 --> 00:00:35,970
I don't only need to know if it is purchasable but if the order now button was clicked.

10
00:00:36,130 --> 00:00:39,830
So if we are in purchase mode or something like that.

11
00:00:40,180 --> 00:00:46,140
So what I want to do is I want to set purchasing to false

12
00:00:46,220 --> 00:00:52,890
and of course purchasing should be changed to false once this order now button was clicked.

13
00:00:53,000 --> 00:01:03,740
So I will add a new handler, a new method I'll name it purchaseHandler, purchaseHandler is a normal method

14
00:01:04,310 --> 00:01:10,130
and it should be triggered whenever we click this order now button. In there, what I'll do is I will set

15
00:01:10,130 --> 00:01:23,860
the state of purchasing to true, just like that and I need to pass this to build controls, there is the

16
00:01:24,030 --> 00:01:25,710
order now button in the end.

17
00:01:25,710 --> 00:01:29,060
Let's first head to the build controller,

18
00:01:29,160 --> 00:01:35,220
So under build controls, build controls, here we get this button and I want to add a click listener to

19
00:01:35,220 --> 00:01:41,320
the button so onClick which is just a default click listener since this is a default button, there

20
00:01:41,340 --> 00:01:46,710
I want to execute a method which I receive through props and we can choose any prop name we want

21
00:01:46,710 --> 00:01:49,580
here, we are right about at setting this up.

22
00:01:49,590 --> 00:01:54,230
So let's simply name this ordered

23
00:01:54,250 --> 00:01:55,730
or something like that.

24
00:01:55,760 --> 00:01:57,580
So I want to execute this

25
00:01:57,650 --> 00:02:03,450
and now let's move back to the burger builder which is the place where we have to pass props to build

26
00:02:03,450 --> 00:02:12,710
the controls and here on build controls, I'll add this ordered properly just added and bind it to this purchase

27
00:02:12,860 --> 00:02:15,470
handler, so that this method gets executed

28
00:02:15,530 --> 00:02:21,320
when we clicked the order now button. Now it's of course nice that we change the state to purchasing,

29
00:02:21,320 --> 00:02:25,300
that alone won't change the way we see the modal though.

30
00:02:25,730 --> 00:02:31,780
I now could conditionally render this modal, we could add some code to conditionally show or hide the

31
00:02:31,790 --> 00:02:32,070
modal,

32
00:02:32,070 --> 00:02:39,230
this would certainly be a way, would be even nicer if we could play a tiny animation on the modal. In

33
00:02:39,230 --> 00:02:46,520
the modal css file, I already prepared it with the transition css property to simply

34
00:02:46,560 --> 00:02:49,340
animate when this modal is shown.

35
00:02:49,340 --> 00:02:53,270
So since this is prepared, we should also take advantage of it.

36
00:02:53,810 --> 00:03:00,350
If we just add or remove the modal from or to the dom, we won't see an animation though, we need to switch

37
00:03:00,350 --> 00:03:04,810
some css property to show or hide it, to be able to animate that.

38
00:03:05,120 --> 00:03:11,420
So let's instead pass a property to modal, the show property maybe, you can choose any name you want

39
00:03:12,080 --> 00:03:19,130
and bind it to the purchasing state because only if purchasing is true the modal should be visible.

40
00:03:19,640 --> 00:03:27,230
Now with that, let's head over to the modal and let's just decode there to change the modal,

41
00:03:27,280 --> 00:03:32,380
depending on the show property. We already have a class here, now

42
00:03:32,560 --> 00:03:35,190
want to change some inline style, though

43
00:03:35,210 --> 00:03:42,220
you could also add a new css class and add this class conditionally as we do it in other places

44
00:03:42,230 --> 00:03:44,130
of this application already.

45
00:03:44,190 --> 00:03:49,100
You're totally free to choose the approach you want but to also practice some inline styles,

46
00:03:49,310 --> 00:03:55,940
let's bind style here to something dynamic, that dynamic thing should be a javascript object and there, I

47
00:03:56,030 --> 00:04:01,740
want to send or set the transform property. If show is true,

48
00:04:02,000 --> 00:04:04,270
I'll use ternary expression here,

49
00:04:04,460 --> 00:04:12,170
if it is true then, the then condition comes after the question mark, I'll set transform to translateY(0)

50
00:04:12,170 --> 00:04:16,450
which is the position I defined in css,

51
00:04:16,490 --> 00:04:21,100
so the position it should really have. If show is not true though,

52
00:04:21,410 --> 00:04:22,000
I'll set

53
00:04:22,000 --> 00:04:32,180
translateY to minus 100vh, vh is a special unit which refers to the viewport height, so it will

54
00:04:32,180 --> 00:04:35,100
simply slide it outside of the screen.

55
00:04:35,570 --> 00:04:42,910
I also want to animate the opacity, so let's also set the opacity to something, if props.show is true,

56
00:04:42,950 --> 00:04:44,340
it should be one,

57
00:04:44,510 --> 00:04:46,110
if it's not true,

58
00:04:46,190 --> 00:04:49,120
so if it's false, it should be 0 so it should be opaque,

59
00:04:49,130 --> 00:04:51,560
it should be not visible, it should be transparent

60
00:04:51,560 --> 00:04:53,800
I mean, it should be not visible.

61
00:04:54,170 --> 00:04:58,790
So with that, we got that and take advantage of the show property,

62
00:04:58,910 --> 00:05:01,930
save all the files and let's see if this works.

63
00:05:02,000 --> 00:05:03,260
The modal is gone,

64
00:05:03,290 --> 00:05:05,920
let's add some ingredients and click order now,

65
00:05:06,880 --> 00:05:13,880
we got an error here, cannot read properties set state. Let's head over to the burger builder and to

66
00:05:13,930 --> 00:05:16,600
the purchase handler, set state

67
00:05:16,630 --> 00:05:19,970
and do you have an idea why this failed?

68
00:05:20,200 --> 00:05:25,330
I'm executing this set state here, exactly the same I use in other methods too,

69
00:05:25,360 --> 00:05:27,310
why could this fail?

70
00:05:30,150 --> 00:05:34,650
It fails because of the way I'm creating this method,

71
00:05:34,650 --> 00:05:41,610
I use the same method syntax as I use for render but you maybe remember that earlier in the course, I

72
00:05:41,610 --> 00:05:46,290
mentioned that this syntax will not work correctly,

73
00:05:46,350 --> 00:05:53,310
at least if we try to use the this keyword in there if the method is triggered through an event due to

74
00:05:53,310 --> 00:06:00,930
the way the this keyword works in Javascript, it will then not refer to the class.

75
00:06:00,930 --> 00:06:06,930
This is not the case for remove and addIngredientHandler because I use a slightly different syntax

76
00:06:06,930 --> 00:06:07,520
there,

77
00:06:07,710 --> 00:06:12,330
I set up these methods as properties where I assigned arrow functions.

78
00:06:12,480 --> 00:06:19,110
In the end these are still methods but internally, they take advantage of arrow functions which basically

79
00:06:19,110 --> 00:06:27,420
contain the state or the context of this. So we can easily fix this by setting purchaseHandler equal

80
00:06:27,420 --> 00:06:32,210
to an arrow function too and use that syntax for creating the method.

81
00:06:32,520 --> 00:06:36,690
Now with that, if we save this the error message should not pop up anymore,

82
00:06:36,870 --> 00:06:40,010
if we now click order now, the modal slides in.

83
00:06:40,020 --> 00:06:41,090
So that's looking good,

84
00:06:41,100 --> 00:06:43,570
it's also correctly displaying the state.

85
00:06:43,830 --> 00:06:51,010
Now of course it would now be great if we also had a backdrop and if we would click this backdrop,

86
00:06:51,090 --> 00:06:54,630
if it then would remove or dismiss the modal.

87
00:06:54,780 --> 00:06:57,340
Let's work on this over the next lectures.

