1
00:00:02,200 --> 00:00:07,450
Time to add some controls so that a user can actually control which ingredients a burger should have

2
00:00:07,480 --> 00:00:14,830
or should not have, and for that we need to add the build controls and we'll add this component in the

3
00:00:14,830 --> 00:00:21,630
burger folder, I'll add a new subfolder which all name build controls

4
00:00:21,730 --> 00:00:26,930
and there I will add a buildControls.js file.

5
00:00:26,980 --> 00:00:35,830
Now the build controls will be a functional component so build controls is a function which receives

6
00:00:35,830 --> 00:00:40,020
props and which will return some jsx in the end.

7
00:00:40,030 --> 00:00:48,310
Therefore we of course also need to import react from react and we can then export the build control

8
00:00:48,340 --> 00:00:50,520
function as a default.

9
00:00:50,530 --> 00:00:54,420
Now how should build controls look like?

10
00:00:54,520 --> 00:00:56,500
Now of course the study as always is up to you,

11
00:00:56,500 --> 00:01:03,370
I want to have a div which I'll use to give this area some styling and in there, I want to have my various

12
00:01:03,520 --> 00:01:04,970
build controls.

13
00:01:05,070 --> 00:01:08,530
Now let's start with styling that area,

14
00:01:08,800 --> 00:01:17,790
for that I'll create a new file buildControl.css and it will add a build controls,

15
00:01:18,070 --> 00:01:18,600
excuse me,

16
00:01:18,610 --> 00:01:21,490
the file should be named buildControls too

17
00:01:21,490 --> 00:01:27,790
just like that js file, is plural. So in the css, I will add a build controls.

18
00:01:27,790 --> 00:01:29,440
css class

19
00:01:29,640 --> 00:01:35,200
and I want to give my build control to a width of 100% and for the background-color, I picked a

20
00:01:35,200 --> 00:01:38,250
nice orange brownish color

21
00:01:38,260 --> 00:01:41,330
#CF8F2E ,

22
00:01:41,620 --> 00:01:49,030
I like this color for that. The display shall be flexbox to position all these build controls correctly,

23
00:01:49,030 --> 00:01:54,290
I'll set the flex-flow to column to position them beneath each other, so in a column instead of in

24
00:01:54,290 --> 00:01:55,110
a row.

25
00:01:55,630 --> 00:02:05,920
I want to align all the text in the center, I want to give my box a tiny box shadow only at the bottom

26
00:02:06,160 --> 00:02:11,010
1px spread and use this grey as a shadow color.

27
00:02:11,220 --> 00:02:11,950
Margin,

28
00:02:11,950 --> 00:02:19,860
auto and add a padding of let's say 10pxs and 0 from left and right

29
00:02:19,870 --> 00:02:21,140
because text should be centered

30
00:02:21,150 --> 00:02:24,770
anyways. Now this is my build controls area,

31
00:02:24,910 --> 00:02:30,490
of course we should add some content to the build controls area and there I want to have a couple of

32
00:02:30,640 --> 00:02:31,870
build controls,

33
00:02:31,870 --> 00:02:33,040
you guessed it.

34
00:02:33,040 --> 00:02:39,040
Now in my opinion, it makes sense to also outsource these build controls because it's not just one button,

35
00:02:39,100 --> 00:02:44,840
it's a label and then two buttons and it's basically a reusable UI element

36
00:02:44,980 --> 00:02:49,440
so putting it into its own component makes a lot of sense.

37
00:02:49,480 --> 00:02:57,130
So inside the build controls, I'll add the build control folder and there, the buildControl.js file

38
00:02:57,370 --> 00:03:03,360
and already the buildControl.css file for the styling thereafter.

39
00:03:03,580 --> 00:03:06,630
Let's start in the js file though,

40
00:03:06,750 --> 00:03:14,650
build control, this component will also be a function, will receive props and return some jsx, will import

41
00:03:14,740 --> 00:03:23,670
react from react as you always know it and will export build control as the default.

42
00:03:23,680 --> 00:03:26,860
Now we have to decide how a build control should look like,

43
00:03:26,870 --> 00:03:34,900
now I will use a div as a wrapper, also for styling and then my build control should in the end have a div

44
00:03:34,960 --> 00:03:37,900
which contains the text for that build control.

45
00:03:37,900 --> 00:03:41,270
Basically the text, the name of the ingredient I want to add

46
00:03:41,590 --> 00:03:45,000
so there I want to output something dynamically and

47
00:03:45,130 --> 00:03:49,990
I will receive a prop for this and I want to name it label,

48
00:03:50,020 --> 00:03:52,310
you can of course choose any name you want,

49
00:03:52,310 --> 00:03:56,860
you could name it ingredient label, whatever you need. Next to it,

50
00:03:56,860 --> 00:03:58,780
there will be two buttons,

51
00:03:58,870 --> 00:04:03,350
the first button is of course therefore removing an ingredient less

52
00:04:03,610 --> 00:04:09,130
and then I'll duplicate it to also have a more button.

53
00:04:09,130 --> 00:04:13,940
Now I have two buttons which allow me to remove and add ingredients,

54
00:04:13,960 --> 00:04:15,340
now I will need some

55
00:04:15,330 --> 00:04:18,060
css for this build control to look good

56
00:04:18,100 --> 00:04:21,930
so let's head over to the css file and there

57
00:04:21,970 --> 00:04:25,130
let's add build control,

58
00:04:25,150 --> 00:04:27,260
this css class.

59
00:04:27,360 --> 00:04:35,360
I want to use flexbox to position the div with the text and the buttons, flex-flow will be row,

60
00:04:35,400 --> 00:04:36,660
so the default.

61
00:04:37,050 --> 00:04:44,370
I want to distribute them with space between so that they keep some distance from each other and

62
00:04:44,410 --> 00:04:52,050
I will align all the content in the center, for vertical alignment and I will assign a margin of 5px

63
00:04:52,130 --> 00:04:58,680
from top to bottom so that there is some space between the individual build controls but

64
00:04:58,750 --> 00:05:02,550
zero from left to right. Now in the build control,

65
00:05:02,550 --> 00:05:07,850
we have a button of course and the button should be of display block.

66
00:05:08,310 --> 00:05:12,800
Normally it's inline, here I will overwrite this to be a block style button.

67
00:05:14,120 --> 00:05:25,150
I want to inherit the font and set the padding to 5px, margin to zero or 5px. With 80px, it

68
00:05:25,360 --> 00:05:26,390
should look good

69
00:05:26,620 --> 00:05:36,970
and the border will be 1px solid and then #AA6817, excuse me that's also a brown color.

70
00:05:37,510 --> 00:05:40,050
Cursor should be a pointer

71
00:05:40,330 --> 00:05:45,040
and I want to remove that outline you have by default.

72
00:05:45,040 --> 00:05:50,290
Now there are way more styles we can add to style the button and all the labels,

73
00:05:50,290 --> 00:05:57,600
to shorten this, I will attach a file with all the other styles and you can simply add them below here.

74
00:05:57,670 --> 00:06:01,630
Actually the attached file will contain the styles for this whole file

75
00:06:01,630 --> 00:06:05,160
so you may simply replace everything in here with it.

76
00:06:05,200 --> 00:06:09,570
These are all just styles to make sure we have classes to style the

77
00:06:09,730 --> 00:06:14,820
less and more buttons differently and even disable buttons.

78
00:06:15,130 --> 00:06:21,680
With that, let's go back to our javascript file, to the react code for which you're all here I guess.

79
00:06:21,690 --> 00:06:28,160
So let's now import this classes object from our css file so that we can start using these css

80
00:06:28,160 --> 00:06:33,880
classes and let's attach a class to our wrapping div. Here,

81
00:06:33,880 --> 00:06:37,640
this will be the build control class.

82
00:06:37,750 --> 00:06:42,620
I also need a class for my label div, here

83
00:06:42,730 --> 00:06:51,220
I will use classes and then label, this was one of the css classes you just imported. And the buttons

84
00:06:51,280 --> 00:06:53,800
also will receive class names,

85
00:06:53,800 --> 00:07:02,560
the less button, for that I got the less class and the more button, for this button you might not guess

86
00:07:02,560 --> 00:07:07,870
it but there I have that more button, like this.

87
00:07:07,940 --> 00:07:16,510
Now a single build control is styled, the next step which we'll do in the next lecture is to now create

88
00:07:16,510 --> 00:07:22,350
an array of such build controls in the build controls component.

89
00:07:22,600 --> 00:07:25,090
Let's do that together in the next lecture.

