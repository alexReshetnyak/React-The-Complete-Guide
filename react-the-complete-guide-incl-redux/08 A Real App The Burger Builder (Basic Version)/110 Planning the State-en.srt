1
00:00:02,170 --> 00:00:09,910
So in the last lecture, we identified the layout of the application and that component tree here,

2
00:00:09,970 --> 00:00:12,590
that's of course a super important step.

3
00:00:12,610 --> 00:00:14,640
Now this is only one part,

4
00:00:14,650 --> 00:00:18,490
we also need to know which state we're going to use in our application.

5
00:00:18,500 --> 00:00:24,310
This state becomes important because it also allows us to identify what should be a component and what

6
00:00:24,310 --> 00:00:25,300
should be a container.

7
00:00:25,330 --> 00:00:30,230
So what should be a stateless component and what should be a stateful component.

8
00:00:30,280 --> 00:00:38,410
Now let's think about our application states then, I'll summarize the state for the application as we plan

9
00:00:38,410 --> 00:00:39,840
it here.

10
00:00:40,030 --> 00:00:48,050
Now in the state, we definitely need to manage the ingredients of the burger, so the ingredients the user

11
00:00:48,070 --> 00:00:57,900
added. Ingredients will probably be some javascript object where we have something like meat, 1 times,

12
00:00:58,530 --> 00:01:01,790
cheese, two times and so on,

13
00:01:01,860 --> 00:01:03,530
so this could be the ingredients.

14
00:01:03,720 --> 00:01:09,330
We also want to know whether the user is currently checking out the burger,

15
00:01:09,340 --> 00:01:18,380
so if you clicked on purchase or not, so something like purchased and that could be true or of

16
00:01:18,380 --> 00:01:20,030
course false.

17
00:01:20,660 --> 00:01:24,020
That actually should be almost all,

18
00:01:24,110 --> 00:01:33,380
the only thing probably is a total price which we need, so that we can always see what the price is and

19
00:01:33,380 --> 00:01:35,180
we can dynamically calculate that

20
00:01:35,240 --> 00:01:40,460
and of course also output it. Now that is our state,

21
00:01:40,460 --> 00:01:42,490
super simple, not too difficult, right?

22
00:01:42,560 --> 00:01:49,300
But it allows us to create a dynamic burger and output all relevant information to the user already.

23
00:01:49,310 --> 00:01:52,020
Now where do we manage that state?

24
00:01:52,100 --> 00:01:59,270
You could say we should manage the state in the app component here at the top but I don't agree with

25
00:01:59,270 --> 00:01:59,740
that,

26
00:01:59,750 --> 00:02:01,250
we won't do it here.

27
00:02:01,310 --> 00:02:05,200
Instead we should do it in the burger builder here,

28
00:02:05,360 --> 00:02:06,210
why?

29
00:02:06,500 --> 00:02:14,210
Because the state I listed here on the right is really just related to building a burger, if we later

30
00:02:14,240 --> 00:02:17,300
add a new check out page or something like that,

31
00:02:17,480 --> 00:02:24,630
then we will basically have a page where we want to see all orders of the user and we're not interested

32
00:02:24,730 --> 00:02:28,470
of the ingredients of the burger the user currently builds.

33
00:02:28,670 --> 00:02:34,520
So managing this state on the app level isn't correct in my opinion because it doesn't affect the whole

34
00:02:34,520 --> 00:02:37,420
app, it only affects this burger builder page

35
00:02:37,490 --> 00:02:41,060
and for now this is going to be our whole app basically

36
00:02:41,060 --> 00:02:45,700
but it's not how our application is going to stay once we added that checkout page and so on.

37
00:02:46,070 --> 00:02:51,170
So the burger builder should be a stateful component,

38
00:02:51,350 --> 00:02:53,970
it should be a container basically

39
00:02:54,110 --> 00:02:56,760
so stateful,

40
00:02:56,990 --> 00:03:04,600
that's what the burger builder should be. All other components can be components, can be dumb components,

41
00:03:04,610 --> 00:03:06,980
stateless components.

42
00:03:06,980 --> 00:03:12,530
Now the app component by default in the new project is a stateful one created with the class keyword,

43
00:03:12,770 --> 00:03:18,650
we can of course always leave it to be one but we can also turn it into a dumb component if we wanted

44
00:03:18,650 --> 00:03:19,850
to.

45
00:03:19,850 --> 00:03:24,880
Now if we're thinking about pure components or shouldComponentUpdate,

46
00:03:24,920 --> 00:03:32,300
we'll both as a rule implement this as we built the application and see if we can identify some places

47
00:03:32,300 --> 00:03:35,990
where we need to optimize our update cycle.

48
00:03:36,230 --> 00:03:42,050
But due to the simplicity of our state and the structure of our application here, it might also be the

49
00:03:42,050 --> 00:03:47,810
case that we never need to implement pure component because we know that if the state or some props

50
00:03:47,810 --> 00:03:54,480
changes, it did really change, that we don't have a button which might just set the state to something

51
00:03:54,480 --> 00:03:58,050
it was already at. So that might very well be the case,

52
00:03:58,100 --> 00:04:04,430
we'll have a look at this and take care about correctly implementing this and possibly turning something

53
00:04:04,460 --> 00:04:07,010
into a pure component if needed.

54
00:04:07,010 --> 00:04:11,410
So with that, I'd say let's create a project and let's get started with that.

