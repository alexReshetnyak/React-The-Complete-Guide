1
00:00:02,170 --> 00:00:09,910
Ento, na ltima palestra, identificamos o layout do aplicativo e aquela rvore de componentes aqui.

2
00:00:09,970 --> 00:00:12,590
 claro que  um passo super importante.

3
00:00:12,610 --> 00:00:14,640
Agora, esta  apenas uma parte.

4
00:00:14,650 --> 00:00:18,490
Todos ns precisamos saber qual estado vamos usar em nosso aplicativo.

5
00:00:18,500 --> 00:00:24,310
Este estado torna-se importante porque tambm nos permite identificar o que deve ser um componente e o que deve

6
00:00:24,310 --> 00:00:25,300
ser um continer.

7
00:00:25,330 --> 00:00:30,230
Ento, qual deve ser um componente de menos estado e o que deve ser um componente completo do estado.

8
00:00:30,280 --> 00:00:38,410
sobre os nossos estados de aplicao, ou ento, resumir o estado do aplicativo conforme o planejamos aqui.

9
00:00:38,410 --> 00:00:39,840
Agora, vamos pensar

10
00:00:40,030 --> 00:00:48,050
Agora, no estado, definitivamente precisamos gerenciar os ingredientes dos hambrgueres, os ingredientes que o

11
00:00:48,070 --> 00:00:57,900
usurio adicionou ingredientes provavelmente sero alguns objetos javascript, onde temos algo como carne 1 vez que ela 

12
00:00:58,530 --> 00:01:01,790
duas vezes e assim por diante.

13
00:01:01,860 --> 00:01:03,530
Ento, esses podem ser os ingredientes.

14
00:01:03,720 --> 00:01:09,330
Tambm queremos saber se o usurio est verificando o hambrguer.

15
00:01:09,340 --> 00:01:18,380
Ento, se voc clicou no pr-Chase ou no vendesse ou algo como Per chaced e isso poderia ser verdade

16
00:01:18,380 --> 00:01:20,030
ou, claro, falso.

17
00:01:20,660 --> 00:01:24,020
Isso na verdade deveria ser quase tudo.

18
00:01:24,110 --> 00:01:33,380
A nica coisa provavelmente  um preo total que precisamos para que possamos sempre ver qual  o preo e

19
00:01:33,380 --> 00:01:35,180
podemos calcular dinamicamente isso.

20
00:01:35,240 --> 00:01:40,460
E, claro, todo o outputted Agora, esse  o nosso estado.

21
00:01:40,460 --> 00:01:42,490
Super simples, no muito difcil.

22
00:01:42,560 --> 00:01:49,300
Mas isso nos permite criar esse hamburguer dinmico e enviar todas as informaes relevantes para o usurio j.

23
00:01:49,310 --> 00:01:52,020
Agora, onde gerenciamos esse estado.

24
00:01:52,100 --> 00:01:59,270
poderia dizer que devemos gerenciar para indicar no componente do aplicativo aqui no topo, mas eu no concordo com isso.

25
00:01:59,270 --> 00:01:59,740
Voc

26
00:01:59,750 --> 00:02:01,250
No vamos fazer isso aqui.

27
00:02:01,310 --> 00:02:05,200
Em vez disso, devemos faz-lo no criador de hambrguer aqui.

28
00:02:05,360 --> 00:02:06,210
Por qu.

29
00:02:06,500 --> 00:02:14,210
Porque o estado que eu listei aqui  direita  realmente apenas relacionado  construo de um hambrguer se depois adicionamos

30
00:02:14,240 --> 00:02:17,300
uma nova pgina de verificao ou algo assim.

31
00:02:17,480 --> 00:02:24,630
Ento, basicamente, teremos uma pgina em que queremos ver todos os pedidos do usurio e no

32
00:02:24,730 --> 00:02:28,470
nos interessamos os ingredientes do uso do hamburguer repetidamente.

33
00:02:28,670 --> 00:02:34,520
Portanto, gerenciar esse estado no nvel do aplicativo no est correto na minha opinio porque isso no afeta o aplicativo

34
00:02:34,520 --> 00:02:37,420
inteiro, ele s afeta essa pgina do construtor de hambrguer.

35
00:02:37,490 --> 00:02:41,060
E, por enquanto, esta ser nossa aplicao completa basicamente.

36
00:02:41,060 --> 00:02:45,700
Mas no  como o nosso aplicativo vai ficar uma vez que adicionamos a pgina de pagamento e assim por diante.

37
00:02:46,070 --> 00:02:51,170
Portanto, o construtor de hambrguer deve ser um componente completo de estado.

38
00:02:51,350 --> 00:02:53,970
Deve ser um recipiente basicamente.

39
00:02:54,110 --> 00:02:56,760
Ento, esteja completo.

40
00:02:56,990 --> 00:03:04,600
de hamburguer devem ser todos os componentes da Avro podem ser componentes podem ser componentes de despejo, menos componentes.

41
00:03:04,610 --> 00:03:06,980
Isso  o que os construtores

42
00:03:06,980 --> 00:03:12,530
Agora, o componente por padro e, em seguida, o projeto  um estado completo, tratado com a palavra-chave.

43
00:03:12,770 --> 00:03:18,650
Naturalmente, podemos deixar que seja um, mas tambm podemos transform-lo em um componente de

44
00:03:18,650 --> 00:03:19,850
despejo se quisermos.

45
00:03:19,850 --> 00:03:24,880
Agora estamos pensando em componentes puros ou deve atualizar o componente.

46
00:03:24,920 --> 00:03:32,300
Ser que ambos implementaremos ou implementaremos isso ao construir o aplicativo e ver se podemos identificar alguns

47
00:03:32,300 --> 00:03:35,990
locais onde precisamos otimizar nosso ciclo de atualizao.

48
00:03:36,230 --> 00:03:42,050
definir o cenrio para algo que j estava configurado para que possa muito bem ser o caso.

49
00:03:42,050 --> 00:03:47,810
Mas, devido  simplicidade de nossa propriedade e  estrutura de nossa aplicao aqui tambm pode ser

50
00:03:47,810 --> 00:03:54,480
o caso de que nunca precisamos implementar um componente puro porque sabemos que, se o estado ou alguns adereos mudam,

51
00:03:54,480 --> 00:03:58,050
como realmente mudou, no fazemos tem um boto que pode apenas

52
00:03:58,100 --> 00:04:04,430
Vamos dar uma olhada nisso e cuidar de implementar corretamente isso e possivelmente transformar algo

53
00:04:04,460 --> 00:04:07,010
em um componente puro, se necessrio.

54
00:04:07,010 --> 00:04:11,410
Ento, com isso, eu diria que vamos criar um projeto e vamos comear com isso.

