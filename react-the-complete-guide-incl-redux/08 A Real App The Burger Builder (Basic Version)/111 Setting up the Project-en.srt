1
00:00:02,420 --> 00:00:03,710
Now that the planning is done,

2
00:00:03,740 --> 00:00:08,060
let's dive into the project and let's actually build this application.

3
00:00:08,240 --> 00:00:13,740
For this, I opened a brand new project created with create react app,

4
00:00:13,880 --> 00:00:16,450
nothing has been changed here yet.

5
00:00:16,520 --> 00:00:24,230
Now in this project, I first of all want to enable css modules so that I can make sure that the css

6
00:00:24,250 --> 00:00:32,630
classes we create in a css file can be scoped to a specific component in our application so that

7
00:00:32,630 --> 00:00:39,350
they are not applied globally when we would accidentally reuse the same css class.

8
00:00:39,530 --> 00:00:42,400
For that I need to eject the project

9
00:00:42,410 --> 00:00:44,690
as you learned, so let's do that first.

10
00:00:44,750 --> 00:00:52,670
Let's run npm run eject in the newly created project and this will now ask us if we really want to eject,

11
00:00:52,670 --> 00:01:00,260
so I will confirm this with Y for yes, and now as you saw it before in the module where I showed you how

12
00:01:00,260 --> 00:01:05,840
to implement css module, you get access to the config in a config folder and there to the two

13
00:01:05,840 --> 00:01:09,100
webpack configuration files.

14
00:01:09,110 --> 00:01:15,410
Now let's dive into the first of the two and search for the part where you have the css test

15
00:01:15,440 --> 00:01:24,140
and the css loader. There as I showed you in the mentioned module, you have to add modules true to the options

16
00:01:24,140 --> 00:01:32,030
of that loader and add the localIdentName option to basically define the css class name

17
00:01:32,030 --> 00:01:34,910
it will automatically generate and assign.

18
00:01:35,090 --> 00:01:37,630
This should take the original name,

19
00:01:37,790 --> 00:01:44,360
then two underscores, then the local name of the component and then a randomly generated hash with

20
00:01:44,360 --> 00:01:48,860
hash colon base 64:5.

21
00:01:49,220 --> 00:01:56,380
This will generate these unique css class names which are then assigned automatically once we imported

22
00:01:56,390 --> 00:02:02,540
them through that object from the css file as I showed you in that module.

23
00:02:02,540 --> 00:02:09,490
Now copy these two lines with modules and localIdentName and go to the other webpack config file too,

24
00:02:09,620 --> 00:02:14,960
this is the config file for the production build and of course there, we also want to ensure that we

25
00:02:14,960 --> 00:02:23,720
can use css modules. So enter it here in the options, make sure to close that string here, enter it

26
00:02:23,750 --> 00:02:30,830
in the options for css loader so that both webpack config files have been adjusted and saved.

27
00:02:30,830 --> 00:02:35,150
And with that, we got our project set up and we can get started.

28
00:02:35,210 --> 00:02:36,670
Now let's do some cleanup work,

29
00:02:36,830 --> 00:02:43,070
let's remove that logo.svg file which was created automatically, I don't need that and then the

30
00:02:43,080 --> 00:02:50,450
app.js file, we can get rid of the import of that file therefore. We can also clean up the app.js

31
00:02:50,450 --> 00:02:52,270
content here,

32
00:02:52,370 --> 00:03:00,890
remove the class name from the div and remove the app.css imports here even and remove the app.css file,

33
00:03:00,920 --> 00:03:03,000
I don't need to style in here right now.

34
00:03:03,290 --> 00:03:06,040
I will leave the global styling though

35
00:03:06,200 --> 00:03:13,370
but in the index.css file where I set up my global body style and which I still import normally in

36
00:03:13,370 --> 00:03:19,100
quotation marks by referencing the file and not importing a classes object

37
00:03:19,250 --> 00:03:24,030
so therefore it will get applied globally. In that css file,

38
00:03:24,200 --> 00:03:30,050
I want to set the font family to another font. We could of course use that but I picked a different

39
00:03:30,050 --> 00:03:32,220
one which I find a bit more beautiful

40
00:03:32,220 --> 00:03:40,760
basically. I went to use open sans, and for that you can simply search for Google fonts and on the Google

41
00:03:40,760 --> 00:03:46,110
fonts page as I just mentioned is the open sans font here.

42
00:03:46,160 --> 00:03:51,480
Now once you selected this, you can click on at the bottom to customize it and there

43
00:03:51,500 --> 00:03:53,650
I don't just want to pick the regular one,

44
00:03:53,810 --> 00:03:56,400
let's also pick up the bold one in case we need this,

45
00:03:56,480 --> 00:04:00,320
in case we want to have some bold text, for example for headings.

46
00:04:00,410 --> 00:04:07,880
Now with that, let's go to embed and there you find a link to the Google CDN from which you can import

47
00:04:07,880 --> 00:04:08,500
this font

48
00:04:08,630 --> 00:04:12,160
and this is perfectly fine, this is exactly the approach I want to use.

49
00:04:12,650 --> 00:04:18,500
So now with that link, let's go back to our project folder, to the public folder and to the index.html

50
00:04:18,540 --> 00:04:19,350
file

51
00:04:19,610 --> 00:04:22,210
and there I'll add it right above the title.

52
00:04:22,220 --> 00:04:30,590
Now speaking of the title, I'll also adjust this to my burger because well, this should be the name of my application

53
00:04:30,590 --> 00:04:31,150
here.

54
00:04:31,640 --> 00:04:35,960
With that, the setup of the project is pretty much finished,

55
00:04:35,960 --> 00:04:43,790
we can now start writing our react application and implement that component tree we designed in the last

56
00:04:43,790 --> 00:04:44,660
lectures.

57
00:04:44,690 --> 00:04:48,750
So let's move on and start developing these components in the next lecture.

