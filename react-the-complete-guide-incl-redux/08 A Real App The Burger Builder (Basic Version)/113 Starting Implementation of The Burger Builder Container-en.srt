1
00:00:02,180 --> 00:00:05,650
So let's start implementing the burger builder component

2
00:00:05,900 --> 00:00:13,550
and as we identified in our design phase, this should actually be a container because there we plan on

3
00:00:13,550 --> 00:00:17,240
managing the state for the burger we're about to build.

4
00:00:17,330 --> 00:00:23,000
So I will go into the containers folder in the source folder and there I'll create a new subfolder

5
00:00:23,000 --> 00:00:28,170
which i'll name burger builder because that should be the component name.

6
00:00:28,250 --> 00:00:35,690
So there I'll add a burgerbuilder.js file and in there I'm now going to create this component of

7
00:00:35,690 --> 00:00:40,430
course with the class keyword because I need to manage state in there later.

8
00:00:40,800 --> 00:00:47,680
I'll name it burger builder and I need to extend this component object

9
00:00:47,840 --> 00:00:50,460
we can import from react.

10
00:00:50,560 --> 00:00:52,880
So let's add this import right away,

11
00:00:52,880 --> 00:01:02,000
let's also import react to be able to write jsx and then as a named import component from the

12
00:01:02,000 --> 00:01:03,990
react package.

13
00:01:04,150 --> 00:01:06,620
This is our class definition finished,

14
00:01:06,730 --> 00:01:12,590
now as you learn, there is one important lifecycle method we need to implement, the render method.

15
00:01:12,730 --> 00:01:17,970
This is a must because we must tell react what we want to render.

16
00:01:18,070 --> 00:01:25,420
There, you need to return some jsx code and now the question of course is what do we want to return here?

17
00:01:25,510 --> 00:01:29,500
Now this will probably grow as we build this application,

18
00:01:29,500 --> 00:01:35,540
for example we might also return a modal here conditionally if it's about time to show it.

19
00:01:35,980 --> 00:01:43,960
But for now what I want to do is I want to render two different things and I will wrap it with a div

20
00:01:43,970 --> 00:01:44,230
here

21
00:01:44,230 --> 00:01:46,300
for now. Well actually

22
00:01:46,360 --> 00:01:49,560
let's use our auxiliary component for that so

23
00:01:49,700 --> 00:01:58,150
let's quickly import aux from and then go up all the way to the source level hoc aux. Because

24
00:01:58,150 --> 00:02:01,070
i don't really need a div now that I'm thinking about it,

25
00:02:01,190 --> 00:02:07,540
this does it, to simply fulfill the requirement of having a wrapping element. Because here I want to return

26
00:02:07,540 --> 00:02:11,110
two adjacent components in the end,

27
00:02:11,110 --> 00:02:14,100
for now let's use divs as placeholders,

28
00:02:14,470 --> 00:02:17,070
I want to return the burger I built

29
00:02:17,230 --> 00:02:25,060
so a graphical representation of the burger with all the ingredients and below that, I want to have

30
00:02:25,060 --> 00:02:28,270
my build controls or something like that.

31
00:02:28,270 --> 00:02:35,170
So basically an area where I can add and remove ingredients, this is the setup I want to use.

32
00:02:35,170 --> 00:02:37,140
We might add more to this component

33
00:02:37,150 --> 00:02:40,340
as I mentioned but this is the base setup of it.

34
00:02:40,720 --> 00:02:46,210
So for now let me quickly export this class as a default of this file

35
00:02:46,420 --> 00:02:54,190
and let's now import the burger builder after saving it in your app.js file and replace test

36
00:02:54,190 --> 00:02:55,070
with it.

37
00:02:55,420 --> 00:02:59,810
So there, I will import the burger builder from

38
00:02:59,950 --> 00:03:06,220
and now I need to go to the containers folder, to the burger builder folder and use the burgerbuilder.js file of

39
00:03:06,220 --> 00:03:09,260
course without the file extension as you learned.

40
00:03:09,500 --> 00:03:12,260
Burger builder can be a self-closing component,

41
00:03:12,280 --> 00:03:20,140
I don't need to wrap any content with the selectors and after saving this, we should see burger and build

42
00:03:20,140 --> 00:03:21,480
controls.

43
00:03:21,610 --> 00:03:29,760
Now I could understand if you're not totally flashed, this certainly can be improved from a styling perspective.

44
00:03:29,830 --> 00:03:39,010
So first of all let's make sure that we have some margin between our toolbar even though it's just a

45
00:03:39,010 --> 00:03:40,370
placeholder right now

46
00:03:40,570 --> 00:03:48,100
and our other part and I will do this in the layout component because it's there where we have the

47
00:03:48,100 --> 00:03:54,280
area for the toolbar, the area for the main part and I simply want to add a css class to the

48
00:03:54,280 --> 00:04:00,210
main element here to make sure that it has some margin. For that,

49
00:04:00,250 --> 00:04:08,900
I will add a new file layout.css and in that file, I will create a new class and I'll name it content,

50
00:04:09,010 --> 00:04:10,980
the name of course is totally up to you

51
00:04:11,230 --> 00:04:15,410
and there I'll add margin-top 16px.

52
00:04:15,430 --> 00:04:24,910
I will now go back to layout.js file and quickly import classes from this layout.css file and with

53
00:04:24,910 --> 00:04:34,690
that, we can go to the main element here, add class name and there assign classes content, like that.

54
00:04:34,690 --> 00:04:40,110
Now if we save this, we got some margin but still this doesn't exactly look like a burger.

55
00:04:40,120 --> 00:04:43,020
We can probably still increase that

56
00:04:43,090 --> 00:04:50,850
so as a next step let's add a burger component and the burger ingredients which actually should be rendered

57
00:04:50,860 --> 00:04:51,220
there.

