1
00:00:02,170 --> 00:00:09,910
Quindi nell'ultima lezione abbiamo identificato il layout dell'applicazione e l'albero dei componenti qui.

2
00:00:09,970 --> 00:00:12,590
Questo  ovviamente un passo molto importante.

3
00:00:12,610 --> 00:00:14,640
Ora questa  solo una parte.

4
00:00:14,650 --> 00:00:18,490
Abbiamo tutti bisogno di sapere quale stato useremo nella nostra applicazione.

5
00:00:18,500 --> 00:00:24,310
Questo stato diventa importante perch ci consente anche di identificare ci che dovrebbe essere un componente e ci che dovrebbe

6
00:00:24,310 --> 00:00:25,300
essere un contenitore.

7
00:00:25,330 --> 00:00:30,230
Quindi, quale dovrebbe essere uno stato meno componente e quale dovrebbe essere una componente a pieno stato.

8
00:00:30,280 --> 00:00:38,410
nostri stati di applicazione o riepiloghiamo lo stato per l'applicazione mentre lo pianifichiamo qui.

9
00:00:38,410 --> 00:00:39,840
Ora pensiamo ai

10
00:00:40,030 --> 00:00:48,050
Ora nello stato abbiamo sicuramente bisogno di gestire gli ingredienti degli hamburger, gli

11
00:00:48,070 --> 00:00:57,900
ingredienti aggiunti dall'utente saranno probabilmente alcuni oggetti javascript in cui abbiamo qualcosa come carne 1 volte

12
00:00:58,530 --> 00:01:01,790
 due volte e cos via.

13
00:01:01,860 --> 00:01:03,530
Quindi questo potrebbe essere gli ingredienti.

14
00:01:03,720 --> 00:01:09,330
Vogliamo anche sapere se l'utente sta controllando l'hamburger.

15
00:01:09,340 --> 00:01:18,380
Quindi, se hai fatto clic su pre-Chase o non vendere o qualcosa come Per chaced e questo potrebbe essere

16
00:01:18,380 --> 00:01:20,030
vero o falso.

17
00:01:20,660 --> 00:01:24,020
In realt dovrebbe essere quasi tutto.

18
00:01:24,110 --> 00:01:33,380
L'unica cosa probabilmente  un prezzo totale di cui abbiamo bisogno in modo che possiamo sempre vedere qual  il prezzo e possiamo

19
00:01:33,380 --> 00:01:35,180
calcolarlo in modo dinamico.

20
00:01:35,240 --> 00:01:40,460
E, naturalmente, tutto ci che  stato emesso ora  questo il nostro stato.

21
00:01:40,460 --> 00:01:42,490
Super semplice non troppo difficile, giusto.

22
00:01:42,560 --> 00:01:49,300
Ma ci permette di creare quel hamburger dinamico e di produrre gi tutte le informazioni rilevanti per l'utente.

23
00:01:49,310 --> 00:01:52,020
Ora dove gestiamo questo stato.

24
00:01:52,100 --> 00:01:59,270
dire che dovremmo riuscire a indicare nel componente dell'app qui in alto, ma non sono d'accordo.

25
00:01:59,270 --> 00:01:59,740
Potresti

26
00:01:59,750 --> 00:02:01,250
Non lo faremo qui.

27
00:02:01,310 --> 00:02:05,200
Invece dovremmo farlo nel costruttore di hamburger qui.

28
00:02:05,360 --> 00:02:06,210
Perch.

29
00:02:06,500 --> 00:02:14,210
Perch lo stato che ho elencato qui a destra  in realt solo relativo alla costruzione di un hamburger se in seguito aggiungeremo

30
00:02:14,240 --> 00:02:17,300
una nuova pagina di checkout o qualcosa del genere.

31
00:02:17,480 --> 00:02:24,630
Quindi avremo fondamentalmente una pagina in cui vogliamo vedere tutti gli ordini dell'utente e non siamo interessati

32
00:02:24,730 --> 00:02:28,470
agli ingredienti del burger che utilizzano le build ricorrenti.

33
00:02:28,670 --> 00:02:34,520
Quindi, a mio avviso, gestire questo stato a livello di app non  corretto perch non influisce sull'intera app,

34
00:02:34,520 --> 00:02:37,420
ma riguarda solo la pagina di questo generatore di hamburger.

35
00:02:37,490 --> 00:02:41,060
E per ora questa sar la nostra intera app in pratica.

36
00:02:41,060 --> 00:02:45,700
Ma non  come rester la nostra applicazione una volta aggiunta la pagina di checkout e cos via.

37
00:02:46,070 --> 00:02:51,170
Quindi il costruttore di hamburger dovrebbe essere un componente completo di stato.

38
00:02:51,350 --> 00:02:53,970
Dovrebbe essere fondamentalmente un contenitore.

39
00:02:54,110 --> 00:02:56,760
Quindi stato pieno.

40
00:02:56,990 --> 00:03:04,600
di hamburger dovrebbero essere tutti i componenti di Avro possono essere componenti possono essere componenti di scarico di stato meno componenti.

41
00:03:04,610 --> 00:03:06,980
Questo  ci che i produttori

42
00:03:06,980 --> 00:03:12,530
Ora il componente per impostazione predefinita e quindi il progetto  uno stato completo trattato con la parola chiave.

43
00:03:12,770 --> 00:03:18,650
Ovviamente possiamo sempre lasciare che sia uno, ma possiamo anche trasformarlo in un componente di scarico

44
00:03:18,650 --> 00:03:19,850
se lo volessimo.

45
00:03:19,850 --> 00:03:24,880
Ora stiamo pensando ai componenti puri o all'aggiornamento dei componenti.

46
00:03:24,920 --> 00:03:32,300
Entrambi lo implementeranno o lo implementeremo mentre costruiamo l'applicazione e vediamo se siamo in grado di identificare alcuni punti

47
00:03:32,300 --> 00:03:35,990
in cui  necessario ottimizzare il nostro ciclo di aggiornamento.

48
00:03:36,230 --> 00:03:42,050
potrebbe semplicemente impostare lo stage su qualcosa che era gi impostato in modo che potrebbe essere il caso.

49
00:03:42,050 --> 00:03:47,810
Ma a causa della semplicit della nostra propriet e della struttura della nostra applicazione, potrebbe anche accadere che

50
00:03:47,810 --> 00:03:54,480
non abbiamo mai bisogno di implementare componenti puri perch sappiamo che se lo stato o alcuni oggetti di scena cambiano,

51
00:03:54,480 --> 00:03:58,050
come  cambiato davvero, non lo facciamo avere un pulsante che

52
00:03:58,100 --> 00:04:04,430
Daremo un'occhiata a questo aspetto e ci preoccuperemo di implementarlo correttamente e, eventualmente, di

53
00:04:04,460 --> 00:04:07,010
trasformare qualcosa in un componente puro.

54
00:04:07,010 --> 00:04:11,410
Quindi con questo direi creiamo un progetto e iniziamo con quello.

