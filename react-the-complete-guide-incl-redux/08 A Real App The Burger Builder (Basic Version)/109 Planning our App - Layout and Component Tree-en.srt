1
00:00:02,320 --> 00:00:06,260
So let's start planning this component tree, shall we?

2
00:00:06,280 --> 00:00:11,500
And for that of course, we need to define what our application actually is and what it should be able

3
00:00:11,500 --> 00:00:12,300
to do.

4
00:00:12,310 --> 00:00:19,470
Keep in mind, we're building the burger builder application

5
00:00:19,580 --> 00:00:25,560
so the goal is that users can use it to add ingredients and therefore build a burger.

6
00:00:25,560 --> 00:00:31,700
Now if we think about the UI and that is something you typically of course get by your designer or you

7
00:00:31,700 --> 00:00:32,880
already create it

8
00:00:33,110 --> 00:00:40,160
but if we think about the UI, we probably have some header at the top navigation bar where we're then able

9
00:00:40,160 --> 00:00:48,340
to go maybe to all our orders and where we have the builder itself,

10
00:00:48,390 --> 00:00:56,720
so the tool where we can build the burger and probably some logos, some text or an image to the left.

11
00:00:56,750 --> 00:01:01,710
Now the fine tuning, the colors sensor again, that is something you probably got by or designer,

12
00:01:01,760 --> 00:01:03,520
we're not going to take care about this here,

13
00:01:03,530 --> 00:01:06,670
we're going to add some colors as you create the application.

14
00:01:06,680 --> 00:01:12,500
Now what goes on the starting page? Let's say we're on the builder part here now,

15
00:01:12,560 --> 00:01:14,750
how should that look like?

16
00:01:15,260 --> 00:01:21,470
Well of course it's only up to you but for me it makes sense that we have an area where the actual burger

17
00:01:21,830 --> 00:01:22,670
is getting built,

18
00:01:22,670 --> 00:01:29,120
so where we see a preview of the burger we built. So that is super ugly here but that of course should be the

19
00:01:29,120 --> 00:01:34,770
burger we're building with the different ingredients which get added dynamically as we add them. Now

20
00:01:35,090 --> 00:01:37,310
to be able to add ingredients,

21
00:01:37,400 --> 00:01:44,330
we need some controls maybe sitting in a box or something like that below the burger. In there, we have

22
00:01:44,330 --> 00:01:56,450
stuff like meat, salad, cheese maybe even bacon and so on and we essentially got a button to add or remove

23
00:01:56,690 --> 00:02:06,360
each ingredient so that we can well build our burger and then we probably also want to have a check out

24
00:02:06,510 --> 00:02:07,290
button,

25
00:02:07,290 --> 00:02:16,860
so some button sitting below everything where we can tap on to buy our burger and obviously, we maybe

26
00:02:16,860 --> 00:02:23,580
also want to see a price or something like that below our burger as a preview so that we can always

27
00:02:23,580 --> 00:02:25,080
see what it would cost.

28
00:02:25,080 --> 00:02:31,740
Right now, this is the layout, the simple layout but which uses a lot of react concepts and which you

29
00:02:31,740 --> 00:02:35,190
can split up in a lot of components,

30
00:02:35,310 --> 00:02:40,690
for example here, what we'll probably have is a root layout,

31
00:02:40,950 --> 00:02:48,270
so if we build our component tree we probably have our app component

32
00:02:48,480 --> 00:02:56,460
and in this app component, we might define a base layout for this application which basically would be

33
00:02:56,910 --> 00:03:00,490
the header and the part below the header, we could say.

34
00:03:00,870 --> 00:03:07,470
So if we add this here, we might have a layout component

35
00:03:08,650 --> 00:03:14,710
and we could also define that layout in the app component. The layout component probably as I just said

36
00:03:14,710 --> 00:03:21,190
has a couple of other components nested besides it, some component responsive for navigation and for

37
00:03:21,190 --> 00:03:27,310
the content, so the navigation on the other hand might be split up in a tool bar and in a sideDrawer

38
00:03:27,340 --> 00:03:30,170
because we want to create a responsive application

39
00:03:30,250 --> 00:03:34,790
so we have to cater for both mobile devices and desktop devices.

40
00:03:35,020 --> 00:03:39,700
So maybe below our layout, we actually have four different components.

41
00:03:39,700 --> 00:03:46,690
We might have something like a toolbar which is always displayed and the items we display on it varies

42
00:03:46,690 --> 00:03:48,470
by the viewport,

43
00:03:48,820 --> 00:03:55,450
then we might have a sideDrawer, this is simply the side menu we can bring in when we're on the mobile

44
00:03:55,450 --> 00:03:57,820
device. For the sideDrawer

45
00:03:57,820 --> 00:04:01,400
we probably also want to have a backdrop,

46
00:04:01,840 --> 00:04:03,550
so I'll add a backdrop here

47
00:04:03,550 --> 00:04:10,770
too and having that backdrop here might make sense because maybe we also want to show a modal for the check

48
00:04:10,770 --> 00:04:11,220
out

49
00:04:11,290 --> 00:04:16,890
and then also want to have a backdrop on the root level of our dom basically.

50
00:04:17,260 --> 00:04:23,680
And then we want to have something which we can dynamically wrap, so whichever page you want to display.

51
00:04:23,800 --> 00:04:28,020
Later in the app, we're going to add routing so that we can navigate to different pages

52
00:04:28,180 --> 00:04:34,510
so we might want to display the burger builder page or the checkout page but all pages are going to

53
00:04:34,510 --> 00:04:35,840
share that layout.

54
00:04:35,920 --> 00:04:42,010
So we're essentially going to use props.children here,

55
00:04:43,540 --> 00:04:48,930
allowing us to dynamically pass a component in too depending on which page we want to do.

56
00:04:49,000 --> 00:04:56,600
So these are four components, props.children just as a dynamic component which we nest into our layout,

57
00:04:56,650 --> 00:05:02,310
these are the four components we probably have on that layout area here.

58
00:05:02,410 --> 00:05:07,540
So let's quickly connect them to the layout then, shall we, like that.

59
00:05:07,590 --> 00:05:09,970
Now our application is taking shape here,

60
00:05:10,210 --> 00:05:15,060
what should we have below the toolbar then? In the toolbar,

61
00:05:15,100 --> 00:05:20,290
we probably want to start writing the code already we need for the toolbar,

62
00:05:20,310 --> 00:05:26,690
so the hmtl code we could say, but the toolbar also might contain some components we add.

63
00:05:26,710 --> 00:05:33,520
For example we probably want to have a button which toggles that sideDrawer but we'll create these on

64
00:05:33,520 --> 00:05:35,700
the fly basically and see how we split up

65
00:05:35,710 --> 00:05:45,150
but things to keep in mind here are basically the drawer toggle, so a button which targets the sideDrawer,

66
00:05:46,290 --> 00:05:56,190
logo which you want to display and our navigation items and I'm deliberately spanning navigation items below

67
00:05:56,220 --> 00:06:01,850
these sideDrawer here too because there, we're also going to need navigation items

68
00:06:02,070 --> 00:06:09,180
and if we were to outsource navigation items into their own component, we might be able to actually share

69
00:06:09,180 --> 00:06:15,150
them across the toolbar and the sideDrawer because we need the same navigation items, we just need to display

70
00:06:15,150 --> 00:06:18,540
them differently for different viewports.

71
00:06:18,570 --> 00:06:25,560
So in the sideDrawer, we probably also want to use the logo then because again this is something you want

72
00:06:25,560 --> 00:06:30,700
to show in both viewports, just differently styled.

73
00:06:30,870 --> 00:06:35,600
So this might be how sideDrawer and toolbar are structured,

74
00:06:35,970 --> 00:06:42,190
that backdrop basically will just hold some html code, we won't have nested children.

75
00:06:42,330 --> 00:06:44,790
So that leaves us the props.children,

76
00:06:44,790 --> 00:06:46,900
that's of course important. Here

77
00:06:46,920 --> 00:06:55,690
we have different pages but for now we're only going to start with one page, that will be our burger

78
00:06:56,970 --> 00:07:03,040
builder page, so a burger builder component.

79
00:07:03,180 --> 00:07:05,710
Now how should that burger builder

80
00:07:05,740 --> 00:07:11,190
then look like? That burger builder in the end has to give us the build controls,

81
00:07:11,210 --> 00:07:17,690
we have a look at our layout, the build controls, the part where we can add and remove meat, salad and

82
00:07:17,690 --> 00:07:22,280
cheese and the check out button and the preview of the burger,

83
00:07:22,280 --> 00:07:26,570
these are the essential building blocks of the burger builder.

84
00:07:26,930 --> 00:07:36,550
So what we need in the end here is a couple of components, we need to have our build controls,

85
00:07:36,690 --> 00:07:43,350
again with all these ingredient buttons, we need to have the burger component giving us that preview of the

86
00:07:43,350 --> 00:07:49,850
burger and I also want to have some modal which gives us a

87
00:07:50,160 --> 00:07:55,950
check out preview, so where we basically see a summary and could proceed to check out, something like that.

88
00:07:56,890 --> 00:08:03,310
So these are the general components and again we might find a finer split or some subcomponents you

89
00:08:03,310 --> 00:08:04,190
want to create

90
00:08:04,300 --> 00:08:06,310
once we actually start working on this

91
00:08:06,330 --> 00:08:08,040
but for now, that's the split

92
00:08:08,050 --> 00:08:14,980
I want to have here. Now if you think about the build controls then, how should these be structured, what's

93
00:08:14,980 --> 00:08:18,130
the build controls components content?

94
00:08:18,700 --> 00:08:26,590
Well it probably is a list of individual build control components,

95
00:08:26,710 --> 00:08:32,070
so something like this, build control. It's of course one and the same component,

96
00:08:32,080 --> 00:08:33,620
just a list of it

97
00:08:33,760 --> 00:08:44,520
so it might look like that and of course we probably also want to have our order button there, like this

98
00:08:44,900 --> 00:08:48,730
so that we have a button to check this burger out.

99
00:08:48,780 --> 00:08:57,520
Now for that, we have to list for one but then we also have this order button additional sitting below

100
00:08:57,520 --> 00:08:58,560
it.

101
00:08:58,630 --> 00:09:04,940
Now the individual build control elements and the order button are probably just going to contain some

102
00:09:04,950 --> 00:09:08,710
html, and with that I always mean jsx code.

103
00:09:08,710 --> 00:09:16,810
Now how does the burger preview look like? The burger preview basically should hold a couple of ingredient

104
00:09:17,110 --> 00:09:17,900
components,

105
00:09:17,980 --> 00:09:24,610
so a list of ingredients which we dynamically manage of course, which the user dynamically manages with

106
00:09:24,610 --> 00:09:26,180
the build controls.

107
00:09:26,380 --> 00:09:28,040
So that's the idea here,

108
00:09:28,060 --> 00:09:33,850
we're going to have that list of ingredients below the burger component and each ingredient probably

109
00:09:33,850 --> 00:09:41,830
is just something like that div which either displays an image or where we create ingredient representation

110
00:09:42,010 --> 00:09:48,160
with css, we will add this styling together of course. And the modal finally,

111
00:09:48,250 --> 00:09:56,740
well that probably should just be a wrapper component which in the end takes props.children to wrap

112
00:09:56,740 --> 00:10:02,920
itself around any content we want to render in a modal so that we have a reusable modal we could theoretically

113
00:10:02,920 --> 00:10:10,360
use for all kinds of stuff, displaying a confirmation message, an error message or an order summary as we plan

114
00:10:10,360 --> 00:10:11,960
to do. So

115
00:10:11,980 --> 00:10:18,170
these are probably not all the components were going to add but it is a good overview over our tree.

116
00:10:18,220 --> 00:10:26,050
We see that everything starts with one root component here at the top and then we split the tree up,

117
00:10:26,050 --> 00:10:29,220
having a layout which could be part of the root component

118
00:10:29,230 --> 00:10:36,460
as I mentioned and then having all the different branches. Now here, where we have the burger builder,

119
00:10:36,910 --> 00:10:39,420
this will be kind of like a page.

120
00:10:39,520 --> 00:10:40,780
It is a normal component

121
00:10:40,780 --> 00:10:47,800
no worries, but we probably will add more pages throughout this course when we start adding a page where we

122
00:10:47,800 --> 00:10:51,040
can see all past orders and stuff like that.

123
00:10:51,480 --> 00:10:55,430
Let's in the next step identify the state of our application.

