1
00:00:02,200 --> 00:00:04,810
As que estos fueron mis dos centavos sobre tipos de Prop.

2
00:00:04,870 --> 00:00:09,560
Qu pasa con los componentes puros y debera actualizarse el componente?

3
00:00:09,580 --> 00:00:12,400
No estamos usando datos en la aplicacin.

4
00:00:12,460 --> 00:00:15,130
Ahora analicemos la aplicacin.

5
00:00:15,130 --> 00:00:23,410
Tenemos algn cambio en el estado o prop que provoque una nueva irradiacin, aunque esto podra no ser necesario si echamos

6
00:00:24,370 --> 00:00:27,340
un vistazo a la aplicacin en ejecucin.

7
00:00:27,340 --> 00:00:36,880
La mayora de los clics y las cosas que hacemos realmente cambian la interfaz de usuario y, por lo tanto, las actualizaciones

8
00:00:37,210 --> 00:00:40,840
deberan desencadenar una nueva lectura de estos componentes.

9
00:00:40,900 --> 00:00:43,360
Entonces, realmente no deberamos perder el rendimiento all.

10
00:00:43,540 --> 00:00:49,030
Y si se utilizan muchos componentes puros innecesarios, las comprobaciones de actualizacin de los

11
00:00:49,030 --> 00:00:54,460
componentes podran incluso afectar el rendimiento ms que realizar un procesamiento ocasional e innecesario.

12
00:00:54,940 --> 00:01:00,420
Puntos cruciales que debemos consultar nuestro Por supuesto nuestro Burger Bolar contenedor.

13
00:01:00,610 --> 00:01:07,060
All cambiamos el estado, pero cada vez que hacemos un cambio para indicar que realmente

14
00:01:07,060 --> 00:01:09,490
afecta nuestra aplicacin, debemos recordar cosas.

15
00:01:09,610 --> 00:01:17,020
Sin embargo, aqu puedo identificar un elemento en el que podramos ahorrar algo de rendimiento al

16
00:01:17,020 --> 00:01:18,310
no presentarlo innecesariamente.

17
00:01:18,550 --> 00:01:20,860
Y ese es el componente modal.

18
00:01:20,980 --> 00:01:28,660
Envuelve el resumen de las rdenes y, por supuesto, significa que cada vez que los ingredientes o los precios cambien, ya

19
00:01:29,110 --> 00:01:34,390
que estos son los accesorios de la orden, se presentar un resumen de la orden.

20
00:01:34,570 --> 00:01:39,060
Sin embargo, si la movilidad no es posible, no es necesario que hagamos eso.

21
00:01:39,310 --> 00:01:46,860
Entonces, en realidad, solo si se muestra el mdem, la reproduccin de ese elemento envuelto aqu tiene sentido.

22
00:01:46,870 --> 00:01:51,200
Entonces eso es algo que podramos querer controlar y controlar.

23
00:01:51,370 --> 00:01:58,480
As que, antes que nada, descubramos cundo se procesa el resumen ordenado simplemente aadindole un enlace de ciclo

24
00:01:58,480 --> 00:01:59,060
de vida.

25
00:01:59,140 --> 00:02:00,960
As que vaya al resumen de la orden.

26
00:02:01,150 --> 00:02:05,070
Y actualmente esto es, por supuesto, un componente funcional.

27
00:02:05,380 --> 00:02:11,350
Vamos a convertirlo en un componente de clase para que podamos agregar ganchos de ciclo de vida para que podamos ver

28
00:02:11,350 --> 00:02:12,310
cundo se actualiza.

29
00:02:12,550 --> 00:02:21,660
As que vamos a extender el objeto componente que, por supuesto, ahora necesitamos importar desde el acto y

30
00:02:21,810 --> 00:02:29,450
all mientras aprendes que necesitamos tener un mtodo de renderizado donde necesitamos devolver nuestro cdigo GSX.

31
00:02:29,460 --> 00:02:33,170
As que bsicamente este cdigo aqu.

32
00:02:33,300 --> 00:02:38,180
Ahora tambin tenemos algunos ajustes Urey resumen de ingredientes que calculamos.

33
00:02:38,240 --> 00:02:41,210
Entonces, hagmoslo antes de volver a J como cdigo X.

34
00:02:41,220 --> 00:02:47,280
Pero dentro del mtodo de renderizado y ahora podemos deshacernos de esas cosas all abajo y tenemos que

35
00:02:47,410 --> 00:02:55,880
ajustar el nombre exportado y los accesorios ahora siempre son estos accesorios a medida que aprendes ese es el caso en los componentes basados en clases.

36
00:02:56,900 --> 00:03:04,510
As que con eso, qu ms falta aqu? Tambin obtuvimos accesorios, as que ese debera ser el ao de la utilera tambin.

37
00:03:04,550 --> 00:03:08,050
Ahora si esa seguridad debera funcionar de nuevo debera estar funcionando bien.

38
00:03:08,510 --> 00:03:16,270
No implementemos Meffert para ver cundo se actualizar realmente. Agregar que el componente se actualizar aqu.

39
00:03:16,760 --> 00:03:24,960
Y simplemente quiero consolar a Larke. El resumen de la orden se actualizar.

40
00:03:25,040 --> 00:03:27,560
Ahora veamos las actualizaciones de Windows.

41
00:03:27,560 --> 00:03:32,530
Si volvemos a cargar la aplicacin y aadimos un ingrediente, ver que se actualizar el resumen de la orden.

42
00:03:32,540 --> 00:03:38,910
Aunque no lo mostramos, no tiene mucho sentido estar muerto.

43
00:03:39,050 --> 00:03:46,770
Ahora veamos si eso cambia si nos aseguramos de que el mvil no se actualice innecesariamente.

44
00:03:46,920 --> 00:03:53,450
Y para eso vayamos al archivo modal jazz y ese es todo el trmino modal en una clase

45
00:03:53,450 --> 00:03:56,210
para que podamos implementar la actualizacin del componente.

46
00:03:56,210 --> 00:04:00,110
Por lo tanto, modal tambin extender el componente.

47
00:04:00,460 --> 00:04:10,820
Importemos el componente de la rplica y exportemos el modal cambiado y, por supuesto, ahora tambin nos aseguramos de implementar un cuerpo de clase

48
00:04:10,820 --> 00:04:17,940
con un mtodo de representacin donde ahora devolvemos nuestro cdigo de crceles X de esta manera.

49
00:04:18,970 --> 00:04:22,780
Aqu y deshazte de esas cosas que ya no necesitamos.

50
00:04:22,840 --> 00:04:31,860
Y como siempre, asegrese de que los accesorios se conviertan en accesorios para que la lista de moda trabaje de nuevo.

51
00:04:31,860 --> 00:04:42,000
Y ahora veamos si podemos controlar la actualizacin del resumen de orden que est envuelto por el modelo cambiando la forma en

52
00:04:42,000 --> 00:04:44,510
que se actualiza el mdem.

53
00:04:44,550 --> 00:04:53,750
As que simplemente agreguemos la actualizacin del componente de la camisa a la demostracin y obtendremos los prximos accesorios y la siguiente

54
00:04:53,780 --> 00:04:55,670
etapa del teatro como argumentos.

55
00:04:55,670 --> 00:05:03,140
As que ahora quiero verificar o ahora puedo asegurarme de que esto solo se actualice si se muestran cambios porque eso

56
00:05:03,140 --> 00:05:05,420
es lo nico que me importa aqu.

57
00:05:05,750 --> 00:05:18,050
Entonces, si los prximos accesorios muestran si mi padre es igual a los pronsticos de este puntal hasta el estado anterior, entonces quiero volver

58
00:05:18,050 --> 00:05:25,390
verdadero o simplemente podemos acortar esto y simplemente devolver el resultado de este control.

59
00:05:25,430 --> 00:05:27,260
Entonces eso es lo que quiero hacer aqu.

60
00:05:28,330 --> 00:05:34,390
Ahora vamos a actualizar todo el componente del elemento aqu para confirmar si esto funciona.

61
00:05:34,390 --> 00:05:43,230
As que simplemente voy a consolar el bloqueo modal Actualizaremos y guardaremos como componente ahora.

62
00:05:43,320 --> 00:05:50,560
Ahora veamos si ahora vuelvo a cargar la pgina y empiezo a agregar elementos. Vemos que el resumen de las rdenes no

63
00:05:50,560 --> 00:05:51,710
llama. Ya no actualizaremos.

64
00:05:51,820 --> 00:05:53,130
Para hacer clic ahora

65
00:05:53,130 --> 00:05:57,160
Ahora la actualizacin de mvil se llama resumen de orden y actualizaremos su llamada.

66
00:05:57,400 --> 00:06:04,420
As que aqu definitivamente mejoramos nuestra aplicacin porque nos aseguramos de no actualizar innecesariamente el resumen

67
00:06:04,450 --> 00:06:07,650
de pedidos que no re-leemos innecesariamente estn muertos.

68
00:06:07,930 --> 00:06:15,090
Y tambin ver que el elemento de ajuste controla la actualizacin del elemento envuelto.

69
00:06:15,190 --> 00:06:22,540
Por lo tanto, los pedidos de resumen tericos a componentes se incluyen en el generador de Bergere pero no se actualizan

70
00:06:22,780 --> 00:06:26,230
porque el elemento modal de ajuste tiene un componente seguro.

71
00:06:26,230 --> 00:06:29,360
Actualice Meffert donde controlamos esto.

72
00:06:29,630 --> 00:06:37,090
aqu est bastante limpio en el modelo y lo que no hacemos no reaccionamos a los cambios en el oyente cliqueado.

73
00:06:37,180 --> 00:06:38,190
Ahora nuestro cdigo

74
00:06:38,260 --> 00:06:42,760
Entonces, si la propiedad de la ropa modelo cambiara, no lo hacemos.

75
00:06:43,000 --> 00:06:46,600
Entonces solo volvemos cierto si Show cambi.

76
00:06:46,600 --> 00:06:51,200
Est bien aqu en esta aplicacin porque en realidad nunca reasignamos este oyente cliqueado.

77
00:06:51,310 --> 00:06:59,470
Si tuviramos que hacer eso o si tuviramos que alterar el estado de cambio en el modelo, definitivamente tambin deberamos verificar los cambios

78
00:06:59,470 --> 00:07:06,520
en nuestros atributos y propiedades de estado promedio o simplemente extender el componente puro aqu. No estoy usando componente puro

79
00:07:06,540 --> 00:07:10,740
porque el componente puro funcionara ms cheques de lo que quiero hacer

80
00:07:10,810 --> 00:07:14,410
El componente puro tambin verificara si el mvil cercano a ser cambiado.

81
00:07:14,680 --> 00:07:16,040
Y no estoy interesado en eso.

82
00:07:16,060 --> 00:07:21,270
Por lo tanto, mis esfuerzos deberan ser an ms sencillos e incluso ms centrados.

83
00:07:21,330 --> 00:07:29,550
Ahora con eso podemos, por supuesto, tambin convertir nuestro resumen de orden en un componente funcional para dejar de producir

84
00:07:29,580 --> 00:07:30,480
el componente.

85
00:07:30,480 --> 00:07:35,620
Se actualizar aqu, pero lo dejar aqu para fines de depuracin para referencia.

86
00:07:35,700 --> 00:07:42,380
Pero comentar que esto podra ser un componente funcional.

87
00:07:44,840 --> 00:07:48,660
No tiene que ser necesariamente una clase.

88
00:07:48,710 --> 00:07:54,430
actualizacin configurable, definitivamente no se requiere la actualizacin del componente porque no es necesario que verifiquemos esto.

89
00:07:54,590 --> 00:07:56,750
Y, por supuesto, no se requiere una

90
00:07:56,800 --> 00:08:02,790
Esto siempre debe actualizarse si se muestra el modelo y el modelo es donde lo hacemos. Verifique donde

91
00:08:02,810 --> 00:08:04,610
necesite ser actualizado o no.

92
00:08:04,790 --> 00:08:08,210
Esta es una mejora que podemos agregar a esta aplicacin.

