1
00:00:02,420 --> 00:00:03,710
Agora que o planejamento est pronto.

2
00:00:03,740 --> 00:00:08,060
Vamos mergulhar no projeto e vamos realmente criar esse aplicativo.

3
00:00:08,240 --> 00:00:13,740
Florida's abri um novo projeto criado com o criador re-act app.

4
00:00:13,880 --> 00:00:16,450
Nada ainda foi alterado aqui.

5
00:00:16,520 --> 00:00:24,230
Agora, neste projeto, primeiro quero ativar os mdulos CSS para que eu possa ter certeza de que este

6
00:00:24,250 --> 00:00:32,630
Cs como classes que criamos em um arquivo CSS pode ser dimensionado para um componente especfico em nosso aplicativo

7
00:00:32,630 --> 00:00:39,350
para que eles no sejam aplicados Clovelly quando gostaramos reutilize acidentalmente a mesma classe CSSA.

8
00:00:39,530 --> 00:00:42,400
Para isso eu preciso comer o projeto.

9
00:00:42,410 --> 00:00:44,690
Como voc aprendeu, ento vamos fazer isso primeiro.

10
00:00:44,750 --> 00:00:52,670
Vamos executar a execuo do NPM ejetar no Projeto recm-criado e isso agora nos perguntar se realmente queremos verificar.

11
00:00:52,670 --> 00:01:00,260
Ento, vou confirmar isso com Y para sim e agora como a vimos antes no mdulo onde eu mostrei como implementar

12
00:01:00,260 --> 00:01:05,840
Seer's como mdulo voc obtm acesso ao conflito em uma pasta de conflito e h

13
00:01:05,840 --> 00:01:09,100
dois devido a arquivos de configurao de pacote molhado.

14
00:01:09,110 --> 00:01:15,410
Agora vamos mergulhar no primeiro dos dois e procurar a parte em que voc deve avaliar o teste.

15
00:01:15,440 --> 00:01:24,140
UMA. S. s s carregador l como eu mostrei voc no mdulo de meno voc tem que adicionar mdulos verdadeiros

16
00:01:24,140 --> 00:01:32,030
s opes desse carregador e na sua opo de nome ident local para basicamente definir D. C. 's como nome da classe.

17
00:01:32,030 --> 00:01:34,910
Ele ir gerar e atribuir automaticamente.

18
00:01:35,090 --> 00:01:37,630
Isso deve levar o nome original.

19
00:01:37,790 --> 00:01:44,360
Em seguida, dois sublinhados, em seguida, o nome local do componente e, em seguida, o nosso

20
00:01:44,360 --> 00:01:48,860
hash gerado aleatoriamente com hash colon base 64 carvo e fogo.

21
00:01:49,220 --> 00:01:56,380
Isso gerar esses nomes de classe CSX exclusivos que so atribudos automaticamente uma vez que os

22
00:01:56,390 --> 00:02:02,540
importmos desse objeto do arquivo C S S, conforme mostrei voc nesse mdulo.

23
00:02:02,540 --> 00:02:09,490
Agora, copie essas duas linhas com mdulos e nome de nus local e v para o conflito Weaf do arbor Faltu.

24
00:02:09,620 --> 00:02:14,960
assim que ambos os arquivos de configurao do WePay foram ajustados e salvos.

25
00:02:14,960 --> 00:02:23,720
 para convencer o arquivo para a construo da produo e, claro, tambm queremos garantir que possamos usar os mdulos caesuras para

26
00:02:23,750 --> 00:02:30,830
inseri-lo aqui nas opes, certifique-se de fechar aquela seqncia que voc inseriu nas opes para DC como carregador

27
00:02:30,830 --> 00:02:35,150
E com isso conseguimos nosso projeto configurado e podemos comear.

28
00:02:35,210 --> 00:02:36,670
Agora vamos fazer algum trabalho de limpeza.

29
00:02:36,830 --> 00:02:43,070
Vamos remover esse logotipo em relao a cada arquivo que foi criado automaticamente. No estou morto

30
00:02:43,080 --> 00:02:50,450
e, na verdade, na medida em que podemos nos livrar da importao do arquivo, podemos tambm limpar o aplicativo.

31
00:02:50,450 --> 00:02:52,270
J. S. Contedo aqui.

32
00:02:52,370 --> 00:03:00,890
Remova o nome da classe da morte e remova as importaes D C S S aqui ou mesmo e remova o Deepsea como queda.

33
00:03:00,920 --> 00:03:03,000
No preciso marcar aqui agora.

34
00:03:03,290 --> 00:03:06,040
De qualquer forma, deixarei o estilo global.

35
00:03:06,200 --> 00:03:13,370
Mas nos ndices como queda onde eu configurei meu estilo de corpo global e que eu ainda importo

36
00:03:13,370 --> 00:03:19,100
normalmente entre aspas, fazendo referncia ao arquivo e no importando o objeto de um Klaas.

37
00:03:19,250 --> 00:03:24,030
Portanto, ele ser aplicado globalmente como ndices como arquivo.

38
00:03:24,200 --> 00:03:30,050
Eu quero definir a famlia de fontes para uma srie de fontes que, claro, podemos usar o passo, mas escolhi um

39
00:03:30,050 --> 00:03:32,220
diferente que eu acho um pouco mais bonito.

40
00:03:32,220 --> 00:03:40,760
procurar Google Forms e na pgina de fontes do Google, como acabou de mencionar, abre o sentido aqui.

41
00:03:40,760 --> 00:03:46,110
Basicamente, fui usar o sentido aberto e, para isso, voc simplesmente pode

42
00:03:46,160 --> 00:03:51,480
Agora, uma vez que voc seleciona isso, voc pode clicar na parte inferior para personaliz-lo e l.

43
00:03:51,500 --> 00:03:53,650
Eu no quero apenas escolher o regular.

44
00:03:53,810 --> 00:03:56,400
Vamos todos pegar o ousado caso precisamos disso.

45
00:03:56,480 --> 00:04:00,320
Caso voc queira ter algum texto em negrito, por exemplo, para ttulos.

46
00:04:00,410 --> 00:04:07,880
Agora, com isso, vamos mal, e voc encontra um link para o Google CDN a partir do qual voc pode importar

47
00:04:07,880 --> 00:04:08,500
este fundo.

48
00:04:08,630 --> 00:04:12,160
E aqueles perfeitamente bem fazem exatamente a abordagem quando uso.

49
00:04:12,650 --> 00:04:18,500
Ento, agora com esse link, vamos voltar para a pasta do projeto para a pasta pblica e para o ndice

50
00:04:18,540 --> 00:04:19,350
h ele L5.

51
00:04:19,610 --> 00:04:22,210
E todos so adicionados logo acima do ttulo.

52
00:04:22,220 --> 00:04:30,590
Agora, falando sobre o ttulo tambm  justia ao meu hambrguer, porque este deve ser o nome da minha aplicao

53
00:04:30,590 --> 00:04:31,150
aqui.

54
00:04:31,640 --> 00:04:35,960
Com isso, o conjunto do projeto est praticamente terminado.

55
00:04:35,960 --> 00:04:43,790
Agora podemos comear a escrever o nosso aplicativo de reao e implementar esse componente que criamos nas

56
00:04:43,790 --> 00:04:44,660
ltimas palestras.

57
00:04:44,690 --> 00:04:48,750
Ento, vamos continuar e comear a desenvolver esses componentes na prxima palestra.

