1
00:00:02,060 --> 00:00:06,620
Portanto, agora que sabemos quais ferramentas usamos e por que o teste em geral

2
00:00:06,620 --> 00:00:13,010
 uma boa ideia,  claro que precisamos descobrir o que devemos testar e, a, a resposta  direta.

3
00:00:13,040 --> 00:00:19,760
Na verdade, escrever bons testes  bastante complexo e requer muita prtica, o que tambm  uma das

4
00:00:19,760 --> 00:00:22,520
razes pelas quais este no  um guia

5
00:00:22,580 --> 00:00:23,700
de testes completo.

6
00:00:24,050 --> 00:00:27,450
Ento, em geral, aqui esto algumas coisas que voc no

7
00:00:27,470 --> 00:00:29,220
gostaria de testar, voc no

8
00:00:29,240 --> 00:00:33,340
quer testar a biblioteca, voc no quer testar reagir ou axios

9
00:00:33,590 --> 00:00:38,270
ou redux, estas so bibliotecas de terceiros que j foram testadas pelo desenvolvedores.

10
00:00:38,270 --> 00:00:40,400
Voc no precisa testar se eles funcionam

11
00:00:40,460 --> 00:00:44,610
corretamente, voc no precisa testar se a loja, o repositrio redux est funcionando corretamente,

12
00:00:44,720 --> 00:00:45,940
voc quer testar o

13
00:00:45,980 --> 00:00:51,520
cdigo que voc adiciona  sua aplicao e l voc quer testar o cdigo que no usa essa biblioteca.

14
00:00:51,530 --> 00:00:57,830
Ento, por exemplo, se voc est enviando um axios post request, voc no precisa testar se ele  enviado com sucesso, se ele falhar voc

15
00:00:58,040 --> 00:01:04,100
provavelmente no tem conexo com a internet, no  a biblioteca axios. Voc normalmente deseja falsificar os dados que recebe

16
00:01:04,100 --> 00:01:10,700
do meu servidor em tal caso de uso e apenas testar o que est fazendo com esses dados

17
00:01:10,700 --> 00:01:11,300
retornados, ento

18
00:01:11,420 --> 00:01:14,360
essa  a ideia por trs dos testes.

19
00:01:14,360 --> 00:01:19,580
Alm disso, voc no quer testar conexes muito complexas, especialmente em react, h o

20
00:01:19,580 --> 00:01:24,770
perigo de testar que voc clica em um boto em um componente e altera

21
00:01:24,770 --> 00:01:26,770
algo em um componente totalmente diferente.

22
00:01:26,780 --> 00:01:33,050
Agora voc no tem que testar se a reao  capaz de usar o conceito de adereos para emitir um evento

23
00:01:33,050 --> 00:01:33,660
e passar

24
00:01:33,920 --> 00:01:39,080
adiante, voc estaria interessado em testar se o boto clicar na sua reao desencadeia um objeto especfico

25
00:01:39,080 --> 00:01:40,160
em primeiro lugar ou

26
00:01:40,310 --> 00:01:46,790
se A mudana nos dados que voc recebe via adereos em um componente leva a um resultado diferente sendo processado, que 

27
00:01:46,850 --> 00:01:48,570
o que voc deseja testar.

28
00:01:48,590 --> 00:01:55,320
Existem alguns guias de teste que dizem at onde os componentes reagem, voc s precisa testar

29
00:01:55,320 --> 00:01:58,310
se um componente reagente  renderizado corretamente.

30
00:01:58,310 --> 00:02:04,250
Agora vou mostrar como testar coisas diferentes com componentes reagentes, mas tenha em

31
00:02:04,250 --> 00:02:06,830
mente, no teste conexes muito complexas.

32
00:02:06,890 --> 00:02:08,980
Ento essas so as coisas que voc

33
00:02:09,110 --> 00:02:14,210
no quer testar, o que voc vai testar ento? Exemplos tpicos so unidades isoladas, voc quer

34
00:02:14,210 --> 00:02:17,160
testar a funo de redutor que voc criou,

35
00:02:17,270 --> 00:02:20,660
voc quer testar a funo de componente que voc

36
00:02:20,660 --> 00:02:23,860
criou, voc tambm quer testar a sada condicional se

37
00:02:23,960 --> 00:02:31,160
seu componente tiver uma propriedade que leva a algo sendo renderizado se essa propriedade for verdadeira , ento voc

38
00:02:31,160 --> 00:02:33,430
quer testar se isso realmente acontece.

39
00:02:33,590 --> 00:02:36,790
O que acontece se alguma propriedade mudar no seu componente?

40
00:02:36,890 --> 00:02:39,150
Isso afeta a sada corretamente?

41
00:02:39,350 --> 00:02:42,980
Estas so coisas que voc deseja testar nos seus testes de unidade.

42
00:02:42,980 --> 00:02:48,330
Agora, com esse conhecimento adquirido, vamos aprender como realmente escrevemos testes de unidade em um aplicativo de resposta.

