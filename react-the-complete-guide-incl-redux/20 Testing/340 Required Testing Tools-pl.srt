1
00:00:02,070 --> 00:00:05,220
Tak wic dowiedzielimy si, e testowanie moe

2
00:00:05,220 --> 00:00:07,170
mie sens, jak wtedy testujemy?

3
00:00:07,530 --> 00:00:13,370
Potrzebujemy dwch narzdzi do napisania dobrych testw i przetestowania naszej aplikacji.

4
00:00:13,410 --> 00:00:16,270
Pierwsze narzdzie to biegacz testowy, to

5
00:00:16,350 --> 00:00:20,690
jest zasadniczo narzdzie, ktre jest odpowiedzialne za wykonanie naszych testw,

6
00:00:20,730 --> 00:00:27,720
wic do uruchomienia kodu, kodu testowego i dostarczenia biblioteki walidacyjnej, ktra w kocu jest bibliotek, ktra

7
00:00:27,720 --> 00:00:31,610
pozwala nam na porwnania i potencjalnie rzuci troch bdy.

8
00:00:31,650 --> 00:00:38,700
Ide testw jednostkowych jest to, e nie dziaaj one w przegldarce, ale zamiast tego z nodeJS, cho czsto emulowane

9
00:00:38,760 --> 00:00:45,530
s w rodowisku przegldarki za pomoc okrelonych pakietw javascript. Runner testowy jest wtedy podstawowym narzdziem, ktre po

10
00:00:45,580 --> 00:00:50,360
prostu wykonuje nasz kod przy uyciu tego rodowiska, a dobrze, e

11
00:00:50,520 --> 00:00:55,140
aplikacja reagowania jest ju dostarczana z wstpnie skonfigurowanym rodowiskiem testowym,

12
00:00:55,140 --> 00:00:56,510
ktre moemy rozbudowa.

13
00:00:56,850 --> 00:01:02,490
Wic to jest biegacz testowy i uyjemy artu w tym kursie, art jest ju zainstalowany w

14
00:01:02,490 --> 00:01:08,460
aplikacji stworzonej za pomoc aplikacji do reagowania i jest popularnym narzdziem do testowania javascript, ktre nie jest

15
00:01:08,490 --> 00:01:15,450
ograniczone do reagowania, ale czsto uywane w aplikacjach reagowania. Przeprowadzanie testu to jedna rzecz, podczas pracy z reagujcymi

16
00:01:15,450 --> 00:01:22,380
komponentami, potrzebujemy take sposobu na emulowanie tych komponentw, wic w zasadzie montujemy je do jakiej nieistniejcej domeny,

17
00:01:22,380 --> 00:01:28,350
ktr mona powiedzie, a nastpnie przechodzimy przez nasze komponenty i chcemy to zrobi w Efektywny

18
00:01:28,350 --> 00:01:34,340
szybki sposb, bez koniecznoci tworzenia caego drzewa komponentw, co moe rwnie powodowa pewne skutki uboczne.

19
00:01:34,680 --> 00:01:42,030
W tym celu potrzebujemy narzdzi testujcych, ktre pomagaj nam w testowaniu. Potrzebna nam jest wanie opisana pomoc

20
00:01:42,030 --> 00:01:48,510
do symulacji aplikacji reagowania, montowania komponentw i kopania w domenie, ktra jest tworzona z reakcj.

21
00:01:49,230 --> 00:01:55,680
W tym kursie moglimy reagowa na testy, to oficjalne narzdzie narzdziowe, ale jest jeszcze inne narzdzie,

22
00:01:55,680 --> 00:02:01,160
ktre staje si coraz waniejsze i bardziej interesujce, a take jest zasugerowane przez zesp

23
00:02:01,260 --> 00:02:04,980
reagujcy i to enzym. Enzym to narzdzie opracowane przez

24
00:02:04,980 --> 00:02:11,400
AirBnB, ktre reaguje na wiele swoich projektw i korzystaj z tego narzdzia, ktre uatwia montowanie komponentw, a

25
00:02:11,610 --> 00:02:13,480
nastpnie nawigowanie po nich, a

26
00:02:13,530 --> 00:02:18,710
ja oczywicie poka ci, jak uywa obu narzdzi, jest i enzymu W tym kursie.

27
00:02:18,720 --> 00:02:24,450
To s narzdzia do testowania, ktre pozostawiaj nam tylko jedno pytanie, co powinnimy przetestowa?

