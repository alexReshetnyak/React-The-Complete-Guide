1
00:00:02,100 --> 00:00:06,510
W ostatnim wykadzie napisalimy nasz pierwszy test, ktry jest oczywicie adny,

2
00:00:06,540 --> 00:00:10,360
teraz napiszmy kolejny test dla tego samego komponentu na teraz.

3
00:00:10,530 --> 00:00:16,560
Wic skopiuj t funkcj i wewntrz opisanej funkcji, wklej j tam,

4
00:00:16,560 --> 00:00:18,460
co jeszcze moemy przetestowa?

5
00:00:18,750 --> 00:00:21,750
Oczywicie oczywicie moglibymy przetestowa co

6
00:00:21,780 --> 00:00:29,980
przeciwnego, chcemy mie trzy elementy nawigacyjne, jeli jestemy uwierzytelnieni, wic w tym celu wystarczy

7
00:00:30,000 --> 00:00:38,280
poda test uwierzytelniony i dostosowa nasz test. Tak wic powinnimy renderowa trzy elementy nawigacyjne, jeli s

8
00:00:38,640 --> 00:00:42,110
uwierzytelnione, jeli nie, ale jeli s uwierzytelnione.

9
00:00:42,240 --> 00:00:45,930
Teraz musimy zmieni wyrenderowany komponent, to ju nie

10
00:00:45,930 --> 00:00:53,340
elementy nawigacyjne, ale elementy nawigacyjne z waciwoci s uwierzytelnione, a przekazanie tego w ten sposb

11
00:00:53,340 --> 00:01:00,420
automatycznie przekae je jako prawdziwe, wtedy spodziewamy si znale elementy nawigacyjne, ale spodziewamy si

12
00:01:00,420 --> 00:01:02,350
znale trzy z nich

13
00:01:02,610 --> 00:01:05,660
i to wszystko. W przypadku testw na

14
00:01:05,670 --> 00:01:09,850
Nm, wszystko co musisz zrobi, to zapisa i teraz powiniene zobaczy,

15
00:01:09,910 --> 00:01:12,100
e dwa testy przeszy pomylnie.

16
00:01:12,330 --> 00:01:15,450
Teraz oczywicie moemy napisa wiele takich testw, ale

17
00:01:15,450 --> 00:01:21,510
jeli cigle robimy to samo na pocztku testu, to znaczy, e zrobilimy opakowanie, mimo e

18
00:01:21,510 --> 00:01:24,300
rekwizyty si zmieniy, ale moemy to zrobi

19
00:01:24,540 --> 00:01:31,910
inaczej, wic jeli cigle robimy to samo, jest metod pomocnicz, ktr moemy wykorzysta w opisywanej funkcji tutaj.

20
00:01:31,950 --> 00:01:39,360
Jest to funkcja beforeEach, jak sama nazwa wskazuje, jest to funkcja, ktra zostanie automatycznie wykonana, ale w

21
00:01:39,380 --> 00:01:44,470
przypadku kadego z testw masz rwnie funkcj After After po oczyszczeniu

22
00:01:44,520 --> 00:01:50,640
po wszystkich testach, jeli zajdzie taka potrzeba. Tak wic tutaj przedEach, a potem przedEach, moemy

23
00:01:50,670 --> 00:01:54,220
zrobi pewn ogln konfiguracj oczywicie, zanimEach przyjmie funkcj jako argument

24
00:01:54,240 --> 00:01:57,780
i jest to funkcja, ktra zostanie wykonana przed kadym testem.

25
00:01:57,780 --> 00:02:03,030
Tak wic to, co zrobi, to utworzy zmienne opakowanie ze sowem

26
00:02:03,270 --> 00:02:10,670
kluczowym let, a nastpnie w elemencie beforeEach, chc renderowa ten komponent z pytk funkcj i przechowywa

27
00:02:10,680 --> 00:02:12,950
j w tej zmiennej opakowania.

28
00:02:12,990 --> 00:02:20,370
Teraz, poniewa wszystkie funkcje s wykonywane w tej zewntrznej funkcji opisu, zmienna opakowania jest dostpna we wszystkich z nich, wic

29
00:02:20,440 --> 00:02:21,460
wszystko, co musimy

30
00:02:21,660 --> 00:02:25,220
zrobi, to pozby si sowa kluczowego const, tak jak teraz,

31
00:02:25,410 --> 00:02:27,720
a teraz mamy dostp do opakowania.

32
00:02:27,720 --> 00:02:30,740
A teraz, jeli to zapisamy, powinno ono

33
00:02:31,050 --> 00:02:34,490
ponownie wykona wszystko, a teraz mamy oczywicie nieudany test.

34
00:02:34,620 --> 00:02:40,510
Moemy teraz popatrze na to, test, ktry powinien wyrenderowa trzy elementy pozycji nawigacyjnej, jeli

35
00:02:40,740 --> 00:02:48,150
uwierzytelnienie si nie powiedzie i ma to sens, poniewa robi to, poniewa nigdy nie jestemy uwierzytelnieni, tylko renderujemy

36
00:02:48,180 --> 00:02:52,530
tutaj opakowanie, a my nie przekazujemy, jest ono uwierzytelnione, wic s

37
00:02:52,560 --> 00:02:54,110
nieuwierzytelnione, test ten oczywicie

38
00:02:54,330 --> 00:02:58,570
uywa tego samego opakowania, a tym samym koczy si niepowodzeniem.

39
00:02:58,590 --> 00:03:01,970
Teraz moemy zrobi dwie rzeczy, pierwsz jest

40
00:03:01,980 --> 00:03:09,420
to, e moemy oczywicie uy opakowania i ustawi go jako pytkiego z elementami nawigacyjnymi

41
00:03:09,420 --> 00:03:17,080
tutaj i przekaza jest uwierzytelniony, jak wczeniej, jeli to zapiszemy, oba testy zakocz si sukcesem.

42
00:03:17,520 --> 00:03:24,000
Jest to jedna opcja, ale moemy te uy innej pomocnej metody pakietu enzymw, moemy uzyska dostp do

43
00:03:24,000 --> 00:03:24,810
owijki, a

44
00:03:25,050 --> 00:03:29,500
nastpnie istnieje zestaw metod rekwizytw, ktre moemy wykona na tym opakowaniu, a

45
00:03:29,580 --> 00:03:37,500
wic na wszystkim, co przechowuje pycinowy lub inny element wiadczcy reagowanie. Aby ustawi rekwizyty, po prostu przekazujemy obiekt

46
00:03:37,500 --> 00:03:43,770
javascript z kluczowymi parami wartoci, w ktrych klucze s nazwami podstawowymi i

47
00:03:43,830 --> 00:03:45,740
wartociami, a take wartociami

48
00:03:45,990 --> 00:03:50,320
rekwizytw, wic tutaj moemy ustawi warto Prawdziwy teraz.

49
00:03:50,580 --> 00:03:54,310
A teraz, jeli zaoszczdzimy, drugi test rwnie przechodzi dalej dziki bardziej

50
00:03:54,450 --> 00:04:00,420
eleganckiemu zestawowi pomocniczych rodkw pomocniczych z pakietu enzymw. W ten sposb moesz napisa wiele testw

51
00:04:00,420 --> 00:04:03,610
i mie je adnie wsppracowa ze sob.

