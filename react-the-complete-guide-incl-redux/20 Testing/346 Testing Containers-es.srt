1
00:00:02,100 --> 00:00:04,820
Entonces, echamos un vistazo a cmo probamos los

2
00:00:04,860 --> 00:00:08,000
componentes, echemos un vistazo a los contenedores como el

3
00:00:08,130 --> 00:00:10,550
generador de hamburguesas, cmo los probamos?

4
00:00:10,590 --> 00:00:15,840
La parte difcil de los contenedores es que estn conectados a la tienda redux

5
00:00:15,840 --> 00:00:20,180
aqu, la tienda redux tiene alguna influencia externa en este componente.

6
00:00:20,700 --> 00:00:26,850
Si no estuviera conectado, probarlo sera muy similar a los otros componentes porque entonces s podra tener

7
00:00:26,850 --> 00:00:32,810
estado, pero la enzima en realidad tambin tiene mtodos para manejar esto, al igual que setProps,

8
00:00:32,820 --> 00:00:36,580
tambin tenemos setState para simular diferentes estados en ese componente.

9
00:00:36,870 --> 00:00:39,930
Entonces, lo complicado es realmente la tienda redux,

10
00:00:40,150 --> 00:00:46,720
ahora lo bueno es que realmente no necesitamos probar la conexin de este contenedor a la tienda

11
00:00:46,860 --> 00:00:54,120
redux, podemos confiar en que la tienda redux funcione correctamente, y al final solo recibir datos de la tienda

12
00:00:54,210 --> 00:00:56,420
como accesorios para este contenedor.

13
00:00:56,460 --> 00:00:58,370
As que volvemos al mundo anterior,

14
00:00:58,500 --> 00:01:04,290
simplemente podemos simular accesorios en nuestras pruebas porque queremos simular diferentes resultados en diferentes estados de utilera de

15
00:01:04,290 --> 00:01:08,830
todos modos, de modo que no queremos conectar eso a una tienda real, no

16
00:01:08,850 --> 00:01:13,950
lo hacemos Quiero probar si la tienda lo pasa correctamente al componente, ese es el trabajo

17
00:01:13,950 --> 00:01:14,530
del mtodo

18
00:01:14,610 --> 00:01:16,700
de conexin y que proviene de una

19
00:01:16,770 --> 00:01:19,510
biblioteca de terceros, podemos confiar en que funcione correctamente.

20
00:01:19,620 --> 00:01:24,930
Entonces, lo que realmente necesitamos hacer es tener acceso al componente detrs de este contenedor,

21
00:01:24,930 --> 00:01:25,680
por as

22
00:01:25,890 --> 00:01:31,430
decirlo, y un truco conveniente es simplemente exportar esta clase de generador de hamburguesas, as

23
00:01:31,470 --> 00:01:35,280
que simplemente agregue el extracto de exportacin al frente de este.

24
00:01:35,340 --> 00:01:37,540
Esto ahora nos da una exportacin con nombre

25
00:01:37,560 --> 00:01:44,520
en este archivo, el generador de hamburguesas que obtiene acceso a esta clase que es solo un componente de reaccin y todava tenemos la exportacin predeterminada

26
00:01:44,520 --> 00:01:45,670
que todava tenemos en

27
00:01:45,690 --> 00:01:53,640
nuestra aplicacin, pero ahora podemos escribir un archivo de prueba, BurgerBuilder. prueba. js y simplemente importa la clase de

28
00:01:54,210 --> 00:02:00,760
generador de hamburguesas aqu con el nombre exportar desde. / BurgerBuilder.

29
00:02:00,820 --> 00:02:07,450
Esto ahora se puede representar de nuevo con poca profundidad, y as sucesivamente, del mismo modo que procesamos el componente

30
00:02:07,450 --> 00:02:13,860
normal porque es solo un componente normal y eliminamos por completo la conexin a redux, que es lo que queremos.

31
00:02:14,320 --> 00:02:22,210
Ahora, con ese cambio aqu, podemos ir al archivo de prueba de elementos de navegacin y tambin copiar la configuracin relacionada

32
00:02:22,510 --> 00:02:23,830
con la enzima y

33
00:02:23,830 --> 00:02:32,110
el adaptador, permtanme copiar todo eso al generador de hamburguesas, deshacerme de las importaciones de los elementos de navegacin aqu. en su

34
00:02:32,110 --> 00:02:38,160
lugar estamos importando el generador de hamburguesas en ese archivo y ahora podemos comenzar a escribir

35
00:02:38,160 --> 00:02:38,890
pruebas aqu.

36
00:02:38,970 --> 00:02:42,140
Todava hacemos esto con la funcin de descripcin,

37
00:02:42,300 --> 00:02:49,360
por supuesto, as que aqu estamos probando el generador de hamburguesas y ahora para simular esto, echemos un rpido

38
00:02:49,400 --> 00:02:54,490
vistazo a lo que podramos probar aqu. Si echamos un vistazo a

39
00:02:54,530 --> 00:02:59,580
este archivo, sera interesante ver si realmente tenemos controles de construccin

40
00:03:00,270 --> 00:03:07,340
aqu, si los ingredientes no existen, porque solo deberamos procesarlos si los ingredientes se transmiten.

41
00:03:07,450 --> 00:03:15,700
Entonces, lo que podemos hacer es ir a esa funcin, la funcin de descripcin, y tendremos que

42
00:03:15,700 --> 00:03:16,510
importar controles

43
00:03:16,540 --> 00:03:25,970
de compilacin, as que vamos a agregar una importacin. / o vamos a subir a los componentes de los controles de compilacin de

44
00:03:25,990 --> 00:03:29,590
hamburguesas e importar desde BuildControls. js archivo.

45
00:03:30,070 --> 00:03:37,060
Y luego aqu, volver a agregar antes de cada funcin para configurar mi wrapper, por lo tanto, necesito agregar esta

46
00:03:37,360 --> 00:03:38,650
variable contenedora antes de

47
00:03:38,650 --> 00:03:44,680
hacerlo y luego antes de cada ciclo, el wrapper debera ser igual a superficial de nuevo porque

48
00:03:44,680 --> 00:03:50,980
no quiero hacer un poco de profundidad Rendering, quiero tener una unidad aislada de pruebas ya que deberas

49
00:03:51,190 --> 00:03:56,860
usarla tan a menudo como sea posible y quiero renderizar burger builder aqu, as como as.

50
00:03:56,980 --> 00:04:06,320
Ahora, para eso, tambin tenemos que importar reaccionar como siempre, por lo que importar reaccionar de reaccionar.

51
00:04:06,420 --> 00:04:11,790
Ahora podemos escribir una prueba con la funcin

52
00:04:11,790 --> 00:04:24,190
it y all la describir, por lo que debera generar controles de compilacin al recibir los ingredientes.

53
00:04:24,240 --> 00:04:31,350
Ahora agreguemos como segundo argumento que la funcin de JavaScript debe ser ejecutada y ahora all,

54
00:04:31,350 --> 00:04:33,170
simplemente usar mi envoltorio

55
00:04:33,210 --> 00:04:38,390
y, en primer lugar, establecer los accesorios y quiero establecer el soporte

56
00:04:38,400 --> 00:04:39,890
interno que esperamos obtener.

57
00:04:40,080 --> 00:04:46,710
entonces este accesorio lo estamos verificando aqu, eso es lo que estamos esperando obtener. Aqu establecer ings igual

58
00:04:46,710 --> 00:04:54,710
a, digamos, un objeto javascript donde tengo ensalada, cero.

59
00:04:54,900 --> 00:05:05,990
Ahora con eso puedo usar expect y wrapper y encontrar mis controles de compilacin, no un elemento jsx, solo el

60
00:05:05,990 --> 00:05:11,800
tipo aqu y esto debera tener una longitud de 1.

61
00:05:11,820 --> 00:05:18,760
Guardemos este archivo y tambin guardemos el archivo del generador de hamburguesas para exportar realmente la clase y en caso de que alguna vez obtenga este error

62
00:05:18,760 --> 00:05:25,180
con respecto a la aplicacin. prueba. js, eliminar la aplicacin. prueba. El archivo js con

63
00:05:25,180 --> 00:05:31,000
el que comenz el proyecto, en realidad montar toda la aplicacin fallando debido al uso del enrutamiento.

64
00:05:31,000 --> 00:05:38,500
Ahora todava deberas obtener un error ahora, que esto. accesorios. onInitIngredients no es una funcin, este

65
00:05:38,500 --> 00:05:44,270
error tiene sentido porque poco profundo representar su componente aqu aunque no lo haga

66
00:05:44,410 --> 00:05:49,360
en profundidad y en el generador de hamburguesas si lo inspecciona, ver

67
00:05:49,510 --> 00:05:57,030
que en componentDidMount, llamamos a este accesorio y esto por supuesto, no est disponible porque solo establecemos uno, ings.

68
00:05:57,250 --> 00:06:00,850
Entonces, para solucionar esto, tenemos que agregar esto como un accesorio,

69
00:06:00,850 --> 00:06:07,420
ahora agregarlo con setProps no funcionar porque se ha agregado o se ha establecido despus de que el componente se

70
00:06:07,420 --> 00:06:09,900
ha instanciado, por lo que es demasiado tarde.

71
00:06:09,910 --> 00:06:17,140
Tenemos que agregarlo aqu en InitIngredients y lo establecer en una funcin de flecha vaca aqu, simplemente para cumplir

72
00:06:17,140 --> 00:06:20,030
con el requisito de pasar una funcin.

73
00:06:20,350 --> 00:06:24,160
Ahora con eso si lo guardas, la prueba pasa.

74
00:06:24,520 --> 00:06:30,950
Si ahora pasamos a ser nulo solo para verificar lo contrario, falla y este es

75
00:06:31,240 --> 00:06:38,540
un ejemplo que usted, por supuesto, puede ajustar a su necesidad de ver cmo puede probar los contenedores.

76
00:06:38,650 --> 00:06:44,940
Bsicamente, se quita la parte componente y se deshace de la conexin a redux.

77
00:06:44,950 --> 00:06:48,370
Ahora hablando de redux, cmo probamos eso entonces?

