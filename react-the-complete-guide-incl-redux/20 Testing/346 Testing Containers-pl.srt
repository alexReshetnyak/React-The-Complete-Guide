1
00:00:02,100 --> 00:00:04,820
Wic przyjrzelimy si temu, jak testujemy

2
00:00:04,860 --> 00:00:08,000
komponenty, przyjrzyjmy si teraz kontenerom takim jak

3
00:00:08,130 --> 00:00:10,550
budowniczy burger, jak je przetestowa?

4
00:00:10,590 --> 00:00:15,840
Najtrudniejsz czci dotyczc kontenerw jest to, e s one podczone do

5
00:00:15,840 --> 00:00:20,180
sklepu redux, sklep redux ma zewntrzny wpyw na ten komponent.

6
00:00:20,700 --> 00:00:26,850
Gdyby nie by podczony, testowanie byoby bardzo rwne z innymi komponentami, poniewa tak, to moe mie

7
00:00:26,850 --> 00:00:32,810
stan, ale enzym ma rwnie metody radzenia sobie z tym, podobnie jak mamy setProps, mamy

8
00:00:32,820 --> 00:00:36,580
rwnie setState do symulacji rnych stanw w ten skadnik.

9
00:00:36,870 --> 00:00:39,930
Tak wic najtrudniejsz rzecz jest naprawd sklep

10
00:00:40,150 --> 00:00:46,720
redux, teraz dobrze, e tak naprawd nie musimy testowa poczenia tego kontenera ze sklepem redux,

11
00:00:46,860 --> 00:00:54,120
moemy polega na tym, e sklep redux dziaa poprawnie, a potem w kocu otrzymuj tylko dane ze

12
00:00:54,210 --> 00:00:56,420
sklepu jako rekwizyty do tego kontenera.

13
00:00:56,460 --> 00:00:58,370
Wic wracamy do poprzedniego wiata,

14
00:00:58,500 --> 00:01:04,290
moemy symulowa rekwizyty w naszych testach, poniewa chcemy symulowa rne wyniki w rnych stanach rekwizytw, tak,

15
00:01:04,290 --> 00:01:08,830
e nie chcemy tego podcza do jakiego prawdziwego sklepu, nie robimy tego

16
00:01:08,850 --> 00:01:13,950
t chcesz przetestowa, czy sklep przekazuje to poprawnie do komponentu, to jest zadanie metody

17
00:01:13,950 --> 00:01:14,530
connect i

18
00:01:14,610 --> 00:01:16,700
to pochodzi z biblioteki innej firmy,

19
00:01:16,770 --> 00:01:19,510
moemy polega na tym, e dziaa poprawnie.

20
00:01:19,620 --> 00:01:24,930
Musimy wic uzyska dostp do komponentu znajdujcego si za tym kontenerem,

21
00:01:24,930 --> 00:01:25,680
a jednym

22
00:01:25,890 --> 00:01:31,430
z najwygodniejszych sposobw jest po prostu wyeksportowanie tej klasy budowniczej burgera, wic

23
00:01:31,470 --> 00:01:35,280
po prostu dodaj do niej instrukcj eksportu.

24
00:01:35,340 --> 00:01:37,540
To daje nam teraz eksport nazwany w

25
00:01:37,560 --> 00:01:44,520
tym pliku, budowniczy burger, ktry uzyskuje dostp do tej klasy, ktra jest tylko komponentem reagujcym i nadal mamy domylny eksport, ktry

26
00:01:44,520 --> 00:01:45,670
wci mamy w naszej

27
00:01:45,690 --> 00:01:53,640
aplikacji, ale teraz moemy napisa plik testowy, BurgerBuilder. test. js i po prostu zaimportuj tutaj

28
00:01:54,210 --> 00:02:00,760
klas budowniczych burgerw z nazw export from. / BurgerBuilder.

29
00:02:00,820 --> 00:02:07,450
Mona to teraz ponownie renderowa pytko i tak dalej, tak jak renderowalimy normalny komponent,

30
00:02:07,450 --> 00:02:13,860
poniewa jest to zwyky komponent i cakowicie usuwamy poczenie z redux, czego chcemy.

31
00:02:14,320 --> 00:02:22,210
Wic teraz z t zmian, moemy przej do pliku testowego elementw nawigacyjnych, a take skopiowa ustawienia

32
00:02:22,510 --> 00:02:23,830
dotyczce enzymu i

33
00:02:23,830 --> 00:02:32,110
adaptera, pozwl mi skopiowa to wszystko do budowniczego hamburgera, pozby si importu elementw nawigacyjnych tutaj zamiast tego

34
00:02:32,110 --> 00:02:38,160
importujemy do tego pliku budowniczego hamburgerw i teraz moemy zacz pisa testy

35
00:02:38,160 --> 00:02:38,890
tutaj.

36
00:02:38,970 --> 00:02:42,140
Wci robimy to z funkcj opisow,

37
00:02:42,300 --> 00:02:49,360
wic tutaj naprawd testujemy budowniczego hamburgerw, a teraz, eby to zasymulowa, szybko przyjrzyjmy si

38
00:02:49,400 --> 00:02:54,490
temu, co moglibymy tutaj przetestowa. Jeli spojrzymy na ten plik,

39
00:02:54,530 --> 00:02:59,580
byoby ciekawie zobaczy, czy mamy tu kontrol budowania, czy skadniki

40
00:03:00,270 --> 00:03:07,340
nie istniej, poniewa powinnimy je renderowa tylko wtedy, gdy skadniki s przekazywane dalej.

41
00:03:07,450 --> 00:03:15,700
Moemy wic przej do tej funkcji, opisujcej funkcj i bdziemy musieli

42
00:03:15,700 --> 00:03:16,510
zaimportowa

43
00:03:16,540 --> 00:03:25,970
formanty kompilacji, wic dodajmy ju taki import. / lub przejdmy do komponentw komponentw do kontroli burgera

44
00:03:25,990 --> 00:03:29,590
i importowania z BuildControls. plik js.

45
00:03:30,070 --> 00:03:37,060
I tutaj, jeszcze raz dodam funkcj Before, aby ustawi moje opakowanie, dlatego musz doda t zmienn

46
00:03:37,360 --> 00:03:38,650
opakowania, zanim to

47
00:03:38,650 --> 00:03:44,680
zrobi, a nastpnie, zanim zajd, opakowanie powinno by znowu pytkie, poniewa nie chc zrobi

48
00:03:44,680 --> 00:03:50,980
gbiej renderowanie, chc mie wyizolowane testy jednostkowe, poniewa powiniene uywa go tak czsto, jak

49
00:03:51,190 --> 00:03:56,860
to moliwe, a ja chc tutaj pytko renderowa budowniczego burgera, wanie tak.

50
00:03:56,980 --> 00:04:06,320
W tym celu musimy rwnie importowa reagowa jak zawsze, wic import reaguje z reakcji.

51
00:04:06,420 --> 00:04:11,790
Teraz moemy napisa test z jego

52
00:04:11,790 --> 00:04:24,190
funkcj i tam go opisz, wic powinien renderowa sterowanie budow podczas odbierania skadnikw.

53
00:04:24,240 --> 00:04:31,350
Teraz dodajmy jako drugi argument, e funkcja javascript, ktra powinna zosta wykonana, a teraz

54
00:04:31,350 --> 00:04:33,170
tam, po prostu uyj

55
00:04:33,210 --> 00:04:38,390
mojego wrappera, a przede wszystkim ustawiam rekwizyty i chc ustawi

56
00:04:38,400 --> 00:04:39,890
to, czego oczekujemy.

57
00:04:40,080 --> 00:04:46,710
wic ten rekwizyt, ktry tutaj sprawdzamy, jest tym, ktrego oczekujemy od nas. Tutaj ustawi wartoci rwne

58
00:04:46,710 --> 00:04:54,710
powiedzmy obiekt javascript, w ktrym mam saatk, zero.

59
00:04:54,900 --> 00:05:05,990
Teraz za pomoc tego mona oczekiwa i owija i znale moje elementy sterujce kompilacj, a nie element

60
00:05:05,990 --> 00:05:11,800
jsx, tylko typ tutaj i powinien mie dugo 1.

61
00:05:11,820 --> 00:05:18,760
Zapiszmy ten plik, a take zapisz plik budowniczego hamburgera, aby naprawd wyeksportowa klas i na wypadek, gdyby kiedykolwiek pojawi si

62
00:05:18,760 --> 00:05:25,180
bd zwizany z aplikacj. test. js, usu aplikacj. test. Plik js, z ktrym

63
00:05:25,180 --> 00:05:31,000
rozpocz si projekt, faktycznie spowoduje, e caa twoja aplikacja nie bdzie dziaa z powodu uywania routingu.

64
00:05:31,000 --> 00:05:38,500
Teraz powiniene dosta jeden bd teraz, e to. rekwizyty. ONInitIngredients nie jest funkcj, ten

65
00:05:38,500 --> 00:05:44,270
bd ma sens, poniewa pytka wyrenderuje tutaj twj komponent, nawet jeli nie

66
00:05:44,410 --> 00:05:49,360
robi tego gboko, aw budowniczym burgera, jeli to sprawdzisz, zobaczysz to

67
00:05:49,510 --> 00:05:57,030
w componentDidMount, nazywamy to rekwizytem i tym oczywicie nie jest dostpna, poniewa ustawiamy tylko jedn propozycj.

68
00:05:57,250 --> 00:06:00,850
Aby to naprawi, musimy doda to jako prop, a teraz

69
00:06:00,850 --> 00:06:07,420
dodanie go za pomoc metody setProps nie poradzi sobie z tym zadaniem, poniewa jest ono dodawane lub ustawiane po

70
00:06:07,420 --> 00:06:09,900
utworzeniu komponentu, wic jest ju za pno.

71
00:06:09,910 --> 00:06:17,140
Musimy doda to tutaj, na Inicjatorach, a ja ustawi tutaj pust funkcj strzaki, aby

72
00:06:17,140 --> 00:06:20,030
po prostu speni wymg przekazywania funkcji.

73
00:06:20,350 --> 00:06:24,160
Teraz, jeli j zapiszesz, test przejdzie.

74
00:06:24,520 --> 00:06:30,950
Jeli teraz stwierdzimy, e warto null jest zerowa, tylko po to, aby sprawdzi odwrotno, to

75
00:06:31,240 --> 00:06:38,540
si nie powiedzie i jest to przykad, ktry oczywicie mona dostroi do potrzeby sprawdzenia, jak mona testowa pojemniki.

76
00:06:38,650 --> 00:06:44,940
Zasadniczo pozbdziesz si czci skadowej i pozbdziesz si poczenia z reduxem.

77
00:06:44,950 --> 00:06:48,370
Mwic o reduxie, jak to przetestujemy?

