1
00:00:02,210 --> 00:00:03,750
Quindi ho eliminato il firebase.

2
00:00:03,770 --> 00:00:07,380
Ora possiamo lavorare sulla pagina degli ordini che, ovviamente,  vuota adesso.

3
00:00:07,460 --> 00:00:12,850
Quindi, prima di tutto, con tutto risolto, poniamo un nuovo ordine per il nostro buger standard qui.

4
00:00:13,000 --> 00:00:23,000
Inserisci alcuni dati di contatto nei test sul campo leggi il codice postale del paese e l'indirizzo e-mail.

5
00:00:23,030 --> 00:00:24,470
Mettiamo questo ordine.

6
00:00:24,700 --> 00:00:26,860
E nella pagina dell'ordine lo vediamo.

7
00:00:26,930 --> 00:00:32,500
non stiamo usando veramente, ho letto Axford, qui stiamo raggiungendo il web e il componente ha fatto mount,

8
00:00:32,510 --> 00:00:38,120
naturalmente sono andato a prendere i miei ordini attraverso l'action creator e voglio gestire i miei ordini per redox.

9
00:00:38,120 --> 00:00:41,270
 appena morto se guardiamo il contenitore degli ordini che

10
00:00:41,390 --> 00:00:44,550
Abbiamo gi creato questo array di ordini nel nostro stato.

11
00:00:44,600 --> 00:00:46,280
Non lo stiamo usando.

12
00:00:46,310 --> 00:00:52,820
Quindi iniziamo con il creatore di azioni e inoltriamo tutto con i tipi di azione o esportiamo Constance e chiamiamo

13
00:00:52,820 --> 00:01:01,180
gli ordini al suo interno forse in modo che abbiamo un modello simile a quello di forward per chase in cui possiamo impostare il caricamento

14
00:01:01,220 --> 00:01:06,860
su true e quindi su trigger questo processo di partenza in cui raggiungiamo il web e quindi

15
00:01:06,860 --> 00:01:09,470
abbiamo il caso di successo e cos via.

16
00:01:09,710 --> 00:01:14,060
Quindi ordini fecche e recupera ordini.

17
00:01:14,330 --> 00:01:18,470
Diciamo che inizia chiamiamolo iniziare perch tu chiami l'inizio del burger pre-Chase.

18
00:01:18,680 --> 00:01:31,680
Quindi inizia e poi abbiamo un ordine di fetch costante e, ovviamente, usiamo lo stesso nome della stringa che avevo davanti

19
00:01:31,700 --> 00:01:32,930
al fuoco.

20
00:01:33,270 --> 00:01:42,300
E poi finalmente un terzo ha costantemente bisogno che gli ordini di recupero falliscano e tu indovina che useremo questo nome come identificatore

21
00:01:42,300 --> 00:01:46,470
di stringa per qualunque cosa ottenga i tipi di azione.

22
00:01:46,470 --> 00:01:52,170
Ora nel mio ordine J. S. Fall e la cartella delle azioni Voglio creare i

23
00:01:52,170 --> 00:01:56,440
creatori di azioni di soia e creare un paio di nuove costanti che contengono funzioni e usano tutte un modello simile.

24
00:01:56,460 --> 00:02:03,630
avvio e pre-Chase burger stesso che viene inviato da un contenitore che parte del codice asincrono Dusty.

25
00:02:03,630 --> 00:02:08,840
Per quanto riguarda l'acquisto di hamburger, abbiamo tutti avuto errori di accesso e

26
00:02:09,120 --> 00:02:13,940
Quindi dovremo recuperare gli ordini.

27
00:02:14,230 --> 00:02:22,220
Funzione di successo in cui mi aspetto di ottenere gli ordini come argomento in modo che al loro interno possa restituire un

28
00:02:22,220 --> 00:02:23,920
nuovo tipo di parola oggetto.

29
00:02:23,980 --> 00:02:32,380
Quindi questa  la nostra azione, naturalmente, dove digitare i tipi di azioni per ottenere ordini di successo e ordini pastie

30
00:02:32,650 --> 00:02:33,700
come carico utile.

31
00:02:33,700 --> 00:02:42,790
Ora voglio anche creare un nuovo Constand e recuperare ordini come questo in cui ottengo un potenziale

32
00:02:42,800 --> 00:02:49,200
errore o riceviamo e restituisco un oggetto javascript dove imposto il tipo.

33
00:02:49,330 --> 00:02:59,290
 qui che imposto i tipi di azione di tipo 2 per recuperare il file degli ordini e trasmettere l'errore nel caso in cui

34
00:02:59,290 --> 00:02:59,910
voglio usarlo.

35
00:03:01,030 --> 00:03:07,270
E voglio che esporti quella costante che chiamer gli ordini di fetch inizino da l.

36
00:03:07,300 --> 00:03:09,910
Non mi aspetto alcun argomento.

37
00:03:10,330 --> 00:03:17,380
Quello che voglio fare l  che voglio restituire un oggetto javascript, ovviamente la nostra azione

38
00:03:17,380 --> 00:03:29,470
in cui digitare  tipi di azione recuperare ordini di fetch di ordine che sono di accesso ma iniziano e questo ha di nuovo un modello simile a

39
00:03:29,480 --> 00:03:37,450
quello dell'acquisto di avvio pre-Chase e poi Ho bisogno della mia costante qui dove eseguo il mio codice asincrono.

40
00:03:37,460 --> 00:03:46,010
prendere gli ordini l, non mi aspetto nessuna discussione, ma in quel momento user X anni per ottenere i miei ordini.

41
00:03:46,010 --> 00:03:49,040
Quindi l'ultima azione pi grande  solo di

42
00:03:49,160 --> 00:03:53,590
E tutti abbiamo avuto il codice e gli ordini sono stati archiviati qui nella quantit dei componenti.

43
00:03:53,750 --> 00:03:56,870
Posso davvero copiare quel codice qui.

44
00:03:56,930 --> 00:03:59,850
Qui abbiamo gi utilizzato i gestori degli errori e questo  buono.

45
00:04:00,140 --> 00:04:05,450
Posso copiare il codice da l metterlo nel mio vero creatore anche se qui ovviamente ho bisogno

46
00:04:05,450 --> 00:04:08,000
di restituire una funzione che prima viene inviata.

47
00:04:08,030 --> 00:04:09,280
Questo  ci che torniamo.

48
00:04:09,440 --> 00:04:13,660
E poi ci stiamo ora raggiungendo X anni e lo otteniamo dagli ordini.

49
00:04:13,700 --> 00:04:19,140
Jason qui  stato il nostro x ', ovviamente non chiameremo per lo stato.

50
00:04:19,310 --> 00:04:27,980
Invece voglio inviare le mie azioni in modo che tutta questa patch recuperi gli ordini di successo sei nel blocco allora e

51
00:04:28,670 --> 00:04:34,880
poi voglio passare i miei ordini recuperati che trasformo qui come argomento e che  una

52
00:04:34,880 --> 00:04:37,530
buona argomentazione per cui dovremmo trasformare dati.

53
00:04:37,820 --> 00:04:43,400
Lo faccio qui perch sto trasferendo i dati che sto recuperando Non voglio mettere questo nel

54
00:04:43,430 --> 00:04:50,300
riduttore perch se dovessi cambiare i miei dati di back-end dovrei cambiare il mio riduttore e in questo caso devo

55
00:04:50,300 --> 00:04:52,410
cambiare il mio vero creatore credo.

56
00:04:52,460 --> 00:04:58,250
ancora pi naturale avere un riduttore nel luogo in cui ottengono i dati nel formato che voglio archiviare.

57
00:04:58,250 --> 00:04:59,450
Ma per me 

58
00:04:59,650 --> 00:05:06,130
Volevo cambiamenti logici e non voglio cambiare nulla solo per il formato dei dati che ottengo.

59
00:05:06,230 --> 00:05:11,230
Questo  il motivo per cui faccio modifiche ai formati di dati come questo nei miei creatori.

60
00:05:11,230 --> 00:05:15,830
Quindi gli ordini di difetti vengono quindi passati al successo dell'ordine di recupero.

61
00:05:16,010 --> 00:05:22,430
Gestore Non ho bisogno di passare il caricamento qui perch posso impostarlo correttamente nel mio stato

62
00:05:22,430 --> 00:05:30,590
di redux e poi qui e ricevere voglio spedire gli ordini fetch falliti ed eseguirlo ovviamente e voglio trasmettere il

63
00:05:30,590 --> 00:05:31,420
mio errore.

64
00:05:31,910 --> 00:05:34,760
Quindi, se questo stava gestendo questo.

65
00:05:34,760 --> 00:05:40,830
Ora, naturalmente, il passo successivo consiste nel gestire tutti questi nuovi tipi di azione nella coda del riduttore.

66
00:05:41,210 --> 00:05:48,470
Quindi andiamo al riduttore dell'ordine e ora mi permetto di aggiungere un paio di nuovi casi di

67
00:05:48,470 --> 00:05:50,120
fronte al caso civile.

68
00:05:50,120 --> 00:05:56,530
Il primo sono i tipi di azione che prelevano gli ordini che iniziano da l.

69
00:05:56,530 --> 00:06:01,930
Ovviamente restituir uno stato aggiornato in cui ho copiato il vecchio stato e poi voglio anche impostare il caricamento

70
00:06:01,930 --> 00:06:02,590
su true.

71
00:06:02,710 --> 00:06:07,930
Sono le stesse propriet di caricamento che utilizziamo nella pagina di pagamento, ma siamo sempre e solo nella pagina di

72
00:06:08,010 --> 00:06:09,610
pagamento o nella pagina degli ordini.

73
00:06:09,610 --> 00:06:13,180
Quindi va bene se riutilizziamo la propriet su entrambe le pagine.

74
00:06:13,180 --> 00:06:16,100
Questa  l'unica cosa che voglio fare qui in azione.

75
00:06:16,150 --> 00:06:23,470
Il prossimo tipo di azione  il caso di accesso di successo, in modo tale che abbiamo ovviamente successo con gli ordini fecche.

76
00:06:23,470 --> 00:06:31,870
Voglio archiviare gli ordini che ho recuperato in modo da ottenere il mio stato e imposter ordini uguali all'azione

77
00:06:31,870 --> 00:06:35,760
e il loro nome di propriet era solo ordini.

78
00:06:35,800 --> 00:06:42,790
Possiamo confermarlo nel nostro creatore di azioni nel file d'ordine l con l'ordine di invio per il recupero

79
00:06:42,910 --> 00:06:44,800
e il recupero degli ordini.

80
00:06:44,830 --> 00:06:51,250
propriet dei nostri ordini quindi questa  la propriet degli ordini che possiamo estrarre nel nostro produttore Dave per questo.

81
00:06:51,250 --> 00:06:52,050
Abbiamo la

82
00:06:52,300 --> 00:06:55,040
E questi sono tutti gli ordini.

83
00:06:55,040 --> 00:07:01,750
Se si osserva la funzione di trasformazione in un formato di matrice,  possibile memorizzarla nel nostro array.

84
00:07:02,410 --> 00:07:09,550
E l'ultima cosa che voglio aggiungere all'aggiornamento qui  che ovviamente ho bisogno di impostare il caricamento su false

85
00:07:09,970 --> 00:07:17,730
e ora ovviamente ho bisogno di un caso in cui i tipi di azione falliscono, quindi gli ordini di recupero falliscono.

86
00:07:17,830 --> 00:07:22,660
Ci torner anche un oggetto javascript dove copio lo stato e potremmo gestire l'errore.

87
00:07:22,660 --> 00:07:28,070
Potremmo memorizzare l'errore nella propriet araba qui, ma non voglio usarlo qui.

88
00:07:28,150 --> 00:07:29,950
Tutto dovuto semplicemente al seguente.

89
00:07:29,950 --> 00:07:35,800
Tutti hanno detto di aver caricato due errori anche qui perch, anche se non ha funzionato, almeno il caricamento  stato eseguito.

90
00:07:36,130 --> 00:07:38,460
Quindi questo  il riduttore aggiornato.

91
00:07:38,500 --> 00:07:42,550
Abbiamo aggiornato il nostro file di creazione di azioni dell'ordine.

92
00:07:42,550 --> 00:07:47,490
Ora ho solo bisogno di esportare l'azione degli ordini di recupero nel file indice qui.

93
00:07:47,530 --> 00:07:51,910
La cartella delle azioni in modo che possa essere attivata fa dall'esterno.

94
00:07:51,910 --> 00:07:55,430
E con ci possiamo collegare la nostra applicazione.

95
00:07:55,570 --> 00:08:01,420
per questo ho ovviamente bisogno di creare il mio nuovo invio di mappa alla

96
00:08:01,530 --> 00:08:08,380
costante del puntello dove ho ricevuto il spedisci azione o metodo e poi puoi restituire una mappa.

97
00:08:08,380 --> 00:08:18,070
Quindi, facciamolo ora nel componente ordini qui ordini il contenitore degli ordini l nella quantit di componenti che vuoi inviare questa nuova azione

98
00:08:18,460 --> 00:08:21,970
di recupero ordini che abbiamo appena creato e

99
00:08:21,970 --> 00:08:29,230
Quindi un oggetto javascript il tuo dove mappo i miei oggetti di scena per inviare le funzioni di Shabelle.

100
00:08:29,470 --> 00:08:36,910
Cos ho chiamato come on load o forse su fetch orders per essere in linea con i nomi delle azioni e l voglio

101
00:08:36,910 --> 00:08:41,540
eseguire una funzione anonima in cui alla fine ho inviato l'azione che abbiamo appena creato.

102
00:08:41,650 --> 00:08:47,150
Che quindi ho bisogno di importare quindi importare tutto come azioni da.

103
00:08:47,170 --> 00:08:50,100
E ora passiamo alla cartella del negozio.

104
00:08:50,110 --> 00:08:53,300
La cartella delle azioni e il file di indice l dentro.

105
00:08:53,350 --> 00:08:58,320
Ancora una volta potremmo omettere l'indice partir a causa del modo in cui funziona il nostro flusso di lavoro.

106
00:08:58,540 --> 00:09:05,500
E con quello aggiunto voglio inviare una azione per l'oggetto actions che importiamo l'azione fetch orders e

107
00:09:05,500 --> 00:09:09,070
dobbiamo eseguire questa funzione per ottenere veramente l'azione.

108
00:09:09,130 --> 00:09:11,960
Tieni presente che questi sono creatori di azioni.

109
00:09:12,040 --> 00:09:20,230
Ora con quello aggiunto Possiamo chiamare gli ordini di recupero nel nostro componente. MT ha agganciato questo oggetto per

110
00:09:20,340 --> 00:09:27,760
recuperare gli ordini eseguiti, ma ovviamente per farlo funzionare dobbiamo collegare questa costante qui con il nostro componente.

111
00:09:27,970 --> 00:09:31,590
Quindi dovrei importare connetterti da re-act redux.

112
00:09:31,750 --> 00:09:38,610
Quindi importa per collegare una funzione come questa da re-act lead X come dat.

113
00:09:39,030 --> 00:09:47,580
E poi, come abbiamo fatto nei componenti audio, aggiungiamo connect eseguito e passato per ora null invece di stato

114
00:09:47,580 --> 00:09:48,400
della mappa.

115
00:09:48,420 --> 00:09:55,440
Due oggetti di scena e mappato questa patch per l'effetto prop di una seconda funzione e quindi anche di avvolgere con gestore di

116
00:09:55,830 --> 00:09:58,640
errori e la sua chiamata di funzione con parentesi.

117
00:09:59,040 --> 00:10:00,920
Ora dovrebbe funzionare.

118
00:10:00,930 --> 00:10:05,520
Naturalmente sono interessato anche allo stato perch ho bisogno dei miei ordini.

119
00:10:05,610 --> 00:10:08,610
Al momento gestiamo gli ordini e il caricamento nello stato interno.

120
00:10:08,760 --> 00:10:09,770
Liberiamoci di quello.

121
00:10:09,780 --> 00:10:10,630
Noi non lo facciamo.

122
00:10:10,650 --> 00:10:12,190
Usiamo invece leggere X.

123
00:10:12,420 --> 00:10:21,660
Quindi aggiungiamo un secondo stato di mappa costante a prop's I get to status qui e restituisco un oggetto javascript dove

124
00:10:21,660 --> 00:10:27,960
faccio mappare le sezioni dello stato ai puntelli e l sono interessato ai miei ordini

125
00:10:28,440 --> 00:10:35,790
che ottengo dagli ordini di stato con ordine statale e raggiungendo il riduttore dell'ordine e gli ordini.

126
00:10:35,790 --> 00:10:43,920
Quindi raggiungo la propriet degli ordini nello stato di quel riduttore e l'altro pezzo  lo stato di caricamento qui

127
00:10:43,920 --> 00:10:52,620
che sta caricando l'ordine dello stato di caricamento e ora se i dati posso passare lo stato della mappa agli oggetti di

128
00:10:52,890 --> 00:10:58,650
scena per la mia funzione di connessione e quindi pu usare i nostri ordini.

129
00:10:58,770 --> 00:11:04,750
Quindi qui non usiamo gli ordini di stato, ma questo ordina gli ordini proprio cos.

130
00:11:04,980 --> 00:11:12,790
E se volessimo mostrare uno spinner dovremmo importarlo in modo da poter importare Spener da.

131
00:11:12,790 --> 00:11:19,110
E ora cerchiamo di raggiungere i nostri componenti con i componenti dell'interfaccia utente e con lo spinner.

132
00:11:19,560 --> 00:11:29,770
E usiamo come stato di caricamento tutti creano una nuova variabile di caricamento per gli ordini e questo dovrebbe essere il mio spinner

133
00:11:29,770 --> 00:11:32,660
inizialmente, ma poi aggiunger un assegno.

134
00:11:32,950 --> 00:11:36,250
Se questo carico di oggetti di scena.

135
00:11:36,280 --> 00:11:49,830
Se questo non  vero per non caricare tutto il rendering decente Invece questa mappa quindi gli ordini dovrebbero essere questo J come codice

136
00:11:49,870 --> 00:11:51,190
X qui.

137
00:11:51,450 --> 00:11:57,430
E dal momento che non  racchiuso in nessun elemento HVM, possiamo semplicemente scriverlo in questo modo.

138
00:11:58,330 --> 00:12:07,990
Ora laggi posso emettere ordini in tutta sicurezza e dovrei sbarazzarmi di questo Cauley Brasier.

139
00:12:08,030 --> 00:12:17,710
Quindi con quello se torno alla mia domanda e trasferisco la pagina degli ordini ricevo i miei ordini ma non vedo mai

140
00:12:17,710 --> 00:12:18,540
lo spinner.

141
00:12:18,550 --> 00:12:26,100
La ragione di ci  che nel nostro ordine di azioni create o file e recuperi ordini che non abbiamo mai

142
00:12:26,140 --> 00:12:27,430
inviato fecche per iniziare.

143
00:12:27,460 --> 00:12:29,920
Ovviamente devo farlo per impostare il caricamento su true.

144
00:12:30,070 --> 00:12:35,210
Quindi, all'inizio di questa patch, gli ordini di recupero vengono eseguiti.

145
00:12:35,230 --> 00:12:41,260
Ora, se  al sicuro, vediamo bene che Firebase  troppo veloce, ma vediamo lo spinner per una

146
00:12:41,260 --> 00:12:46,790
frazione di secondo e possiamo confermare che l'avvio di un ordine fecale  stato effettuato qui.

147
00:12:46,900 --> 00:12:54,270
Quindi con questo stiamo recuperando gli ordini da Redox li stiamo gestendo nel nostro negozio e li gestiamo entrambi quando

148
00:12:54,270 --> 00:13:01,540
effettuiamo un ordine e quando visitiamo la nota a lato della pagina degli ordini dato che cariciamo sempre gli ordini

149
00:13:01,810 --> 00:13:08,980
durante il caricamento del contenitore dell'ordine non importa che archiviamo un ordine su un pre-Chase di successo nel successo

150
00:13:09,010 --> 00:13:14,780
del pre-Chase Broga per il riduttore di ordine in cui un negozio fa un nuovo ordine.

151
00:13:14,920 --> 00:13:20,250
Questo non importa perch carichiamo gli ordini dal server in ogni caso quando visiti la pagina dell'ordine.

152
00:13:20,470 --> 00:13:25,780
Ma possiamo confermare nella nostra lettura degli strumenti X Dev che lo memorizziamo prima di recuperarlo da l.

153
00:13:25,780 --> 00:13:30,610
Ed  bello sapere come possiamo archiviare e ordinare a livello di codice senza contattare il server

154
00:13:30,610 --> 00:13:34,490
nel caso in cui ne avessimo bisogno anche su alcune delle nostre pagine.

155
00:13:34,810 --> 00:13:40,540
Quindi, se anche la pagina degli ordini funziona, guarda ora la nostra applicazione per vedere se tutto funziona

156
00:13:40,540 --> 00:13:43,260
prima di dare un'occhiata a cosa possiamo migliorare.

