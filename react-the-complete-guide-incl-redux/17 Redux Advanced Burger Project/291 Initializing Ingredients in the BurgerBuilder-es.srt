1
00:00:02,200 --> 00:00:06,300
As que siempre tenemos que girar el proceso de bsqueda aqu.

2
00:00:06,520 --> 00:00:14,300
Como puede ver si inspecciona la consola, no tenemos ningn error, pero tampoco obtenemos nuestros ingredientes, lo cual tiene sentido

3
00:00:14,570 --> 00:00:20,170
porque nuestro productor nunca maneja las regiones que se despachan una vez que tenemos

4
00:00:20,170 --> 00:00:21,120
los ingredientes.

5
00:00:21,200 --> 00:00:22,640
As que es hora de cambiar esto.

6
00:00:22,670 --> 00:00:24,970
Lo mismo es cierto para los ingredientes fecche fallidos.

7
00:00:25,250 --> 00:00:31,680
As que en la hamburguesa de Boulder, en la carpeta de reductores, s cundo manejar estos dos casos nuevos.

8
00:00:31,700 --> 00:00:40,010
un caso para los tipos de accin, los ingredientes del conjunto se ejecutan cada vez que tenemos ingredientes del servidor all.

9
00:00:40,010 --> 00:00:41,940
Entonces, ante todo, o agregue

10
00:00:41,960 --> 00:00:45,950
Quiero devolver un nuevo estado y primero copiar el estado anterior.

11
00:00:45,950 --> 00:00:51,570
Por esa razn y luego tengo que establecer mis ingredientes aqu.

12
00:00:51,620 --> 00:01:00,350
Los ingredientes deben establecerse en ingredientes de accin y s que he recibido estos ingredientes porque en el tazn de hamburguesas

13
00:01:00,350 --> 00:01:06,860
o en la cada de accin donde hemos establecido los ingredientes, paso esta propiedad de ingredientes.

14
00:01:06,860 --> 00:01:13,300
Entonces, ahora inicializo donde establec mis reactivos y tericamente podramos ejecutar esta accin o despachar como

15
00:01:13,300 --> 00:01:14,770
realmente lo que queramos.

16
00:01:14,870 --> 00:01:22,100
con cualquier objeto javascript que represente nuestros ingredientes en cualquier momento que desee, por ejemplo, para restablecer a las personas actuales.

17
00:01:22,130 --> 00:01:26,420
As que tambin podramos ejecutar este setter con cualquier conjunto de ingredientes

18
00:01:26,430 --> 00:01:28,180
Berger hero alguna vez.

19
00:01:28,220 --> 00:01:30,900
Solo quiero usarlo para inicializar nuestros ingredientes.

20
00:01:31,370 --> 00:01:34,350
Ahora con eso llamo ingredientes establecidos.

21
00:01:34,370 --> 00:01:41,750
Entonces tambin quiero manejar el caso de que la bsqueda de ingredientes fall all.

22
00:01:41,750 --> 00:01:49,880
Tambin devolver un nuevo estado donde copi el estado anterior y luego, por supuesto, tambin tendr que configurar mi error

23
00:01:49,880 --> 00:01:53,340
aqu y quiero configurarlo para que sea errneo.

24
00:01:53,480 --> 00:01:54,550
Cierto.

25
00:01:55,100 --> 00:02:01,910
Ahora, una cosa importante cuando llamamos establecer ingredientes aqu, quiero establecer mi error en falso para restablecerlo en caso de

26
00:02:02,060 --> 00:02:04,040
que haya tenido un error anterior.

27
00:02:04,130 --> 00:02:06,950
Y ahora ya no lo tengo, as que acepta mi error.

28
00:02:07,060 --> 00:02:08,090
Falso aqu.

29
00:02:08,090 --> 00:02:11,790
Entonces con eso agregamos nuestra lgica de productor.

30
00:02:11,810 --> 00:02:14,040
Ahora tenemos que conectar nuestro contenedor.

31
00:02:14,360 --> 00:02:19,760
As que ir al archivo Bolar de la hamburguesa y estarn en el fondo de este contenedor.

32
00:02:19,790 --> 00:02:26,140
Ya no solo necesitamos los ingredientes que tambin necesitamos para obtener informacin sobre un posible error.

33
00:02:26,390 --> 00:02:29,770
As que aqu quiero obtener mi error de estado.

34
00:02:30,020 --> 00:02:32,930
Y ahora ellos son el aire o la propiedad.

35
00:02:33,080 --> 00:02:36,830
Tenga en cuenta que hasta ahora no tenemos diferentes cortes de estado.

36
00:02:36,830 --> 00:02:38,330
Solo tenemos un reductor

37
00:02:38,330 --> 00:02:40,090
No estamos combinando ninguno.

38
00:02:40,370 --> 00:02:43,270
Entonces con eso tengo mi error.

39
00:02:43,520 --> 00:02:50,040
Ahora, otra cosa que tenemos es que nunca despachamos nuestra accin de ingredientes.

40
00:02:50,120 --> 00:02:52,400
Este que realmente llega a la Web.

41
00:02:52,610 --> 00:02:54,200
Nunca enviamos esto.

42
00:02:54,200 --> 00:02:56,570
Entonces esto nunca se inicializar.

43
00:02:56,630 --> 00:03:01,530
As que tambin quiero poder enviar eso desde Burgert Boulder.

44
00:03:01,580 --> 00:03:05,910
Aada una nueva propiedad aqu para asignar este Peche a los accesorios.

45
00:03:05,980 --> 00:03:07,850
Lo nombrar en l.

46
00:03:07,850 --> 00:03:17,430
Ingredientes y voy a enviar mis acciones de tirador de hamburguesas aqu y necesito agregar las acciones Bolar de hamburguesa a

47
00:03:17,430 --> 00:03:20,820
los chips de ndice donde los inclu aqu.

48
00:03:20,910 --> 00:03:22,630
Necesito agregarlo.

49
00:03:22,650 --> 00:03:24,280
Ingredientes

50
00:03:24,330 --> 00:03:31,170
As que ahora puedo alcanzar eso desde mi tazn de fuente de hamburguesas o contenedor en sus ingredientes y ejecutarlo.

51
00:03:31,170 --> 00:03:37,880
Ahora el ltimo paso es invocar cualquier ingrediente de nuestro componente que monte el mtodo aqu.

52
00:03:38,190 --> 00:03:46,790
Entonces, ahora voy a ejecutar este proceso con ingredientes como este y el plato debera ejecutar este despacho

53
00:03:46,790 --> 00:03:51,180
de esta accin y con suerte obtener nuestros ingredientes.

54
00:03:51,180 --> 00:03:57,570
Por ltimo, aadimos esto como nuestra propiedad para asignarlo a nuestro estado de error.

55
00:03:57,570 --> 00:04:05,170
Ahora, por supuesto, tambin necesito usarlo y simplemente puedo buscar todas las apariciones de error DOT de estado o

56
00:04:05,300 --> 00:04:09,580
en mi archivo aqu estos son los lugares donde debo usar.

57
00:04:09,600 --> 00:04:11,350
Bueno, excepto por mi estado cae.

58
00:04:11,420 --> 00:04:17,780
As que este lugar aqu es el lugar donde ahora necesito llamar al error de este accesorio porque ahora estamos recibiendo

59
00:04:17,780 --> 00:04:19,440
esto como accesorios con pap.

60
00:04:19,440 --> 00:04:24,950
Guardemos todas las fallas y si volvemos a nuestra aplicacin echemos un vistazo si tenemos alguna

61
00:04:24,950 --> 00:04:27,160
flecha si volvemos a cargar tiap.

62
00:04:27,400 --> 00:04:28,770
Eso se ve bien para m.

63
00:04:28,770 --> 00:04:30,610
Tenemos una hamburguesa aqu.

64
00:04:30,840 --> 00:04:37,830
que configuraron nuestros ingredientes y ahora podemos comenzar a agregar ingredientes nuevamente y tambin podemos ingresar al proceso de pedido aqu.

65
00:04:37,830 --> 00:04:45,090
Echemos un vistazo ahora a las herramientas de desarrollo de redux que vemos que se ejecutaron los ingredientes del set y

66
00:04:45,240 --> 00:04:47,020
Hazlo todo bien.

67
00:04:47,070 --> 00:04:49,580
Por ltimo, quiero verificar si funciona el manejo de errores.

68
00:04:49,730 --> 00:04:56,680
As que djame ir a mi creador de accin Burger Boulder y vamos a estropear esto, ests aqu.

69
00:04:56,940 --> 00:04:57,890
Vamos a guardarlo

70
00:04:58,710 --> 00:05:02,240
Y esto tambin sigue funcionando como debera.

71
00:05:02,250 --> 00:05:03,230
As que esto es genial.

72
00:05:03,240 --> 00:05:08,550
de errores con nuestros componentes de orden superior todava funciona debido a que usamos uno en la misma instancia x '.

73
00:05:08,550 --> 00:05:09,670
Podemos ver que el manejo

74
00:05:09,720 --> 00:05:13,990
Y ahora podemos Vonta los otros lugares donde necesitamos usar el cdigo asincrnico.

75
00:05:14,040 --> 00:05:16,950
El siguiente lugar, por supuesto, es cuando queremos pedir una hamburguesa.

