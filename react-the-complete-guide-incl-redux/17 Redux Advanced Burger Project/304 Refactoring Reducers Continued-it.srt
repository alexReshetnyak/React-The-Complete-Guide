1
00:00:02,270 --> 00:00:09,890
Bene, l'unica cosa che possiamo fare  che possiamo estrarre la logica dai nostri casi nelle loro funzioni in modo che la

2
00:00:10,160 --> 00:00:13,100
nostra dichiarazione sui casi di switch diventi molto breve.

3
00:00:13,160 --> 00:00:18,940
Quindi la riduzione o l'anno posso aggiungere una nuova costante che potrei nominare come ingrediente.

4
00:00:19,010 --> 00:00:25,100
Quindi, in pratica, il tipo di azione gestir questa funzione come una funzione che riceve lo stato e l'azione

5
00:00:25,100 --> 00:00:27,280
esattamente come la usi o lo stesso.

6
00:00:27,590 --> 00:00:30,870
Ma l voglio solo gestire questo codice.

7
00:00:31,070 --> 00:00:38,600
Quindi prender tutto il codice dai tipi di azione del caso aggiungere ingrediente tagliato e spostarlo in un ingrediente

8
00:00:38,810 --> 00:00:40,540
come mostrato nell'ultimo modulo.

9
00:00:40,730 --> 00:00:44,620
Il codice  lo stesso dal momento che abbiamo ancora lo stato e l'azione di X.

10
00:00:44,780 --> 00:00:55,290
Ora nel mio caso qui ho quindi solo due return e ingrediente e passaggio sullo stato e in realt entriamo nel riduttore e

11
00:00:55,290 --> 00:01:02,490
questo  essenzialmente lo stesso di prima ma ora in linea che ovviamente  un modo

12
00:01:02,490 --> 00:01:06,600
super rapido di vedere tutto casi che stiamo trattando.

13
00:01:06,750 --> 00:01:11,780
E ovviamente non voglio solo farlo per un ingrediente che voglio fare anche per Rimuovere

14
00:01:11,780 --> 00:01:12,190
Ingredion.

15
00:01:12,230 --> 00:01:18,840
dall'anno del case di rimozione, inclusa la dichiarazione di ritorno, ovviamente e dato che siamo tornati qui

16
00:01:19,170 --> 00:01:26,200
nella funzione, non possiamo semplicemente eseguire la funzione e restituire qui il risultato che sar lo stato aggiornato.

17
00:01:26,200 --> 00:01:31,930
Quindi creiamo una funzione rimuovi ancora una volta la funzione della freccia del tuo sak,

18
00:01:31,930 --> 00:01:33,320
semplicemente tagliamo il codice

19
00:01:33,340 --> 00:01:41,000
Quindi rimuovere l'ingrediente viene eseguito qui e passiamo uno stato un'azione proprio come con l'aggiunta iniziata.

20
00:01:41,050 --> 00:01:45,030
Quindi con questo otteniamo queste due funzioni in outsourcing in questo.

21
00:01:45,130 --> 00:01:46,830
Ora lo stesso per l'impostazione.

22
00:01:46,860 --> 00:01:56,470
Ovviamente anche l si cattura l'intero codice e si creano nuovi ingredienti per le funzioni, come sempre si aspettano lo stato e

23
00:01:56,470 --> 00:02:01,580
l'azione qui e quindi si incolla il codice in questo modo.

24
00:02:02,530 --> 00:02:11,190
E nel caso in cui potessi restituire gli ingredienti e passare lo stato e l'azione.

25
00:02:11,550 --> 00:02:16,770
E, ultimo ma non meno importante, facciamo lo stesso per il recupero degli ingredienti falliti.

26
00:02:16,770 --> 00:02:24,120
Ovviamente  molto breve, ma gli ingredienti recuperati continuano a prendere lo stato e

27
00:02:24,120 --> 00:02:28,170
l'azione come input e restituiranno lo stato aggiornato.

28
00:02:28,170 --> 00:02:36,660
Quindi, qui possiamo semplicemente chiamare questo non per il recupero delle regioni di ritorno e per passare allo stato un'azione

29
00:02:36,660 --> 00:02:37,850
che  importante.

30
00:02:37,980 --> 00:02:40,940
E con questo torniamo a uno stato per impostazione predefinita.

31
00:02:41,010 --> 00:02:47,020
Abbiamo un riduttore super snello che dovrebbe comunque fare il suo lavoro.

32
00:02:47,520 --> 00:02:49,750
E fa come puoi vedere.

33
00:02:49,800 --> 00:02:53,310
Pertanto, l'idea alla base di questo non  ridurre il nostro file.

34
00:02:53,340 --> 00:02:59,190
E 'lungo come prima, anche se un po' pi lungo, ma l'affermazione del caso switch  molto pi snella e possiamo

35
00:02:59,190 --> 00:03:01,450
vedere rapidamente quali casi sono gestiti nel riduttore.

36
00:03:01,590 --> 00:03:04,050
E questa  l'idea alla base di ci.

37
00:03:04,110 --> 00:03:07,850
Ora possiamo naturalmente fare lo stesso per il douceur ordinato.

38
00:03:08,130 --> 00:03:16,080
faccio ancora ma lo faccio ora perch ho tagliato il codice dal pre-Chase nel suo caso e lo metto senza alcun

39
00:03:16,590 --> 00:03:23,970
cambiamento nel pre-Chase in esso proprio come prima e quindi tornare pre-Chase in esso qui per questo caso proprio come

40
00:03:24,660 --> 00:03:32,460
qualsiasi orso polare Bergere  sempre restituito queste chiamate di funzione e il risultato della chiamata della funzione per essere precisi.

41
00:03:32,460 --> 00:03:38,580
Quindi ci sono anche una funzione per unit di inseguimento dove ottengo uno stato e quell'azione in

42
00:03:38,580 --> 00:03:41,160
cui restituisco qualcosa e o non lo

43
00:03:41,160 --> 00:03:50,240
Ora per il riduttore ordine consentire anche di creare una funzione per inizio hamburger di formaggio dove

44
00:03:50,250 --> 00:04:02,410
vengo dichiarare un'azione in cui poi inserir anche rapidamente il codice fuori da quel caso e quindi restituir il carbone o il

45
00:04:02,470 --> 00:04:06,730
risultato della chiamata per l'acquisto inizio del progresso.

46
00:04:06,820 --> 00:04:09,610
Lo stesso ovviamente per il successo degli hamburger pre-Chase.

47
00:04:09,610 --> 00:04:11,510
L abbiamo un po 'pi di codice.

48
00:04:12,010 --> 00:04:19,360
Quindi il successo di Konst per Che's burgers  un buon nome che serve per dichiarare un'azione come sempre.

49
00:04:19,360 --> 00:04:21,150
E poi ci mettiamo il codice.

50
00:04:21,160 --> 00:04:24,490
Abbiamo appena tagliato fuori la nostra dichiarazione di caso.

51
00:04:24,670 --> 00:04:28,310
Quindi ora torniamo semplicemente all'assalto di una chiamata di funzione.

52
00:04:28,480 --> 00:04:33,400
E una cosa che ho dimenticato ovviamente tutte queste chiamate di funzione richiedono un'azione di stato.

53
00:04:33,400 --> 00:04:35,770
Poich ci aspettiamo che qui sia un argomento.

54
00:04:35,950 --> 00:04:39,550
Quindi ovviamente dovrei aggiungere lo stato e l'azione a tutte queste chiamate di funzione.

55
00:04:39,550 --> 00:04:43,090
Nella mia dichiarazione caso interruttore, continuiamo.

56
00:04:43,210 --> 00:04:47,270
Facciamo lo stesso per un acquisto fallito da Bergere e tutte le altre funzioni.

57
00:04:47,380 --> 00:04:55,150
Naturalmente si pu saltare in avanti nel caso in cui non si voglia farlo in modo che lo stato di fallimento del pre-Chase fallisca e l'azione

58
00:04:56,010 --> 00:04:56,450
finisca qui.

59
00:04:56,450 --> 00:04:58,450
Q Mettiamolo nel codice.

60
00:04:58,450 --> 00:05:08,670
Ritiriamo e torniamo indietro per inseguimento Berger fallisce e passano allo stato un'azione per la

61
00:05:08,670 --> 00:05:09,430
funzione.

62
00:05:09,810 --> 00:05:13,110
E lo stesso vale per gli ordini di recupero, naturalmente.

63
00:05:13,110 --> 00:05:22,160
Quindi, gli ordini di acquisto di Konst iniziano a vedere come rifattorizzare una tale riduzione o pu essere un po 'macchinoso, ma

64
00:05:22,160 --> 00:05:26,890
ovviamente voglio mostrarti come farlo interamente e non solo per una funzione.

65
00:05:26,960 --> 00:05:33,470
Quindi qui tutto torner un risultato di ordini fecche che iniziano dopo aver passato un'azione ad esso.

66
00:05:34,620 --> 00:05:38,780
Ora abbiamo ottenuto gli ordini di recupero di nuovo un po 'di codice in pi.

67
00:05:39,630 --> 00:05:45,050
Facciamo un taglio e creiamo una nuova funzione per recuperare gli ordini.

68
00:05:45,120 --> 00:05:55,320
Il successo riceve anche lo stato e l'azione e quindi inseriamo il codice che abbiamo appena ritagliato e, come prima, semplicemente restituiamo una chiamata per

69
00:05:55,320 --> 00:06:02,890
recuperare gli ordini con successo nella funzione EUROCRYPT e passare lo stato ad esso e qualunque altra cosa.

70
00:06:02,900 --> 00:06:06,450
Tutti quelli che hanno fatto un altro per andare a prendere ordini falliscono.

71
00:06:06,480 --> 00:06:15,390
Quindi, abbiamo un ordine di recupero costante fallire tutto lo stato di ricezione e l'azione qui restituisce qualcosa o restituisce un codice che

72
00:06:15,390 --> 00:06:20,240
abbiamo appena tagliato e che si chiama fetch orders fallito per questo caso.

73
00:06:20,430 --> 00:06:25,840
Quindi abbiamo restituito un risultato di quella chiamata qui per dichiarare un'azione come questa.

74
00:06:25,980 --> 00:06:29,130
Mettiamo lo stato per il passo del diavolo sulla stessa linea.

75
00:06:29,130 --> 00:06:34,280
E ora otteniamo una dichiarazione caso di interruttore pulito per questo riduttore a.

76
00:06:34,680 --> 00:06:40,320
Con questo passiamo attraverso il nostro burger Bowl, ci vediamo ancora una volta per vedere se tutto funziona.

77
00:06:40,560 --> 00:06:42,400
Ordiniamo un delizioso hamburger.

78
00:06:42,630 --> 00:06:43,990
Basta inserire qualsiasi cosa.

79
00:06:44,020 --> 00:06:44,790
Non importa

80
00:06:44,790 --> 00:06:52,380
Voglio solo vedere se abbiamo qualche problema di stato in uno dei nostri contenitori, quindi cerchiamo di ordinare qui.

81
00:06:52,740 --> 00:06:54,910
Siamo reindirizzati.

82
00:06:55,290 --> 00:07:02,200
E sugli ordini vediamo tutti gli ordini incluso quello che abbiamo appena combinato.

83
00:07:02,460 --> 00:07:03,840
Proviamo anche qualcos'altro.

84
00:07:03,840 --> 00:07:08,060
Iniziamo a tirare un hamburger per cancellare che  continuato.

85
00:07:08,100 --> 00:07:13,910
Torniamo all'hamburger bowler che resettiamo come volevamo andare agli ordini.

86
00:07:13,970 --> 00:07:19,080
Ora continuiamo ancora una volta in modo che tutto funzioni.

87
00:07:19,150 --> 00:07:26,260
E con questo abbiamo implementato alcune tecniche avanzate di gridlock nella nostra applicazione Bergere Boulder.

88
00:07:26,260 --> 00:07:31,850
Ora sentitevi decisamente liberi di migliorare ulteriormente questo rendendo gli ordini deleter.

89
00:07:31,900 --> 00:07:37,960
Come ho detto o visto che hai una pagina dettagliata per ogni ordine, qualunque cosa tu voglia.

90
00:07:37,960 --> 00:07:43,220
Mi  piaciuta l'applicazione come  adesso, anche se abbiamo implementato molte funzioni interessanti.

91
00:07:43,270 --> 00:07:45,790
Un sacco di roba reattiva e di reindirizzamento.

92
00:07:46,090 --> 00:07:53,340
E con questo mi sento molto comodo per andare avanti e implementare l'autenticazione nelle prossime lezioni.

