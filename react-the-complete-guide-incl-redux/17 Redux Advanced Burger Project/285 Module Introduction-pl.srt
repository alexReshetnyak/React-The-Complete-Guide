1
00:00:02,410 --> 00:00:07,600
Witamy ponownie w naszym projekcie kursu Bergere Boulder, w ktrym ju uywamy redox.

2
00:00:07,600 --> 00:00:14,590
Dodalimy go wczeniej, ale w ostatnim module nauczylimy si obsugi asynchronicznego kodu i czenia go

3
00:00:14,590 --> 00:00:15,750
z redox.

4
00:00:15,840 --> 00:00:21,820
Nauczylimy si kilku przydatnych rzeczy, do ktrych teraz rwnie chc si zgosi w naszym projekcie kursu.

5
00:00:21,940 --> 00:00:24,980
Teraz zajmujemy si tylko Bouldingiem burgera.

6
00:00:24,990 --> 00:00:25,870
Dlaczego redux.

7
00:00:25,870 --> 00:00:29,670
Moemy wic dodawa i usuwa skadniki i to wszystko.

8
00:00:29,980 --> 00:00:32,520
Oczywicie mamy cay proces sprawdzenia.

9
00:00:32,530 --> 00:00:38,670
Moemy wej tam, gdzie oczywicie chcemy rwnie upewni si, e moemy przechowywa to nowe zamwienie, ktre tutaj tworzymy.

10
00:00:38,710 --> 00:00:45,040
Po pomylnym zapisaniu go na serwerze take lokalnie, abymy mogli, gdy tylko zlecimy kreacje, zobaczy

11
00:00:45,040 --> 00:00:46,360
je na przykad.

12
00:00:46,360 --> 00:00:52,210
S to wszystko, co chcemy zrobi, gdy chcemy si upewni, e dziaa poprawnie, a do

13
00:00:52,210 --> 00:00:54,220
tego potrzebujemy zaawansowanych funkcji Rydex.

14
00:00:54,220 --> 00:00:55,040
Dowiadujemy si o.

15
00:00:55,120 --> 00:01:01,090
W tym module zamierzamy nada atomowi, e dodamy Rydex do obsugi naszych zamwie w celu pobrania

16
00:01:01,090 --> 00:01:06,970
ich na przykad z serwera, a my zoptymalizujemy rwnie troch naszych producentw przy uyciu wszystkich narzdzi,

17
00:01:06,970 --> 00:01:09,690
o ktrych dowiedzielicie si w ostatnim modu rdzenia.

18
00:01:09,700 --> 00:01:10,880
Wic zacznijmy.

