1
00:00:02,270 --> 00:00:09,890
Bueno, lo nico que tambin podemos hacer es extraer la lgica de nuestros casos en sus propias funciones, de modo que nuestra

2
00:00:10,160 --> 00:00:13,100
declaracin de cambio de caso sea muy corta.

3
00:00:13,160 --> 00:00:18,940
Entonces, la reduccin o el ao puedo agregar una nueva constante que podra nombrar en el ingrediente.

4
00:00:19,010 --> 00:00:25,100
Entonces, bsicamente, el tipo de accin manejar esto como una funcin que recibe el estado y la accin tal

5
00:00:25,100 --> 00:00:27,280
como usted lo hace o lo hace.

6
00:00:27,590 --> 00:00:30,870
Pero all solo quiero manejar este cdigo.

7
00:00:31,070 --> 00:00:38,600
As que tomar todo el cdigo del caso. Los tipos de accin agregan ingrediente. Crtenlo y muvalo a un ingrediente como se

8
00:00:38,810 --> 00:00:40,540
muestra en el ltimo mdulo.

9
00:00:40,730 --> 00:00:44,620
El cdigo es el mismo ya que todava tenemos el estado y la accin de X all.

10
00:00:44,780 --> 00:00:55,290
Ahora en mi caso aqu, por lo tanto, solo tengo dos devoluciones e ingredientes y paso el estado y en realidad entramos en el reductor y

11
00:00:55,290 --> 00:01:02,490
esto bsicamente hace lo mismo que antes, pero ahora en lnea, que por supuesto es una manera

12
00:01:02,490 --> 00:01:06,600
sper rpida de ver todo el casos que estamos manejando.

13
00:01:06,750 --> 00:01:11,780
Y, obviamente, no solo quiero hacer esto por un ingrediente, tambin quiero hacer esto con Remove

14
00:01:11,780 --> 00:01:12,190
Ingredion.

15
00:01:12,230 --> 00:01:18,840
solo cortaremos el cdigo del ao remove ingredient case incluyendo la declaracin return del curso y como regresamos est

16
00:01:19,170 --> 00:01:26,200
aqu en la funcin no podemos simplemente ejecutar la funcin y devuelve el resultado aqu que ser el estado actualizado.

17
00:01:26,200 --> 00:01:31,930
As que vamos a crear una funcin eliminar ingrediente la funcin de flecha de tu sake

18
00:01:31,930 --> 00:01:33,320
una y otra vez,

19
00:01:33,340 --> 00:01:41,000
As que quitar el ingrediente se ejecuta aqu y pasamos un estado una accin al igual que con la adicin comenz.

20
00:01:41,050 --> 00:01:45,030
Entonces con eso conseguimos estas dos funciones subcontratadas en eso.

21
00:01:45,130 --> 00:01:46,830
Ahora lo mismo para establecer.

22
00:01:46,860 --> 00:01:56,470
Por supuesto, tambin se puede capturar todo el cdigo y crear una nueva funcin, establecer ingredientes, como siempre esperar estado

23
00:01:56,470 --> 00:02:01,580
y accin aqu y luego pegar el cdigo de esta manera.

24
00:02:02,530 --> 00:02:11,190
Y en el caso de que yo pueda, puedo devolver los ingredientes establecidos y pasar el estado y la accin tambin.

25
00:02:11,550 --> 00:02:16,770
Y por ltimo, pero no menos importante, hacemos lo mismo para los ingredientes de bsqueda fallidos.

26
00:02:16,770 --> 00:02:24,120
Por supuesto, es una versin muy corta, pero an as, los ingredientes de bsqueda fallidos tambin toman estado y

27
00:02:24,120 --> 00:02:28,170
accin como entrada y luego simplemente devuelven el estado actualizado.

28
00:02:28,170 --> 00:02:36,660
As que aqu podemos simplemente llamar a esto, no estas regiones de recuperacin de retorno fallan y pasan al estado una accin

29
00:02:36,660 --> 00:02:37,850
que es importante.

30
00:02:37,980 --> 00:02:40,940
Y con eso volvemos a un estado predeterminado.

31
00:02:41,010 --> 00:02:47,020
Tenemos un reductor super magro que todava debera hacer su trabajo.

32
00:02:47,520 --> 00:02:49,750
Y hace lo que puedes ver.

33
00:02:49,800 --> 00:02:53,310
Entonces, la idea detrs de esto, por supuesto, no es reducir nuestro archivo.

34
00:02:53,340 --> 00:02:59,190
Es tan largo como antes, incluso un poco ms largo, pero la declaracin de la caja del interruptor es mucho ms delgada y podemos

35
00:02:59,190 --> 00:03:01,450
ver rpidamente qu casos se manejan en el reductor.

36
00:03:01,590 --> 00:03:04,050
Y esa es toda la idea detrs de eso.

37
00:03:04,110 --> 00:03:07,850
Ahora podemos, por supuesto, hacer lo mismo con el douceur ordenado.

38
00:03:08,130 --> 00:03:16,080
pero lo hago ahora porque cort el cdigo del pre-Chase en su caso y lo puse sin ningn cambio en pre-Chase en

39
00:03:16,590 --> 00:03:23,970
el mismo como antes y luego regresar antes de Chase aqu para este caso al igual que cualquier oso polar

40
00:03:24,660 --> 00:03:32,460
de Bergere siempre se devuelve estas llamadas de funcin y el resultado de la llamada a la funcin para ser precisos.

41
00:03:32,460 --> 00:03:38,580
Entonces tambin hay una funcin por unidad de seguimiento donde obtengo un estado y esa accin donde

42
00:03:38,580 --> 00:03:41,160
devuelvo algo o no lo hago todava

43
00:03:41,160 --> 00:03:50,240
Ahora, para el orden reductor, tambin permite crear una funcin para cada hamburguesa de queso, donde obtengo

44
00:03:50,250 --> 00:04:02,410
una accin de estado en la que tambin incluir rpidamente el cdigo en ese caso y, por lo tanto, devolver el carbn o

45
00:04:02,470 --> 00:04:06,730
el resultado de la compra. comienzo del progreso

46
00:04:06,820 --> 00:04:09,610
Lo mismo obviamente para el xito de la hamburguesa antes de la Caza.

47
00:04:09,610 --> 00:04:11,510
Ah tenemos un poco ms de cdigo.

48
00:04:12,010 --> 00:04:19,360
As que el xito de Konst per Che's burgers es un buen nombre de funcin que se necesita para establecer una accin como siempre.

49
00:04:19,360 --> 00:04:21,150
Y luego ah ponemos el cdigo.

50
00:04:21,160 --> 00:04:24,490
Acabamos de cortar nuestra declaracin de caso.

51
00:04:24,670 --> 00:04:28,310
As que ahora volvamos simplemente al asalto de una llamada a funcin.

52
00:04:28,480 --> 00:04:33,400
Y una cosa que s olvide es que todas estas llamadas a funciones requieren que el estado sea una accin.

53
00:04:33,400 --> 00:04:35,770
Ya que esperamos eso aqu como un argumento.

54
00:04:35,950 --> 00:04:39,550
Entonces, por supuesto, debera agregar estado y accin a todas estas llamadas a funciones.

55
00:04:39,550 --> 00:04:43,090
En mi declaracin de maysculas y minsculas, continuemos.

56
00:04:43,210 --> 00:04:47,270
Hagamos lo mismo para una compra fallida de Bergere y todas las otras funciones.

57
00:04:47,380 --> 00:04:55,150
Por supuesto, puede omitir el paso en caso de que no quiera hacer eso para que el estado de la hamburguesa antes de la Caza falle y la accin

58
00:04:56,010 --> 00:04:56,450
termine all.

59
00:04:56,450 --> 00:04:58,450
P Pongmoslo en el cdigo.

60
00:04:58,450 --> 00:05:08,670
Cortamos y volvemos simplemente por persecucin. Berger falla y pasan una accin a la

61
00:05:08,670 --> 00:05:09,430
funcin.

62
00:05:09,810 --> 00:05:13,110
Y lo mismo para las rdenes de bsqueda comienza por supuesto.

63
00:05:13,110 --> 00:05:22,160
Entonces, las rdenes de bsqueda de Konst comienzan a ver cmo se refactura una reduccin de este tipo o puede ser un poco engorroso, pero

64
00:05:22,160 --> 00:05:26,890
obviamente quiero mostrarle cmo hacerlo por completo y no solo para una funcin.

65
00:05:26,960 --> 00:05:33,470
As que aqu se devolvern todos los resultados de las rdenes fecche despus de pasarle una accin.

66
00:05:34,620 --> 00:05:38,780
Ahora conseguimos que las rdenes de bsqueda tengan xito un poco ms de cdigo nuevamente.

67
00:05:39,630 --> 00:05:45,050
Cortmoslo y creemos una nueva funcin para buscar rdenes.

68
00:05:45,120 --> 00:05:55,320
El xito tambin recibe estado y accin y luego ponemos el cdigo que acabamos de cortar y, como antes, simplemente devolvemos una llamada para obtener

69
00:05:55,320 --> 00:06:02,890
el xito de las rdenes en la funcin EUROCRYPT y pasamos una accin al estado y lo que sea.

70
00:06:02,900 --> 00:06:06,450
Todos los que han hecho uno ms para ir a buscar rdenes fallan.

71
00:06:06,480 --> 00:06:15,390
As que vamos a tener que las rdenes de recuperacin constante fallen todo el estado de recepcin y la accin aqu devuelve algo o devuelve un cdigo

72
00:06:15,390 --> 00:06:20,240
que acabamos de cortar y que se llama rdenes de recuperacin fallidas para este caso.

73
00:06:20,430 --> 00:06:25,840
As que devolvimos el resultado de esa llamada aqu para establecer una accin como esta.

74
00:06:25,980 --> 00:06:29,130
Pongamos el estado para el paso del diablo en la misma lnea.

75
00:06:29,130 --> 00:06:34,280
Y ahora obtenemos una declaracin de caso de interruptor limpia para este reductor.

76
00:06:34,680 --> 00:06:40,320
Con eso vamos a travs de nuestro Burger Bowl, ests en una vez ms para ver realmente si todo est funcionando?

77
00:06:40,560 --> 00:06:42,400
Vamos a pedir una deliciosa hamburguesa.

78
00:06:42,630 --> 00:06:43,990
Solo ingrese cualquier cosa.

79
00:06:44,020 --> 00:06:44,790
Realmente no importa

80
00:06:44,790 --> 00:06:52,380
Solo quiero ver si tenemos problemas de estado en cualquiera de nuestros contenedores, as que hagamos un pedido aqu.

81
00:06:52,740 --> 00:06:54,910
Somos redireccionados

82
00:06:55,290 --> 00:07:02,200
Y en los pedidos vemos todos los pedidos, incluido el que acabamos de unir.

83
00:07:02,460 --> 00:07:03,840
Probemos tambin con otra cosa.

84
00:07:03,840 --> 00:07:08,060
Comencemos jalando una hamburguesa para cancelar que contine.

85
00:07:08,100 --> 00:07:13,910
Regresemos a la hamburguesa de hamburguesas que reseteamos como quisiramos, podemos ir a las rdenes.

86
00:07:13,970 --> 00:07:19,080
Continuemos ahora una vez ms para que todo parezca funcionar.

87
00:07:19,150 --> 00:07:26,260
Y con eso implementamos algunas tcnicas avanzadas de interbloqueo en nuestra aplicacin Bergere Boulder.

88
00:07:26,260 --> 00:07:31,850
Ahora, definitivamente, sintase libre de mejorar esto an ms haciendo que las rdenes se borren.

89
00:07:31,900 --> 00:07:37,960
Como dije o se puede ver, usted tiene una pgina detallada para cada orden que quiera.

90
00:07:37,960 --> 00:07:43,220
Me gust la aplicacin tal como est ahora, aunque implementamos muchas funciones geniales.

91
00:07:43,270 --> 00:07:45,790
Una gran cantidad de reaccionar y redirigir cosas.

92
00:07:46,090 --> 00:07:53,340
Y con eso me siento muy cmodo para avanzar e implementar la autenticacin en las prximas conferencias.

