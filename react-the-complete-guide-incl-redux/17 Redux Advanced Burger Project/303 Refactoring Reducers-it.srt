1
00:00:02,200 --> 00:00:09,040
Quindi nell'ultimo modulo ti ho mostrato alcuni modi per refactoring i tuoi riduttori e una menzione che questi modi

2
00:00:09,040 --> 00:00:15,280
o questi metodi sono tutti facoltativi e sono ancora li voglio impiegare qui per ripulire questo riduttore

3
00:00:15,280 --> 00:00:19,140
e rendere l'istruzione switch case un po ' pulitore dovrei dire.

4
00:00:19,420 --> 00:00:25,780
Ad esempio, aggiungo il mio metodo di aggiornamento dell'oggetto convenienza che rende l'aggiornamento degli oggetti come facciamo

5
00:00:25,780 --> 00:00:30,130
per l'intero stato, ma poi tutti gli ingredienti ti rendono pi facile.

6
00:00:30,610 --> 00:00:39,030
Per questo aggiungiamo rapidamente una nuova funzione e la aggiunger nell'utilit di cartella dord genius che non  scritta in

7
00:00:39,040 --> 00:00:39,990
questo modo.

8
00:00:40,120 --> 00:00:41,320
 corretto.

9
00:00:41,350 --> 00:00:46,870
E quando esporti una nuova costante che chiamer oggetto aggiornamento.

10
00:00:46,870 --> 00:00:48,520
Quindi la funzione della freccia.

11
00:00:49,210 --> 00:00:58,160
E in questa funzione mi aspetto di ottenere il mio vecchio oggetto e le propriet aggiornate o qualsiasi altra cosa si

12
00:00:58,160 --> 00:01:00,920
voglia chiamare nuove propriet qualunque esso sia.

13
00:01:01,040 --> 00:01:05,270
E poi c' la stessa funzione che ho scritto negli ultimi moduli.

14
00:01:05,510 --> 00:01:08,530
Mi torner semplicemente un nuovo oggetto javascript.

15
00:01:08,540 --> 00:01:10,220
Questa  l'idea alla base di ci.

16
00:01:10,250 --> 00:01:17,480
poi distribuisce anche le propriet delle propriet aggiornate a cui dovrebbe essere un oggetto.

17
00:01:17,540 --> 00:01:22,480
Un nuovo oggetto distribuisce le propriet del vecchio oggetto ma

18
00:01:22,560 --> 00:01:26,030
Ora posso usare la funzione oggetto aggiornamento nei miei riduttori.

19
00:01:26,220 --> 00:01:35,970
Quindi lo importer al primo oggetto di aggiornamento dell'importazione chiamato esportazioni ed  necessario che le parentesi graffe di qualit non

20
00:01:36,540 --> 00:01:39,490
si spostino dal file di utilit.

21
00:01:39,490 --> 00:01:45,170
E ora posso chiamare l'oggetto aggiornamento ogni volta che ho un codice come questo dove distribuisco alcuni oggetti di scena.

22
00:01:45,540 --> 00:01:54,090
Quindi in questo caso qui avr prima i miei ingredienti aggiornati che ora saranno una chiamata per aggiornare

23
00:01:54,600 --> 00:01:58,260
l'oggetto dove passer i vecchi ingredienti di Sodhi.

24
00:01:58,260 --> 00:02:05,590
Quindi ora sto replicando questa parte e dove passo i miei nuovi ingredienti a questa parte.

25
00:02:05,640 --> 00:02:11,880
Quindi tutti voi create il mio nuovo concetto solo per farlo dividere su pi righe e non impostare

26
00:02:11,880 --> 00:02:13,470
tutto ci in un'unica espressione.

27
00:02:13,500 --> 00:02:17,830
Quindi qui avr il mio ingrediente aggiornato.

28
00:02:18,450 --> 00:02:25,140
Questo dovrebbe essere un oggetto Java in cui ho appena una coppia di valori chiave morti il nome dinamico

29
00:02:25,410 --> 00:02:31,950
dell'ingrediente e quindi il valore aggiornato che viene incrementato e quindi tutto il passato viene aggiornato come un

30
00:02:31,980 --> 00:02:33,450
secondo argomento dell'oggetto Apptd.

31
00:02:33,510 --> 00:02:38,880
E quello deve essere un ingrediente aggiornato dell'oggetto deve essere un oggetto perch questo  ci che la funzione

32
00:02:38,880 --> 00:02:39,990
di utilit si aspetta.

33
00:02:40,050 --> 00:02:42,720
Altrimenti non funzioner come previsto.

34
00:02:42,720 --> 00:02:45,820
Quindi con quello ho gli ingredienti aggiornati.

35
00:02:45,890 --> 00:02:48,540
Questo  ci che assegno agli ingredienti ora.

36
00:02:48,990 --> 00:02:53,420
Ma ovviamente l'idea  che sostituisco sempre questa parte.

37
00:02:53,610 --> 00:02:58,500
Quindi tutti creano un nuovo contenuto che chiamer lo stato aggiornato.

38
00:02:58,500 --> 00:03:07,060
Forse questo dovrebbe essere un oggetto javascript in cui ora ho i miei ingredienti e il prezzo totale in questo modo.

39
00:03:07,350 --> 00:03:15,900
E alla fine qui posso quindi chiamare l'oggetto update this e passare il vecchio stato che  Optik che

40
00:03:15,920 --> 00:03:20,360
voglio aggiornare Voglio tornare qui e passare lo stato aggiornato.

41
00:03:20,360 --> 00:03:25,340
Quindi ancora un sacco di linee un po 'pi strutturate e usando quella funzione di utilit.

42
00:03:25,430 --> 00:03:27,610
E volevo solo mostrare come implementarlo.

43
00:03:27,740 --> 00:03:33,480
Avremmo potuto spremere tutto ci in una sola riga, ma sarebbe stato un po 'difficile seguirlo.

44
00:03:33,510 --> 00:03:35,660
Questo  il motivo per cui l'ho scritto su pi righe.

45
00:03:36,020 --> 00:03:41,630
Quindi ora copier tutto quel codice perch quando rimuoviamo l'ingrediente  essenzialmente la stessa

46
00:03:41,900 --> 00:03:48,110
storia ma ovviamente la differenza  che abbiamo bisogno di decrementare il nostro ingrediente di uno.

47
00:03:48,440 --> 00:03:56,000
E anche se  in una dichiarazione caso interruttore, mi piace il fatto che riassegnare una costante qui non

48
00:03:56,360 --> 00:03:59,370
riconosca che non riesco a raggiungere questo codice.

49
00:03:59,480 --> 00:04:03,030
Quindi quello che far  semplicemente rinominare questi Costanti.

50
00:04:03,050 --> 00:04:08,760
Non ideale ma sfortunatamente deve essere aggiornato.

51
00:04:09,170 --> 00:04:16,510
Forse  solo di nuovo necessario perch l'ID non rileva le costanti costanti di DS che non

52
00:04:16,550 --> 00:04:18,380
possono mai essere riassegnate.

53
00:04:18,410 --> 00:04:21,270
Quindi con quello usiamo gli ingredienti aggiornati.

54
00:04:21,290 --> 00:04:30,140
Ecco questa nuova costante che ho appena creato e aggiornato qui e poi aggiornato.

55
00:04:30,140 --> 00:04:33,690
Ora per gli ingredienti set  un po 'pi facile l.

56
00:04:33,710 --> 00:04:39,750
Voglio anche restituire una chiamata per aggiornare l'oggetto alla funzione che stiamo importando.

57
00:04:39,750 --> 00:04:45,810
Ho passato lo stato ovviamente e il secondo argomento dovrebbe essere un oggetto javascript in cui ora copio tutto

58
00:04:45,810 --> 00:04:49,040
il codice passato in precedenza anche a questo nuovo oggetto.

59
00:04:49,270 --> 00:04:56,600
Quindi ora sto usando la mia funzione di utilit qui per aggiornare lo stato e lo stesso naturalmente qui

60
00:04:56,600 --> 00:04:58,220
sotto per l'errore l.

61
00:04:58,230 --> 00:05:06,500
Voglio anche chiamare lo stato di aggiornamento come questo oggetto di aggiornamento intendo.

62
00:05:06,550 --> 00:05:07,940
Quindi come sempre aggiornamento.

63
00:05:07,960 --> 00:05:16,380
Oggetto stupro deve dichiarare e quindi Optik dove un errore detto o troppo vero come questo.

64
00:05:16,490 --> 00:05:22,750
Quindi questo  l'ingrediente che usiamo sono aggiornati con la nostra funzione di utilit.

65
00:05:22,760 --> 00:05:25,790
Facciamo ora lo stesso per questo riduttore di ordini.

66
00:05:25,790 --> 00:05:36,020
Ci sono anche importare come oggetto di aggiornamento esportazione denominato dall'utility per il quale possiamo trovare un livello sopra la cartella di

67
00:05:36,020 --> 00:05:40,000
riduttori e nessun aggiornamento di notizie ottico da usare.

68
00:05:40,010 --> 00:05:46,150
Quindi un oggetto di aggiornamento passato per dichiarare e passare un oggetto javascript  stato inseguito su falso.

69
00:05:46,220 --> 00:05:50,250
Puoi rimuovere questo codice quindi lo stesso qui.

70
00:05:50,600 --> 00:05:58,290
Aggiorna oggetto passare per dichiarare un oggetto resettare il caricamento su falso come questo.

71
00:05:58,340 --> 00:05:59,390
Rimuovi quel codice.

72
00:06:00,220 --> 00:06:05,840
E anche quando arriviamo al caso di successo ci sei, ovviamente vogliamo tutti aggiornare un oggetto.

73
00:06:05,860 --> 00:06:17,850
Quindi qui aggiorner un oggetto oltre lo stato ovviamente e quindi tutte queste cose qui come propriet di un oggetto javascript possono sbarazzarsi

74
00:06:17,880 --> 00:06:21,430
del codice da quel momento in poi.

75
00:06:21,660 --> 00:06:23,880
E ovviamente aggiorniamo un numero Optik Qui qui.

76
00:06:23,910 --> 00:06:25,150
Nuovo ordine.

77
00:06:25,170 --> 00:06:28,260
L aggiorniamo anche un oggetto.

78
00:06:28,260 --> 00:06:32,720
Otteniamo D. S. ordina qui i dati come un oggetto.

79
00:06:32,760 --> 00:06:43,110
E voglio passare una nuova propriet ad esso id id che dovrebbe essere un ID ordine di azione e con questo non posso

80
00:06:43,110 --> 00:06:45,200
liberarmi di questo codice qui.

81
00:06:45,450 --> 00:06:48,970
Quindi ora abbiamo usato la nostra app anche per questa funzione ottica.

82
00:06:49,350 --> 00:06:51,090
E ci stiamo avvicinando alla fine.

83
00:06:51,090 --> 00:06:57,870
Facciamo anche questo per l'acquisto di Forgan Berger FAIL FAIL allo stato qui carico imposta su false.

84
00:06:58,020 --> 00:07:07,640
Quindi stanno anche usando la funzione di aggiornamento Optik e o duplicano rapidamente questo per l'avvio degli ordini di recupero ad eccezione

85
00:07:07,910 --> 00:07:09,450
di oggi qui.

86
00:07:09,730 --> 00:07:17,500
Come vedi, voglio impostare il caricamento su true e per il recupero degli ordini con successo richiamer loro oggetto

87
00:07:17,510 --> 00:07:24,950
anche passato allo stato e poi tutti hanno ordini e caricamento impostati su false come propriet che una

88
00:07:25,250 --> 00:07:28,600
volta ho passato come oggetto javascript come quella.

89
00:07:29,620 --> 00:07:33,650
E ora l'ultimo oggetto di aggiornamento chiamato l per gli ordini di recupero fallisce.

90
00:07:33,740 --> 00:07:40,720
Passa terribilmente lo stato esistente che deve essere aggiornato e tutti i dettagli hanno caricato su false.

91
00:07:40,730 --> 00:07:43,120
Di nuovo tutto ci  opzionale.

92
00:07:43,360 --> 00:07:45,820
Ma riduce la funzione di utilit.

93
00:07:45,820 --> 00:07:50,200
E se mai dovessi cambiare la logica che usi per aggiornare un oggetto devi solo

94
00:07:50,200 --> 00:07:51,400
farlo in un posto.

95
00:07:51,430 --> 00:07:56,380
Ora vediamo rapidamente se tutto funziona, il caricamento funziona.

96
00:07:56,380 --> 00:07:58,570
Gestire un hamburger sembra funzionare.

97
00:07:58,570 --> 00:08:01,450
Quindi tutto va bene, credo.

98
00:08:01,660 --> 00:08:04,300
Andiamo velocemente alla pagina di pagamento.

99
00:08:04,300 --> 00:08:05,560
Ecco, questo  bello.

100
00:08:05,560 --> 00:08:06,520
Sembra funzionare.

101
00:08:06,550 --> 00:08:07,510
Cos'altro possiamo fare.

102
00:08:07,520 --> 00:08:09,120
Diamo un'occhiata alla prossima lezione.

