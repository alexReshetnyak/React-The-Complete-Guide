1
00:00:02,130 --> 00:00:05,260
Nell'ultima lezione abbiamo impostato la configurazione di base del

2
00:00:05,350 --> 00:00:07,320
webpack, ma non  ancora finito.

3
00:00:07,540 --> 00:00:14,370
Una cosa importante da aggiungere in anticipo  assicurarsi che il webpack venga aggiunto automaticamente. js alla fine di queste importazioni

4
00:00:14,440 --> 00:00:20,170
qui in modo che sia in grado di importarlo correttamente.

5
00:00:20,230 --> 00:00:27,490
Ora per farlo funzionare in questo modo, dobbiamo configurarlo in un certo modo, nella nostra configurazione del webpack allo stesso livello dell'output

6
00:00:27,910 --> 00:00:34,270
della voce e cos via, aggiungiamo la configurazione di risoluzione. Questo richiede un oggetto javascript e l

7
00:00:34,270 --> 00:00:41,230
possiamo risolvere alcune estensioni, quindi possiamo sostanzialmente dire al webpack che dovrebbe essere a conoscenza di

8
00:00:41,230 --> 00:00:42,990
determinate estensioni e se

9
00:00:43,090 --> 00:00:49,270
incontra un'importazione senza un'estensione, dovrebbe provare queste estensioni e vedere se trova un file

10
00:00:49,270 --> 00:00:50,970
di uno di questi.

11
00:00:50,980 --> 00:00:53,090
Quindi questa  una serie

12
00:00:53,230 --> 00:01:01,210
di possibili estensioni e voglio supportare. js e. jsx qui in modo che possa vedere se trova un

13
00:01:01,210 --> 00:01:05,020
file con quell'estensione se non  definita alcuna estensione, questa  una cosa importante.

14
00:01:05,020 --> 00:01:13,870
Ora la prossima e pi importante cosa sono i nostri programmi di caricamento anche se voglio assicurarmi che gestiamo correttamente diversi

15
00:01:13,960 --> 00:01:16,330
tipi di file, questo viene fatto

16
00:01:16,420 --> 00:01:22,540
con una configurazione speciale allo stesso livello dell'output e della risoluzione che  denominata module

17
00:01:22,930 --> 00:01:27,260
perch impongo una dipendenza  indicato come un modulo, quindi

18
00:01:27,370 --> 00:01:30,520
potresti tradurre il modulo con il file.

19
00:01:30,640 --> 00:01:38,290
Quindi qui impostiamo ci che il webpack dovrebbe fare con i singoli file e lo controlliamo con un array di regole.

20
00:01:38,290 --> 00:01:46,720
Ora ogni regola  un oggetto javascript e ogni regola ora ha bisogno di prima di tutto test, il che

21
00:01:46,780 --> 00:01:52,150
significa testare se un determinato file, un file web identificato soddisfa un determinato

22
00:01:52,330 --> 00:01:59,920
criterio, questo criterio  il nome del file e viene controllato con un'espressione regolare, il l'espressione regolare controlla

23
00:01:59,920 --> 00:02:04,470
comunemente l'estensione del file. Quindi potremmo dire qualsiasi cosa che finisca con. js ed io dobbiamo

24
00:02:04,510 --> 00:02:07,230
scappare dal punto qui dato che siamo

25
00:02:07,250 --> 00:02:11,610
in un'espressione regolare e altrimenti si riferirebbe a qualsiasi personaggio.

26
00:02:11,770 --> 00:02:13,310
Se siamo in un js

27
00:02:13,370 --> 00:02:14,300
file,

28
00:02:14,320 --> 00:02:21,060
quindi se finisce. js, quindi voglio applicare un determinato loader, ora un

29
00:02:21,220 --> 00:02:25,870
caricatore  come un plugin di terze parti che fa qualcosa nel file.

30
00:02:25,900 --> 00:02:27,510
Ora per i file

31
00:02:27,520 --> 00:02:30,990
js, voglio anche aggiungere una configurazione aggiuntiva che 

32
00:02:31,210 --> 00:02:34,090
escludere che mi permette di escludere determinati modelli.

33
00:02:34,090 --> 00:02:35,900
Anche un'espressione regolare, voglio

34
00:02:36,040 --> 00:02:43,570
solo controllare i moduli del nodo nel percorso del file, quindi non dovrebbe provare a trasformare nulla

35
00:02:43,570 --> 00:02:47,230
nei moduli del nodo poich si tratta di

36
00:02:47,230 --> 00:02:48,740
librerie di terze parti

37
00:02:48,880 --> 00:02:50,730
che gi importiamo, non

38
00:02:50,830 --> 00:02:53,590
vogliamo trasformarle di nuovo , sono

39
00:02:53,590 --> 00:02:56,470
gi ottimizzati, dovrebbero solo toccare i nostri file.

40
00:02:56,500 --> 00:02:59,240
Ora, per quanto riguarda questo caricatore?

41
00:02:59,770 --> 00:03:04,650
Bene per javascript, useremo il babel loader, babel  lo

42
00:03:04,960 --> 00:03:11,990
standard defacto per trasporre il javascript di prossima generazione a gen javascript corrente, quindi

43
00:03:12,190 --> 00:03:16,090
installiamo e configuriamo babel nella prossima lezione.

