1
00:00:02,330 --> 00:00:10,850
Para que o nosso projeto funcione e seja atendido pelo servidor dev ou mais tarde na

2
00:00:10,850 --> 00:00:16,880
produo, precisamos conectar nosso ndice. arquivo html para os arquivos de sada que so gerados, ao usar o

3
00:00:16,880 --> 00:00:22,100
servidor dev so armazenados apenas na memria, mas eles ainda so gerados. Precisamos instalar um plugin webpack para

4
00:00:22,220 --> 00:00:28,610
isso, com npm install --save-, save dev, desculpe-me um monte de traos, com save-dev, podemos

5
00:00:28,610 --> 00:00:33,390
instalar o plugin html-webpack, este  um plugin especial que permite

6
00:00:33,830 --> 00:00:40,940
para conectar nosso arquivo html com nossa sada e o webpack far isso automaticamente e injetar nosso

7
00:00:41,000 --> 00:00:47,440
script includo e assim por diante nesse arquivo html. Na configurao do webpack, agora adicionamos plugins, 

8
00:00:47,450 --> 00:00:49,920
um novo n no nvel de

9
00:00:49,920 --> 00:00:56,720
configurao da raiz, plugins e  necessrio um array como um argumento ou como um valor, devo

10
00:00:56,720 --> 00:00:57,340
dizer.

11
00:00:57,690 --> 00:01:00,420
E agora, primeiro de tudo, precisamos instalar

12
00:01:00,440 --> 00:01:04,900
ou importar devo dizer o plugin html webpack, ento vou criar

13
00:01:04,910 --> 00:01:08,860
uma constante que eu nomear htmlWebpackPlugin mas o nome 

14
00:01:08,990 --> 00:01:15,290
com voc e aqui eu vou exigir o plugin html-webpack, o pacote que acabamos de instalar.

15
00:01:15,290 --> 00:01:17,100
Agora na matriz de

16
00:01:17,180 --> 00:01:25,190
plugins, eu crio uma nova instncia dele, novo HtmlWebpackPlugin e passamos um objeto para o construtor onde configuramos

17
00:01:25,190 --> 00:01:27,280
este plugin. Aqui, vou

18
00:01:27,290 --> 00:01:32,930
configurar um template, ento o arquivo html que eu quero usar como base

19
00:01:32,930 --> 00:01:43,040
e claro, eu quero usar o meu arquivo html na pasta de origem. Ento eu vou apontar para ele com o dirname e ento eu simplesmente adicionarei /

20
00:01:43,040 --> 00:01:45,370
source / index. html, construindo

21
00:01:45,410 --> 00:01:47,550
um caminho para isso.

22
00:01:47,550 --> 00:01:50,960
Ento, agora estamos apontando para o arquivo que queremos usar como

23
00:01:50,990 --> 00:01:58,400
um modelo, eu quero injetar minhas coisas no corpo que  a configurao extra que podemos passar para o plugin aqui e o arquivo

24
00:01:58,430 --> 00:02:02,890
de sada, filename tambm deve ser index. html, esse  o arquivo que

25
00:02:02,930 --> 00:02:06,780
eventualmente ir gerar, novamente para o servidor apenas na memria,

26
00:02:06,890 --> 00:02:08,150
mais tarde, quando

27
00:02:08,150 --> 00:02:14,330
usarmos um fluxo de trabalho diferente para construir isso, para produo, ele nos fornecer os arquivos reais

28
00:02:14,330 --> 00:02:16,310
que poderamos carregar em um servidor.

29
00:02:16,340 --> 00:02:20,040
Ento, com isso adicionado, vamos agora reiniciar o

30
00:02:20,090 --> 00:02:25,040
npm start, agora devemos obter a conexo do webpack para o

31
00:02:25,050 --> 00:02:32,660
arquivo html, ento vamos ver se isso funciona. Vamos revisitar localhost8080 e ns vemos uma pgina vazia agora

32
00:02:32,660 --> 00:02:35,630
pelo menos, ns temos alguns erros l.

33
00:02:35,720 --> 00:02:38,900
Agora, esses so erros de reao, o que 

34
00:02:38,900 --> 00:02:46,010
um bom sinal, nosso aplicativo parece funcionar, est nos informando que provavelmente esquecemos de exportar nosso componente do arquivo em

35
00:02:46,010 --> 00:02:48,620
que ele est definido. Vamos verificar, estamos

36
00:02:48,620 --> 00:02:56,240
exportando o pizzaImage, o componente baseado em pizza e o componente do usurio, mas nunca exportamos o aplicativo, ento vamos

37
00:02:56,290 --> 00:02:56,960
adicionar uma

38
00:02:57,050 --> 00:03:01,130
exportao padro ao componente app, que  sempre o perigo de

39
00:03:01,130 --> 00:03:03,620
construir algo e agora isso parece muito

40
00:03:03,890 --> 00:03:05,300
melhor , vemos os

41
00:03:05,300 --> 00:03:12,920
usurios e agora fica interessante, essa  a pizza. Ns vemos a pizza e incrvel  se ns inspecionar a

42
00:03:12,920 --> 00:03:19,730
guia de rede e eu voltar para os usurios e recarregar o aplicativo, assistir os pedidos de rede, voc

43
00:03:19,730 --> 00:03:21,730
v que 0. arquivo js?

44
00:03:21,740 --> 00:03:28,100
Esse  o nosso arquivo javascript carregado preguioso que baixamos, to preguioso carregamento est trabalhando aqui e

45
00:03:28,100 --> 00:03:29,740
nosso aplicativo reagir est

46
00:03:29,840 --> 00:03:33,450
funcionando, o estilo tambm parece chutar, se inspecionar a imagem

47
00:03:33,470 --> 00:03:40,520
de pizza, vemos que estamos usando mdulos css aqui e temos os estilos ns instalamos em nossos arquivos css.

48
00:03:40,520 --> 00:03:44,330
Agora tudo o que eu vou fazer aqui  uma correo rpida e fcil aqui nos

49
00:03:44,330 --> 00:03:49,800
links, eu no gosto do fato de que ns no temos um espao em branco na frente do segundo link, vamos consert-lo assim,

50
00:03:49,820 --> 00:03:51,080
mas isso  puramente cosmtico.

51
00:03:51,080 --> 00:03:57,920
O que  importante para ns  que temos um fluxo de trabalho em funcionamento, uma configurao de projeto funcional onde

52
00:03:57,950 --> 00:04:02,450
podemos criar um aplicativo de resposta com os recursos que voc aprendeu neste curso.

53
00:04:02,450 --> 00:04:05,900
Agora que  apenas o fluxo de trabalho de desenvolvimento, o

54
00:04:06,050 --> 00:04:11,510
servidor de desenvolvimento, se agora quisermos enviar este aplicativo para um servidor real, teremos que fazer alguns

55
00:04:11,510 --> 00:04:15,050
ajustes na configurao para prepar-lo e otimiz-lo para a produo.

