1
00:00:02,290 --> 00:00:09,880
Ns adicionamos javascript e css loaders, agora aps o nosso muito longo carregador css aqui, vou adicionar

2
00:00:10,300 --> 00:00:14,170
outra regra e essa regra deve testar as imagens.

3
00:00:14,260 --> 00:00:24,180
Ento, aqui, a expresso regular ir verificar os arquivos que terminam com png, jpeg, que tambm pode ser escrito com um E,

4
00:00:24,180 --> 00:00:24,690
portanto

5
00:00:24,720 --> 00:00:26,040
 opcional, o

6
00:00:26,070 --> 00:00:34,830
E  opcional ou gifs digamos, que so as terminaes de arquivo ou estas so as terminaes de arquivo que

7
00:00:34,840 --> 00:00:43,890
suportamos e para esses arquivos, eu quero usar um carregador que temos que instalar com o npm install --save-dev, 

8
00:00:43,950 --> 00:00:45,380
claro, o URL loader.

9
00:00:45,630 --> 00:00:55,260
Agora, o URL loader  um carregador que pega nossas imagens e se elas estiverem abaixo de um certo limite que definimos, elas

10
00:00:55,620 --> 00:01:02,880
sero convertidas em 64 URLs de dados que podem ser incorporados em nossos documentos, para que no

11
00:01:02,910 --> 00:01:08,300
tenhamos que baixar arquivos extras . Mas para arquivos maiores, seria ineficiente, ento

12
00:01:08,310 --> 00:01:15,660
os arquivos acima desse limite que especificamos sero simplesmente copiados para a nossa pasta de sada e ento geraremos

13
00:01:15,660 --> 00:01:20,540
um link para esses arquivos e colocaremos isso em nossa importao que

14
00:01:20,550 --> 00:01:22,230
usamos em nossos componentes.

15
00:01:22,230 --> 00:01:28,650
O que fazemos aqui  que usamos o URL loader aqui, mas agora o configuramos com params de

16
00:01:28,650 --> 00:01:30,920
consulta e fazemos isso com params

17
00:01:30,930 --> 00:01:34,730
de consulta para que a configurao aqui, seja automaticamente passada

18
00:01:34,830 --> 00:01:38,270
para um fallback que usaremos se o limite for excedido.

19
00:01:38,550 --> 00:01:43,640
Agora esse fallback  outro loader que tambm precisamos instalar, ento 

20
00:01:43,680 --> 00:01:45,740
isso que eu tambm farei

21
00:01:45,870 --> 00:01:52,390
aqui antes de continuar configurando isso. Eu vou executar o npm install --save-dev file-loader.

22
00:01:52,470 --> 00:01:58,320
Agora que  um carregador que no final simplesmente copia o arquivo que voc poderia dizer, porque

23
00:01:58,500 --> 00:02:00,070
ele copia para uma nova

24
00:02:00,120 --> 00:02:05,180
direo e nos d um link para ele e esse  o substituto que usaremos

25
00:02:05,190 --> 00:02:11,670
automaticamente aqui se excedermos o limite que agora definir aqui. Como um param de consulta, o limite poderia ser digamos

26
00:02:11,670 --> 00:02:19,470
8000kb, ento qualquer coisa acima disso no ser embutida, mas ser copiada. E precisamos passar alguma configurao para o carregador de arquivos,

27
00:02:19,470 --> 00:02:21,620
o nome e esse tambm 

28
00:02:21,660 --> 00:02:31,560
o caminho de onde queremos armazenar esse arquivo, vou usar imagens / nome. ext, esses so espaos reservados que levam o

29
00:02:31,560 --> 00:02:37,080
nome e a extenso original. Assim, a imagem ser copiada para essa

30
00:02:37,080 --> 00:02:44,040
pasta, em nossa pasta dist, porque essa configurao de sada  levada em conta, embora no criemos

31
00:02:44,040 --> 00:02:45,500
um pacote. arquivo js,

32
00:02:45,600 --> 00:02:48,070
mas o caminho ainda  levado

33
00:02:48,120 --> 00:02:54,490
em conta, ento  para l que nossas imagens acabaro se elas excederem esse limite.

34
00:02:54,840 --> 00:03:02,430
Portanto, este  o nosso carregador para imagens e, com isso, os arquivos de imagem que importamos em nossos arquivos javascript

35
00:03:02,430 --> 00:03:04,640
no devem mais representar um problema.

36
00:03:04,650 --> 00:03:11,250
Agora voc pode adicionar mais regras para diferentes tipos de arquivo, para fontes, por exemplo, mas eu vou mant-lo

37
00:03:11,250 --> 00:03:11,830
por enquanto

38
00:03:12,000 --> 00:03:16,330
e agora vamos virar a cabea para plugins que poderamos querer usar

39
00:03:16,530 --> 00:03:21,380
e, mais importante, dar uma olhada em como isso realmente funciona e se funciona.

