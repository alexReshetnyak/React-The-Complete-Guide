1
00:00:02,160 --> 00:00:08,100
I added my rule here in the last lecture but it's missing a loader and for javascript I mentioned that I

2
00:00:08,100 --> 00:00:15,420
want to use babel, the defacto standard for transpiling my javascript. We will install it with npm install

3
00:00:15,630 --> 00:00:21,830
--save-dev again because it's a development only dependency and we need to install the babel-loader

4
00:00:21,840 --> 00:00:23,850
package,

5
00:00:23,910 --> 00:00:31,740
that however does just provide the hook for webpack. Babel itself is a library which kind of has the knowledge

6
00:00:31,740 --> 00:00:34,570
about how to transpile your javascript,

7
00:00:34,710 --> 00:00:39,660
so we also need to install babel-core which holds that knowledge.

8
00:00:39,660 --> 00:00:46,230
We now also need some configurations to basically tell babel which kind of next generation javascript

9
00:00:46,440 --> 00:00:54,330
or which special javascript syntax we want to support and here, these are so-called presets, the packages

10
00:00:54,330 --> 00:01:06,150
we need are babel-preset-react to support jsx and babel-preset-env for an environment

11
00:01:06,180 --> 00:01:13,320
adjusting preset which basically has a look at the features we use and automatically transpiles everything

12
00:01:13,320 --> 00:01:14,550
correctly.

13
00:01:14,670 --> 00:01:17,620
So these are the dependencies I'll install now,

14
00:01:17,820 --> 00:01:24,180
now we also need to configure our project, we need to configure babel first of all. So the installation

15
00:01:24,180 --> 00:01:24,700
finished,

16
00:01:24,720 --> 00:01:30,630
now we need to configure babel because just because we installed the presets doesn't make babel use

17
00:01:30,630 --> 00:01:36,510
them, it doesn't analyze all other packages we installed and then see if there is a preset inside of them.

18
00:01:36,540 --> 00:01:42,040
So instead we add a new file, dot and the dot at the beginning is important, .babelrc

19
00:01:42,330 --> 00:01:43,120
.

20
00:01:43,230 --> 00:01:47,710
that's a configuration file babel will automatically read if it's in our root folder,

21
00:01:47,730 --> 00:01:56,430
so in the same folder where we will later run our webpack build workflow. The babelrc file takes adjacent

22
00:01:56,430 --> 00:02:00,610
configuration and there we should add a presets node,

23
00:02:00,810 --> 00:02:06,810
now we can make babel aware of all the presets we want to apply and here, I want to apply two of the

24
00:02:06,840 --> 00:02:07,540
presets,

25
00:02:07,560 --> 00:02:10,730
the first one is env and the second is react.

26
00:02:11,010 --> 00:02:15,930
So these are the two presets we installed without the babel-preset- thing at the beginning,

27
00:02:16,050 --> 00:02:21,120
just the path at the end so react and env, these are the two presets.

28
00:02:21,120 --> 00:02:26,480
Now the env preset will receive some special configuration from my side,

29
00:02:26,550 --> 00:02:33,000
I do this by enclosing it into an array with square brackets and then the second argument after the

30
00:02:33,000 --> 00:02:36,160
name of the preset is a javascript object where I can configure it

31
00:02:36,260 --> 00:02:40,250
and here I want to set up the targets of that preset

32
00:02:40,260 --> 00:02:43,650
which means which browser versions do I want to support,

33
00:02:43,650 --> 00:02:44,970
that's of course important.

34
00:02:44,970 --> 00:02:49,220
It automatically identifies which next generation features I use

35
00:02:49,310 --> 00:02:55,240
but to know what next generation actually means, it needs to know what my current gen is,

36
00:02:55,260 --> 00:02:58,590
so which browsers do I target with my app?

37
00:02:58,830 --> 00:03:05,490
So targets is another javascript object where we can then set up browsers and browsers

38
00:03:05,500 --> 00:03:12,780
then is an array where we can use the browser list type of configuration,

39
00:03:12,900 --> 00:03:20,640
you can google for browser list to find this repository here to learn more about the syntax you can

40
00:03:20,640 --> 00:03:22,530
use for configuring browsers.

41
00:03:22,890 --> 00:03:23,920
However the syntax

42
00:03:23,940 --> 00:03:27,050
I'll show you here is a pretty common set up.

43
00:03:27,390 --> 00:03:32,660
So what we want to do here is we want to target greater 1% of market share

44
00:03:33,060 --> 00:03:41,550
or last two versions so this is will be combined with or in between.

45
00:03:41,550 --> 00:03:48,300
So now this is the target environment we want to support and this is what babel will then take into

46
00:03:48,300 --> 00:03:52,000
account when compiling our next generation javascript to current gen,

47
00:03:52,020 --> 00:03:56,960
it will compile it to javascript which runs in browsers which fulfill this criteria.

48
00:03:57,240 --> 00:04:00,300
So with that, we get the babel configuration finished,

49
00:04:00,300 --> 00:04:09,660
now we can add the babel loader in our webpack config, there I'll therefore add a loader in single

50
00:04:09,660 --> 00:04:10,990
quotation marks,

51
00:04:11,190 --> 00:04:12,860
the babel-loader.

52
00:04:12,870 --> 00:04:18,630
So here I take the full name of the package we installed, babel-loader.

53
00:04:19,170 --> 00:04:26,850
So now it will be applied to javascript files compiling the jsx and next generation javascript features,

54
00:04:26,850 --> 00:04:36,330
it would still fail though because we also import css which webpack wouldn't understand, it only understands

55
00:04:36,330 --> 00:04:37,710
javascript natively

56
00:04:37,980 --> 00:04:40,170
and in the pizzaImage component,

57
00:04:40,370 --> 00:04:43,850
it would import css and even an image,

58
00:04:43,980 --> 00:04:45,920
so we need to support that too.

59
00:04:46,170 --> 00:04:49,950
Let's add support for these types of files in the next lecture.

