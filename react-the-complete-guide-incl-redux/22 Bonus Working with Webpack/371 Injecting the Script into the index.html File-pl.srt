1
00:00:02,330 --> 00:00:10,850
Aby nasz projekt dziaa i by obsugiwany przez serwer dev lub pniej w

2
00:00:10,850 --> 00:00:16,880
produkcji, musimy poczy nasz indeks. plik html do wygenerowanych plikw wyjciowych, podczas korzystania z serwera dev

3
00:00:16,880 --> 00:00:22,100
s przechowywane tylko w pamici, ale nadal s generowane. Musimy zainstalowa wtyczk do tego webpacka,

4
00:00:22,220 --> 00:00:28,610
npm install - zapisz - zapisz dev, przepraszam wiele kresek, dziki save-dev moemy zainstalowa

5
00:00:28,610 --> 00:00:33,390
wtyczk html-webpack, jest to specjalna wtyczka, ktra pozwala aby poczy nasz

6
00:00:33,830 --> 00:00:40,940
plik html z naszym wyjciem i pakietem internetowym zrobimy to automatycznie i wstrzykniemy nasz doczony skrypt

7
00:00:41,000 --> 00:00:47,440
i tak dalej do tego pliku html. W konfiguracji webpacka dodajemy teraz wtyczki,

8
00:00:47,450 --> 00:00:49,920
jest to nowy wze na

9
00:00:49,920 --> 00:00:56,720
gwnym poziomie konfiguracji, wtyczki, i bierze tablic jako argument lub jako warto, powinienem

10
00:00:56,720 --> 00:00:57,340
powiedzie.

11
00:00:57,690 --> 00:01:00,420
A teraz przede wszystkim musimy

12
00:01:00,440 --> 00:01:04,900
zainstalowa lub zaimportowa, powiem, e wtyczka html webpack, wic

13
00:01:04,910 --> 00:01:08,860
utworz sta, ktra nazwaabym htmlWebpackPlugin, ale nazwa zaley

14
00:01:08,990 --> 00:01:15,290
od ciebie i tutaj bd potrzebowa wtyczki html-webpack, pakiet, ktry wanie zainstalowalimy.

15
00:01:15,290 --> 00:01:17,100
Teraz w tablicy

16
00:01:17,180 --> 00:01:25,190
wtyczek tworz now jej instancj, now wtyczk HtmlWebpackPlugin i przekazujemy obiekt do konstruktora, w ktrym

17
00:01:25,190 --> 00:01:27,280
konfigurujemy t wtyczk. Tutaj ustawi

18
00:01:27,290 --> 00:01:32,930
szablon, wic plik html chc uy jako podstawy i oczywicie

19
00:01:32,930 --> 00:01:43,040
mam zamiar uy mojego pliku html w folderze rdowym. Tak wic wska to z dirname, a potem dodam po prostu /

20
00:01:43,040 --> 00:01:45,370
source / index. html, budujc

21
00:01:45,410 --> 00:01:47,550
ciek do niego.

22
00:01:47,550 --> 00:01:50,960
A wic teraz wskazujemy na plik, ktry chcemy uy

23
00:01:50,990 --> 00:01:58,400
jako szablonu, chc wstrzykn moje rzeczy do ciaa, ktre s dodatkow konfiguracj, ktr moemy przekaza do wtyczki tutaj, a plik

24
00:01:58,430 --> 00:02:02,890
wyjciowy, nazwa pliku rwnie powinna by indeksem. html, to plik, ktry

25
00:02:02,930 --> 00:02:06,780
ostatecznie wygeneruje, znowu dla serwera tylko w pamici,

26
00:02:06,890 --> 00:02:08,150
pniej kiedy uyjemy

27
00:02:08,150 --> 00:02:14,330
innego workflow do budowania tego, do produkcji, da nam prawdziwe pliki, ktre

28
00:02:14,330 --> 00:02:16,310
moemy przesa na serwer.

29
00:02:16,340 --> 00:02:20,040
Po dodaniu tego, zrbmy teraz restart npm

30
00:02:20,090 --> 00:02:25,040
start, teraz powinnimy uzyska poczenie z webpacka do pliku

31
00:02:25,050 --> 00:02:32,660
html, wic zobaczmy, czy to dziaa. Powrmy do localhost8080, a przynajmniej widzimy teraz

32
00:02:32,660 --> 00:02:35,630
pust stron, ale dostalimy bdy.

33
00:02:35,720 --> 00:02:38,900
Teraz s to bdy reagowania, co jest dobrym

34
00:02:38,900 --> 00:02:46,010
znakiem, nasza aplikacja wydaje si dziaa, informuje nas, e prawdopodobnie nie wyeksportowalimy naszego komponentu z pliku, w ktrym

35
00:02:46,010 --> 00:02:48,620
jest on zdefiniowany. Sprawdmy, eksportujemy pizzaImage,

36
00:02:48,620 --> 00:02:56,240
komponent oparty na klasie pizzy i skadnik uytkownika, ale nigdy nie wyeksportowalimy aplikacji, wic dodajmy domylny eksport

37
00:02:56,290 --> 00:02:56,960
do

38
00:02:57,050 --> 00:03:01,130
komponentu aplikacji, to zawsze jest niebezpieczestwo w budowaniu czego,

39
00:03:01,130 --> 00:03:03,620
a teraz wyglda to o

40
00:03:03,890 --> 00:03:05,300
wiele lepiej widzimy

41
00:03:05,300 --> 00:03:12,920
uytkownikw, a teraz staje si interesujca, to jest pizza. Widzimy pizz i jest niesamowita, jeli sprawdzimy kart

42
00:03:12,920 --> 00:03:19,730
sieciow i wrc do uytkownikw i ponownie zaaduj aplikacj, obejrz dania sieciowe, zobaczysz,

43
00:03:19,730 --> 00:03:21,730
e 0. plik js?

44
00:03:21,740 --> 00:03:28,100
To nasz leniwy zaadowany plik javascript, ktry pobralimy, wic leniwe adowanie dziaa tutaj i

45
00:03:28,100 --> 00:03:29,740
nasza aplikacja reaguje dziaa,

46
00:03:29,840 --> 00:03:33,450
stylizacja take wydaje si wciga, jeli sprawdzimy obraz

47
00:03:33,470 --> 00:03:40,520
pizzy widzimy, e uywamy tutaj moduw css i dostajemy style konfigurujemy w naszych plikach css.

48
00:03:40,520 --> 00:03:44,330
Teraz wszystko, co zrobi tutaj, to szybka i atwa naprawa tutaj na

49
00:03:44,330 --> 00:03:49,800
czach, nie podoba mi si to, e nie mamy biaych znakw przed drugim linkiem, naprawmy to tak,

50
00:03:49,820 --> 00:03:51,080
ale to czysto kosmetyczne.

51
00:03:51,080 --> 00:03:57,920
Dla nas wane jest to, e mamy dziaajcy przepyw pracy, dziaajc konfiguracj projektu, w ktrej moemy

52
00:03:57,950 --> 00:04:02,450
stworzy aplikacj reagowania z funkcjami, ktrych nauczye si na tym kursie.

53
00:04:02,450 --> 00:04:05,900
Teraz to tylko przepyw pracy nad rozwojem, serwer deweloperski,

54
00:04:06,050 --> 00:04:11,510
jeli chcemy teraz wysa t aplikacj na prawdziwy serwer, bdziemy musieli dokona pewnych zmian w

55
00:04:11,510 --> 00:04:15,050
konfiguracji, aby j przygotowa i zoptymalizowa j pod ktem produkcji.

