1
00:00:02,330 --> 00:00:10,850
Per rendere il nostro progetto funzionante e funzionante dal server di sviluppo o successivamente in produzione,

2
00:00:10,850 --> 00:00:16,880
dobbiamo collegare il nostro indice. file html ai file di output che vengono generati, quando si utilizza il

3
00:00:16,880 --> 00:00:22,100
server di sviluppo vengono memorizzati solo in memoria, ma vengono comunque generati. Abbiamo bisogno di installare un plugin webpack

4
00:00:22,220 --> 00:00:28,610
per questo, con npm install --save-, save dev, mi scusi un sacco di trattini, con save-dev, possiamo

5
00:00:28,610 --> 00:00:33,390
installare il plugin html-webpack, questo  un plugin speciale che permette per collegare

6
00:00:33,830 --> 00:00:40,940
il nostro file html con il nostro output e il webpack lo far automaticamente e iniettare il nostro script

7
00:00:41,000 --> 00:00:47,440
in bundle e cos via in quel file html. Nella config del webpack, ora aggiungiamo i plugin,

8
00:00:47,450 --> 00:00:49,920
 un nuovo nodo sul livello

9
00:00:49,920 --> 00:00:56,720
di configurazione di root, i plugin e prende una matrice come argomento o come valore, dovrei

10
00:00:56,720 --> 00:00:57,340
dire.

11
00:00:57,690 --> 00:01:00,420
E ora prima di tutto dobbiamo

12
00:01:00,440 --> 00:01:04,900
installare o importare dovrei dire il plugin del webpack html,

13
00:01:04,910 --> 00:01:08,860
quindi creer una costante che chiamer htmlWebpackPlugin ma il

14
00:01:08,990 --> 00:01:15,290
nome spetta a te e qui richieder html-webpack-plugin, il pacchetto che abbiamo appena installato.

15
00:01:15,290 --> 00:01:17,100
Ora nell'array plugin,

16
00:01:17,180 --> 00:01:25,190
creo una nuova istanza di esso, nuovo HtmlWebpackPlugin e passiamo un oggetto al costruttore dove

17
00:01:25,190 --> 00:01:27,280
configuriamo questo plugin. Qui, imposter

18
00:01:27,290 --> 00:01:32,930
un modello, quindi il file html che voglio usare come base e

19
00:01:32,930 --> 00:01:43,040
l, naturalmente, voglio usare il mio file html nella cartella sorgente. Quindi lo indicher con dirname e quindi aggiunger semplicemente / source

20
00:01:43,040 --> 00:01:45,370
/ index. html, costruendo

21
00:01:45,410 --> 00:01:47,550
un percorso verso di esso.

22
00:01:47,550 --> 00:01:50,960
Quindi ora stiamo puntando al file che vogliamo usare come

23
00:01:50,990 --> 00:01:58,400
modello, voglio iniettare le mie cose nel corpo che  la configurazione extra che possiamo passare al plugin qui e il file

24
00:01:58,430 --> 00:02:02,890
di output, filename dovrebbe anche essere index. html, questo  il file che

25
00:02:02,930 --> 00:02:06,780
alla fine generer, di nuovo per il server solo in memoria,

26
00:02:06,890 --> 00:02:08,150
in seguito quando

27
00:02:08,150 --> 00:02:14,330
useremo un flusso di lavoro diverso per costruire questo, per la produzione, ci dar i file reali

28
00:02:14,330 --> 00:02:16,310
che potremmo caricare su un server.

29
00:02:16,340 --> 00:02:20,040
Quindi con quello aggiunto, ora riavviamo npm

30
00:02:20,090 --> 00:02:25,040
start, ora dovremmo ottenere la connessione da webpack al

31
00:02:25,050 --> 00:02:32,660
file html, quindi vediamo se funziona. Rivisitiamo localhost8080 e ora vediamo almeno una

32
00:02:32,660 --> 00:02:35,630
pagina vuota, tuttavia abbiamo alcuni errori.

33
00:02:35,720 --> 00:02:38,900
Ora questi sono errori di reazione che  un

34
00:02:38,900 --> 00:02:46,010
buon segno, la nostra applicazione sembra funzionare, ci informa che probabilmente abbiamo dimenticato di esportare il nostro componente dal file

35
00:02:46,010 --> 00:02:48,620
in cui  definito. Controlliamo, stiamo esportando

36
00:02:48,620 --> 00:02:56,240
pizzaImage, il componente basato sulla classe pizza e il componente utente, ma non abbiamo mai esportato l'app, quindi aggiungiamo

37
00:02:56,290 --> 00:02:56,960
un'esportazione predefinita

38
00:02:57,050 --> 00:03:01,130
al componente dell'app, che  sempre il pericolo nella creazione

39
00:03:01,130 --> 00:03:03,620
di qualcosa e ora sembra molto

40
00:03:03,890 --> 00:03:05,300
meglio , vediamo

41
00:03:05,300 --> 00:03:12,920
gli utenti e ora diventa interessante, questa  la pizza. Vediamo la pizza e il bello  se ispezioniamo

42
00:03:12,920 --> 00:03:19,730
la scheda di rete e torno agli utenti e ricarico l'app, guardo le richieste di rete,

43
00:03:19,730 --> 00:03:21,730
vedete che 0. file js?

44
00:03:21,740 --> 00:03:28,100
Questo  il nostro file javascript lazy caricato che abbiamo scaricato, quindi il caricamento lazy sta funzionando qui e

45
00:03:28,100 --> 00:03:29,740
la nostra applicazione di reazione

46
00:03:29,840 --> 00:03:33,450
sta funzionando, anche lo styling sembra dare il via, se ispezioniamo

47
00:03:33,470 --> 00:03:40,520
l'immagine della pizza vediamo che stiamo usando i moduli CSS qui e otteniamo gli stili abbiamo installato nei nostri file CSS.

48
00:03:40,520 --> 00:03:44,330
Ora tutto ci che far qui  una soluzione rapida e semplice qui

49
00:03:44,330 --> 00:03:49,800
sui link, non mi piace il fatto che non abbiamo uno spazio bianco di fronte al secondo link, sistemiamolo

50
00:03:49,820 --> 00:03:51,080
cos ma  puramente estetico.

51
00:03:51,080 --> 00:03:57,920
Ci che  importante per noi  che abbiamo un flusso di lavoro funzionante, una configurazione di lavoro in cui possiamo

52
00:03:57,950 --> 00:04:02,450
creare un'app di reazione con le caratteristiche che hai imparato in questo corso.

53
00:04:02,450 --> 00:04:05,900
Ora questo  solo il flusso di lavoro di sviluppo,

54
00:04:06,050 --> 00:04:11,510
il server di sviluppo, se vogliamo ora spedire questa app a un server reale, dovremo apportare

55
00:04:11,510 --> 00:04:15,050
alcune modifiche alla configurazione per prepararla e ottimizzarla per la produzione.

