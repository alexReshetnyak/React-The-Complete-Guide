1
00:00:02,190 --> 00:00:06,800
Quindi abbiamo terminato la configurazione di sviluppo delle ultime lezioni, corretto alcuni bug ma

2
00:00:06,810 --> 00:00:09,680
ora abbiamo una configurazione funzionante che  ottima.

3
00:00:09,710 --> 00:00:15,470
Ora il prossimo passo  lavorare sul flusso di lavoro di produzione, nel mio pacchetto. file json, voglio avere un secondo

4
00:00:15,480 --> 00:00:17,720
script, chiamiamolo build e qui

5
00:00:17,760 --> 00:00:18,910
non voglio

6
00:00:19,230 --> 00:00:24,550
eseguire il webpack-dev-server ma il webpack. Ora se lo eseguissi in questo

7
00:00:24,570 --> 00:00:28,170
modo, userebbe l'impostazione del flusso di lavoro di sviluppo.

8
00:00:28,410 --> 00:00:33,180
Possiamo farlo per vedere l'output perch il server di sviluppo ha fatto tutto in

9
00:00:33,180 --> 00:00:40,260
memoria, ora possiamo creare i file effettivi eseguendo npm run build, tutto tranne lo script di avvio deve essere eseguito

10
00:00:40,260 --> 00:00:46,860
con npm eseguito, start  l'eccezione con npm inizio. Quindi npm run build ora eseguir il webpack

11
00:00:46,950 --> 00:00:53,350
stesso e prender lo stesso file di configurazione con cui abbiamo lavorato prima, ma ora ci

12
00:00:53,370 --> 00:00:59,670
offre questa cartella dist dove ora vedete il file immagine copiato e qui vedete i file javascript.

13
00:01:00,000 --> 00:01:06,040
Vedete il file indice copiato dove ha anche iniettato la nostra importazione e questo  tutto

14
00:01:06,210 --> 00:01:11,000
il codice che abbiamo, ora quello che potete vedere gi questo file 

15
00:01:11,010 --> 00:01:13,260
che non  davvero ottimizzato, questo

16
00:01:13,410 --> 00:01:14,520
certamente non 

17
00:01:14,520 --> 00:01:22,370
il codice che vogliamo spedire, quindi canceller questa cartella per ora. L'obiettivo  invece quello di avere un flusso di lavoro dedicato per la produzione che faccia alcune ottimizzazioni, quindi quello

18
00:01:22,380 --> 00:01:30,570
che far  aggiungere un secondo file di configurazione, webpack. prod. config. js.

19
00:01:30,720 --> 00:01:33,530
Ora non prender automaticamente in considerazione questo

20
00:01:33,720 --> 00:01:37,550
file, dovremo puntarlo, ma in realt  super semplice.

21
00:01:37,680 --> 00:01:43,640
Ora copier l'installazione dall'altro file, dal flusso di lavoro di sviluppo in modo che possiamo regolarlo

22
00:01:43,860 --> 00:01:45,020
nel flusso di

23
00:01:45,060 --> 00:01:47,450
lavoro di produzione, vediamo cosa dobbiamo aggiustare.

24
00:01:47,520 --> 00:01:48,830
Iniziamo dall'alto, lo

25
00:01:48,900 --> 00:01:56,370
strumento dev, qui rimuover l'eval per creare mappe sorgente ottimali che richiedono meno risorse, puoi sempre decidere se distribuirle

26
00:01:56,370 --> 00:01:59,760
o meno, ma  bello avere qui le mappe

27
00:01:59,760 --> 00:02:05,100
di origine anche per trovare rapidamente alcuni bug nel flusso di lavoro di produzione,

28
00:02:05,100 --> 00:02:06,590
se ce ne sono.

29
00:02:06,650 --> 00:02:15,880
Ora il file di entrata dovrebbe ancora essere indice. js e l'output ha ancora senso come , ora i

30
00:02:15,920 --> 00:02:18,550
caricatori, che dire dei caricatori?

31
00:02:18,710 --> 00:02:22,420
Bene, vogliamo applicare le stesse trasformazioni dello sviluppo quindi

32
00:02:22,490 --> 00:02:28,820
non abbiamo bisogno di toccare i caricatori, faremo il nostro lavoro nella sezione plugin, ora abbiamo

33
00:02:28,820 --> 00:02:34,730
un plugin per il collegamento del file html e voglio tenerlo , quello che voglio

34
00:02:34,730 --> 00:02:42,680
fare ora  anche quello di migliorare il mio output, voglio ottimizzarlo e che in realt  un plugin incorporato

35
00:02:42,680 --> 00:02:43,200
nel

36
00:02:43,220 --> 00:02:45,010
webpack, non abbiamo bisogno di installarlo.

37
00:02:45,380 --> 00:02:49,540
Quello che far  semplicemente importare lo stesso webpack

38
00:02:49,550 --> 00:02:52,640
in quel file, quindi il webpack richiede

39
00:02:53,240 --> 00:03:01,610
webpack e quindi possiamo usare uno dei plug-in di compilazione. Quindi gi nella sezione plugins qui, aggiunger questo

40
00:03:01,610 --> 00:03:07,520
plugin, qui aggiunger il nuovo webpack, ottimizzeremo e l abbiamo il

41
00:03:07,550 --> 00:03:10,160
plugin jpg uglify. Questo plugin ora pu

42
00:03:10,280 --> 00:03:12,040
anche essere configurato e puoi

43
00:03:12,470 --> 00:03:17,390
sempre controllare le pagine github ufficiali di tutti questi plug-in e caricatori per

44
00:03:17,480 --> 00:03:20,360
farlo, prender comunque l'impostazione predefinita, quindi lo rimuover

45
00:03:20,660 --> 00:03:28,490
e con ci ho ottenuto il mio flusso di lavoro di produzione dove ottimizzo anche i file, dove li minimizzo per

46
00:03:28,490 --> 00:03:31,210
spedire il minor numero possibile di codice.

47
00:03:31,370 --> 00:03:38,510
Ora per utilizzare questa configurazione, ho bisogno di regolare il mio pacchetto. json, gli script di build qui dove indico al

48
00:03:38,510 --> 00:03:39,790
webpack, non voglio

49
00:03:39,950 --> 00:03:42,440
usare la configurazione di default, invece

50
00:03:42,470 --> 00:03:48,800
voglio usarne uno speciale, quindi user --config, che  una bandiera che possiamo passare allo script

51
00:03:48,800 --> 00:03:55,520
webpack e l indicher il webpack. prod. config. file js poich si trova nella

52
00:03:55,520 --> 00:03:57,800
stessa cartella del pacchetto. file json, non

53
00:03:57,950 --> 00:03:59,570
ho bisogno di specificare alcun

54
00:03:59,630 --> 00:04:05,340
percorso, posso solo specificare il nome del file. Con ci aggiunger anche alcune opzioni aggiuntive,

55
00:04:05,360 --> 00:04:13,700
progresso, profilo, whoops, profilo e colori per regolare l'output della console del flusso di lavoro di compilazione webpack e

56
00:04:13,730 --> 00:04:18,940
installer un pacchetto aggiuntivo con npm install --save-dev, si chiama rimraf e

57
00:04:18,950 --> 00:04:26,210
ci permette di cancellare una cartella o file e voglio eliminare la cartella dist all'inizio di ogni

58
00:04:26,300 --> 00:04:33,770
processo di creazione in modo da crearne uno nuovo. Quindi eseguir rimraf dist prima e poi due e

59
00:04:33,800 --> 00:04:37,880
firmo di eseguire questo progetto o questo comando qui, scusami

60
00:04:37,880 --> 00:04:42,800
dopo che la cancellazione  stata eseguita. Con questo, eseguiamo di nuovo build,

61
00:04:43,040 --> 00:04:48,650
npm esegui build e vediamo se questo ci d un buon output, mi d

62
00:04:48,710 --> 00:04:53,600
un errore perch dovrebbe essere --profile qui come un flag webpack, quindi

63
00:04:53,660 --> 00:04:54,530
risolviamo questo,

64
00:04:54,530 --> 00:05:01,400
salviamo il file e rieseguiamo npm esegue build. Ora con questo, stiamo costruendo il progetto che possiamo vederlo qui,

65
00:05:02,380 --> 00:05:04,810
dovrebbe avere successo e lo fa, ci

66
00:05:04,900 --> 00:05:06,880
d ancora la cartella dist, ma

67
00:05:06,910 --> 00:05:11,410
se ora diamo un'occhiata al file bundle, vedete che questo  un codice miniato.

68
00:05:11,410 --> 00:05:15,000
 un sacco di codice perch include la libreria completa di reagire, ma questo

69
00:05:15,220 --> 00:05:21,770
 tutto minimizzato e quindi ottimizzato e lo stesso ovviamente nel nostro 0. file js.

70
00:05:21,790 --> 00:05:26,940
Quindi ora abbiamo la nostra cartella dist e questo sarebbe ci che carichiamo su un server,

71
00:05:26,950 --> 00:05:28,690
il contenuto della cartella dist.

72
00:05:29,010 --> 00:05:34,720
Questo  ora il nostro flusso di lavoro e spero che sia diventato pi chiaro come funziona il webpack e come

73
00:05:34,720 --> 00:05:36,740
 possibile impostare un flusso di lavoro personalizzato.

