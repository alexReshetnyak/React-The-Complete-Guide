1
00:00:02,290 --> 00:00:09,880
Abbiamo aggiunto javascript e css loader, ora, dopo il nostro caricatore css molto lungo, aggiunger un'altra

2
00:00:10,300 --> 00:00:14,170
regola e quella regola dovrebbe testare le immagini.

3
00:00:14,260 --> 00:00:24,180
Quindi qui, l'espressione regolare controller i file che terminano con png, jpeg che potrebbe anche essere scritto con una E,

4
00:00:24,180 --> 00:00:24,690
quindi

5
00:00:24,720 --> 00:00:26,040
 opzionale, la

6
00:00:26,070 --> 00:00:34,830
E  opzionale o gif diciamo, cio la fine del file o questi sono i finali di file

7
00:00:34,840 --> 00:00:43,890
che supportiamo e per questi file, voglio usare un loader che dobbiamo installare con npm install --save-dev ovviamente, il

8
00:00:43,950 --> 00:00:45,380
caricatore di URL.

9
00:00:45,630 --> 00:00:55,260
Ora il caricatore di URL  un caricatore che prender le nostre immagini e se sono al di sotto di un certo limite che

10
00:00:55,620 --> 00:01:02,880
definiamo, in realt le convertir in 64 URL di dati che pu essere inserito nei nostri documenti, quindi

11
00:01:02,910 --> 00:01:08,300
non dobbiamo scaricare altro file . Ma per i file pi grandi, sarebbe

12
00:01:08,310 --> 00:01:15,660
inefficiente, quindi i file superiori al limite specificato verranno semplicemente copiati nella nostra cartella di output e genereranno quindi

13
00:01:15,660 --> 00:01:20,540
un collegamento a questi file e li inseriremo nella nostra importazione che

14
00:01:20,550 --> 00:01:22,230
usiamo nei nostri componenti.

15
00:01:22,230 --> 00:01:28,650
Quello che facciamo qui  usare il loader URL qui, ma ora lo configuriamo con parametri di query

16
00:01:28,650 --> 00:01:30,920
e lo facciamo con parametri di

17
00:01:30,930 --> 00:01:34,730
query in modo che la configurazione qui venga automaticamente passata

18
00:01:34,830 --> 00:01:38,270
su un fallback che useremo se il limite viene superato.

19
00:01:38,550 --> 00:01:43,640
Ora che fallback  un altro loader, dobbiamo anche installarlo,

20
00:01:43,680 --> 00:01:45,740
quindi  quello che

21
00:01:45,870 --> 00:01:52,390
far anche qui prima di continuare a configurarlo, eseguir l'installazione di npm --save-dev file-loader.

22
00:01:52,470 --> 00:01:58,320
Ora questo  un caricatore che alla fine copia semplicemente il file che si potrebbe dire, perch

23
00:01:58,500 --> 00:02:00,070
lo copia in una nuova

24
00:02:00,120 --> 00:02:05,180
direzione e ci fornisce un collegamento ad esso e questo  il fallback che useremo

25
00:02:05,190 --> 00:02:11,670
automaticamente qui se superiamo il limite che ora definire qui. Come parametro di query, il limite potrebbe essere diciamo 8000kb,

26
00:02:11,670 --> 00:02:19,470
quindi qualsiasi valore superiore a quello non sar in linea ma verr copiato. E abbiamo bisogno di passare qualche configurazione al caricatore di

27
00:02:19,470 --> 00:02:21,620
file, il nome e questo 

28
00:02:21,660 --> 00:02:31,560
anche il percorso di dove vogliamo archiviare quel file, user immagini / nome. ext, questi sono segnaposto che prendono il

29
00:02:31,560 --> 00:02:37,080
nome e l'estensione originali. Quindi l'immagine verr copiata in quella cartella,

30
00:02:37,080 --> 00:02:44,040
nella nostra cartella dist perch questa impostazione di output viene presa in considerazione anche se non stiamo creando

31
00:02:44,040 --> 00:02:45,500
un pacchetto. js file

32
00:02:45,600 --> 00:02:48,070
ma il percorso  ancora preso

33
00:02:48,120 --> 00:02:54,490
in considerazione, quindi  qui che le nostre immagini finiranno se superano questo limite.

34
00:02:54,840 --> 00:03:02,430
Quindi questo  il nostro caricatore per immagini e con quello, i file di immagine che importiamo nei nostri file javascript

35
00:03:02,430 --> 00:03:04,640
non dovrebbero rappresentare pi un problema.

36
00:03:04,650 --> 00:03:11,250
Ora puoi aggiungere pi regole per diversi tipi di file, ad esempio per i caratteri, ma per

37
00:03:11,250 --> 00:03:11,830
ora

38
00:03:12,000 --> 00:03:16,330
continuer a distinguere e ora guardiamo i plug-in che potremmo voler

39
00:03:16,530 --> 00:03:21,380
usare e, soprattutto, dai un'occhiata a come questo funziona davvero e se funziona.

