1
00:00:02,130 --> 00:00:05,260
Son derste temel webpack yaplandrmasn kurduk, ancak

2
00:00:05,350 --> 00:00:07,320
bitmi olmaktan ok uzak.

3
00:00:07,540 --> 00:00:14,370
n plana eklememiz gereken nemli bir ey, web paketinin otomatik olarak eklendiinden emin olmaktr. Bu ithalatlarn sonunda

4
00:00:14,440 --> 00:00:20,170
js, bylece doru ekilde ithal edebilir.

5
00:00:20,230 --> 00:00:27,490
imdi bunun byle davranmasn salamak iin, webpack konfigrasyonumuzda, giri k ile ayn seviyede

6
00:00:27,910 --> 00:00:34,270
yaplandrmak zorundayz. Bylece, yaplandrma yaplandrmasn ekliyoruz. Bu bir javascript nesnesi alr ve

7
00:00:34,270 --> 00:00:41,230
orada baz uzantlar zebiliriz, bu nedenle webpack'e belirli uzantlarn farknda olmas gerektiini ve

8
00:00:41,230 --> 00:00:42,990
uzant olmadan bir

9
00:00:43,090 --> 00:00:49,270
ie aktarma ile karlarsa, bu uzantlar denemeli ve bir dosya bulup bulmadna

10
00:00:49,270 --> 00:00:50,970
bakmalyz. Bunlardan biri.

11
00:00:50,980 --> 00:00:53,090
Yani bu bir dizi

12
00:00:53,230 --> 00:01:01,210
olas uzant ve ben desteklemek istiyorum. js ve. Burada jsx, eer herhangi bir uzant tanmlanmamsa bu

13
00:01:01,210 --> 00:01:05,020
uzantya sahip bir dosya bulup gstermeyeceini grecektir, bu nemli bir eydir.

14
00:01:05,020 --> 00:01:13,870
imdi bir sonraki ve en nemli ey ykleyicilerimiz olsa da, farkl dosya trlerini doru ekilde ilediimizden emin olmak

15
00:01:13,960 --> 00:01:16,330
istediimde, bu, kt ile ayn

16
00:01:16,420 --> 00:01:22,540
seviyede zel bir yaplandrma ile yaplr ve bamllk ie aktardm iin modl

17
00:01:22,930 --> 00:01:27,260
olarak adlandrlan zme gider Bir modl olarak adlandrlr, bu

18
00:01:27,370 --> 00:01:30,520
yzden modl ile dosya evirmek olabilir.

19
00:01:30,640 --> 00:01:38,290
Burada, webpack'in bireysel dosyalarla ne yapmas gerektiini ayarlyoruz ve bunu bir kural dizisiyle kontrol ediyoruz.

20
00:01:38,290 --> 00:01:46,720
imdi her kural bir javascript nesnesidir ve her kuraln nce testin tamam olmas gerekir. Bu, belirli bir

21
00:01:46,780 --> 00:01:52,150
dosya, belirtilen bir dosya webpackinin belirli bir kriteri karladnn test edilmesi

22
00:01:52,330 --> 00:01:59,920
anlamna gelir, bu kriter dosya addr ve dzenli bir ifadeyle kontrol edilir. Dzenli ifade genellikle

23
00:01:59,920 --> 00:02:04,470
dosya uzantsn denetler. Yani biten bir ey syleyebiliriz. js ve ben

24
00:02:04,510 --> 00:02:07,230
buradaki noktadan kamalyz nk dzenli bir

25
00:02:07,250 --> 00:02:11,610
ifadeye girdik ve aksi halde herhangi bir karaktere atfta bulunacakt.

26
00:02:11,770 --> 00:02:13,310
Eer bir konumdaysak. js

27
00:02:13,370 --> 00:02:14,300
dosyas,

28
00:02:14,320 --> 00:02:21,060
eer bitiyorsa. js, o zaman belirli bir ykleyici uygulamak istiyorum,

29
00:02:21,220 --> 00:02:25,870
imdi bir ykleyici dosyaya bir ey yapan bir nc taraf eklentisi gibidir.

30
00:02:25,900 --> 00:02:27,510
imdi js dosyalar

31
00:02:27,520 --> 00:02:30,990
iin, belirli kalplar hari tutmam salayan

32
00:02:31,210 --> 00:02:34,090
bir ek konfigrasyon eklemek istiyorum.

33
00:02:34,090 --> 00:02:35,900
Ayrca dzenli bir

34
00:02:36,040 --> 00:02:43,570
ifade, sadece dosya yolundaki dm modllerini kontrol etmek istiyorum, bu yzden dm modllerinde herhangi

35
00:02:43,570 --> 00:02:47,230
bir eyi dntrmeyi denememelidir nk bunlar zaten

36
00:02:47,230 --> 00:02:48,740
ithal ettiimiz nc

37
00:02:48,880 --> 00:02:50,730
parti ktphanelerdir, onlar

38
00:02:50,830 --> 00:02:53,590
tekrar dntrmek istemiyoruz zaten optimize

39
00:02:53,590 --> 00:02:56,470
edilmiler, sadece kendi dosyalarmza dokunmallar.

40
00:02:56,500 --> 00:02:59,240
imdi bu ykleyici ne hakknda?

41
00:02:59,770 --> 00:03:04,650
Javascript iin, babel ykleyiciyi kullanacaz, babel yeni nesil

42
00:03:04,960 --> 00:03:11,990
javascript'in mevcut javascript'e aktarlmas iin standart bir defacto standarddr, bu yzden bir

43
00:03:12,190 --> 00:03:16,090
sonraki derste babel'i kuralm ve yaplandralm.

