1
00:00:02,160 --> 00:00:09,450
Esta es la imagen ms amplia de lo que es y qu es el paquete web, comprendamos cmo funciona entre bastidores ya que es

2
00:00:09,450 --> 00:00:16,470
una herramienta crucial que maneja todo el flujo de trabajo de construccin. Detrs de escena, el paquete web tiene

3
00:00:16,470 --> 00:00:20,180
cuatro cosas importantes, cuatro caractersticas importantes, siempre necesita

4
00:00:20,490 --> 00:00:23,250
al menos un punto de entrada,

5
00:00:23,250 --> 00:00:25,040
puede tener mltiples.

6
00:00:25,050 --> 00:00:32,460
Esta podra ser nuestra aplicacin. js file, nuestro archivo JavaScript raz que monta nuestra aplicacin

7
00:00:32,460 --> 00:00:39,360
reaccionar al dom, que llama a reaccionar dom render por ejemplo, necesita este archivo ya que luego analiza las

8
00:00:39,360 --> 00:00:45,870
dependencias de este archivo y el archivo de entrada raz tendr una dependencia a otro archivo que a

9
00:00:45,870 --> 00:00:52,450
su vez tiene ms dependencias, por lo que webpack puede construir un grfico de dependencia que comience con

10
00:00:52,670 --> 00:00:56,280
ese archivo de entrada raz para que pueda entender qu

11
00:00:56,320 --> 00:01:03,390
archivos componen nuestra aplicacin si le damos nuestro archivo de entrada. A continuacin, analiza todas las dependencias y las agrupa

12
00:01:03,450 --> 00:01:03,960
en

13
00:01:03,960 --> 00:01:10,100
un resultado que se especifica como un paquete. js en una carpeta dist, especificamos el nombre del archivo y dnde debe ir.

14
00:01:10,470 --> 00:01:17,100
Y all colocar todas estas dependencias en ese archivo, ordenadas correctamente y en un

15
00:01:17,220 --> 00:01:19,010
archivo de salida concatenado.

16
00:01:19,110 --> 00:01:22,840
Esta es la funcionalidad principal, pero como dije, es ms que

17
00:01:22,990 --> 00:01:26,780
eso, en el medio, hay otras dos caractersticas importantes que podemos utilizar.

18
00:01:26,940 --> 00:01:34,350
Para uno hay los llamados cargadores, los cargadores se aplican por nivel de archivo, por ejemplo, podemos

19
00:01:34,660 --> 00:01:41,880
decir que todos los archivos javascript deben ser manejados por loaderX, todos los archivos css deben

20
00:01:41,880 --> 00:01:49,740
ser manejados por loaderY, babel-loader y css-loader son dos ejemplos populares que se utilizan en muchos proyectos, por

21
00:01:49,740 --> 00:01:56,320
lo que los cargadores dependen del archivo o aplican transformaciones que dependen del archivo.

22
00:01:56,340 --> 00:02:03,030
Tambin tenemos complementos en los que los cargadores se aplican por archivo, en lugar de ello,

23
00:02:03,040 --> 00:02:09,330
toma los archivos concatenados, por lo que el paquete pero antes se escribe en la salida.

24
00:02:09,360 --> 00:02:15,120
Aqu podemos aplicar algunas transformaciones u optimizaciones generales como uglify, por lo que esto

25
00:02:15,420 --> 00:02:20,950
ocurre a nivel global y ocurre despus de que los cargadores hicieron su trabajo.

26
00:02:20,970 --> 00:02:24,950
As es como funciona el paquete web, lo que hace detrs

27
00:02:25,110 --> 00:02:31,110
de escena y todo esto est configurado en un archivo de configuracin de paquete web que configuraremos

28
00:02:31,110 --> 00:02:32,510
juntos en este mdulo.

29
00:02:32,760 --> 00:02:37,920
As que sin ms prembulos profundicemos en la construccin de nuestra propia configuracin de proyecto.

