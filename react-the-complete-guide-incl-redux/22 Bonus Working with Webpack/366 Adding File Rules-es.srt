1
00:00:02,130 --> 00:00:05,260
En la ltima conferencia configuramos la configuracin bsica del paquete web,

2
00:00:05,350 --> 00:00:07,320
aunque est lejos de haber sido finalizada.

3
00:00:07,540 --> 00:00:14,370
Una cosa importante que debemos agregar por adelantado es asegurarnos de que el paquete web se agregue automticamente. js al final de estas

4
00:00:14,440 --> 00:00:20,170
importaciones aqu para que pueda importar eso correctamente.

5
00:00:20,230 --> 00:00:27,490
Ahora, para que se comporte as, tenemos que configurarlo de cierta manera, en nuestra configuracin de paquete web en el mismo nivel que

6
00:00:27,910 --> 00:00:34,270
la entrada, y as sucesivamente, agregamos la configuracin de resolucin. Eso requiere un objeto javascript y all

7
00:00:34,270 --> 00:00:41,230
podemos resolver algunas extensiones, por lo que bsicamente podemos decirle a webpack que debe conocer ciertas

8
00:00:41,230 --> 00:00:42,990
extensiones y si encuentra

9
00:00:43,090 --> 00:00:49,270
una importacin sin una extensin, debera probar estas extensiones y ver si encuentra un

10
00:00:49,270 --> 00:00:50,970
archivo de uno de estos.

11
00:00:50,980 --> 00:00:53,090
Entonces esa es una matriz

12
00:00:53,230 --> 00:01:01,210
de posibles extensiones y quiero apoyar. js y. jsx aqu para que vea si encuentra un archivo

13
00:01:01,210 --> 00:01:05,020
con esa extensin si no se define ninguna extensin, eso es algo importante.

14
00:01:05,020 --> 00:01:13,870
Ahora, lo siguiente y ms importante son nuestros cargadores, aunque quiero asegurarme de que manejamos correctamente los diferentes tipos de archivos,

15
00:01:13,960 --> 00:01:16,330
esto se hace con una configuracin

16
00:01:16,420 --> 00:01:22,540
especial en el mismo nivel que salida y resolucin, que se denomina mdulo porque importo

17
00:01:22,930 --> 00:01:27,260
una dependencia se conoce como un mdulo, por lo que

18
00:01:27,370 --> 00:01:30,520
podra traducir un mdulo con un archivo.

19
00:01:30,640 --> 00:01:38,290
As que aqu configuramos lo que debe hacer el paquete web con los archivos individuales y lo controlamos con un conjunto de reglas.

20
00:01:38,290 --> 00:01:46,720
Ahora cada regla es un objeto javascript y cada regla ahora necesita prueba antes que nada, lo que significa probar

21
00:01:46,780 --> 00:01:52,150
si un archivo dado, un archivo web identificado cumple ciertos criterios, este es

22
00:01:52,330 --> 00:01:59,920
el nombre del archivo y se verifica con una expresin regular, el la expresin regular comnmente verifica la

23
00:01:59,920 --> 00:02:04,470
extensin del archivo. Entonces podramos decir cualquier cosa que termine. js y tengo que

24
00:02:04,510 --> 00:02:07,230
escapar del punto aqu ya que estamos en

25
00:02:07,250 --> 00:02:11,610
una expresin regular y de lo contrario se referira a cualquier personaje.

26
00:02:11,770 --> 00:02:13,310
Si estamos en a. archivo

27
00:02:13,370 --> 00:02:14,300
js,

28
00:02:14,320 --> 00:02:21,060
entonces si termina con. js, entonces querr aplicar un determinado cargador, ahora un

29
00:02:21,220 --> 00:02:25,870
cargador es como un complemento de terceros que hace algo con el archivo.

30
00:02:25,900 --> 00:02:27,510
Ahora, para los archivos

31
00:02:27,520 --> 00:02:30,990
js, tambin deseo agregar una configuracin adicional que se

32
00:02:31,210 --> 00:02:34,090
excluya, lo que me permite excluir ciertos patrones.

33
00:02:34,090 --> 00:02:35,900
Tambin como expresin regular,

34
00:02:36,040 --> 00:02:43,570
solo quiero verificar los mdulos de nodos en la ruta del archivo, por lo que no debera intentar

35
00:02:43,570 --> 00:02:47,230
transformar nada en los mdulos de nodos, ya que

36
00:02:47,230 --> 00:02:48,740
son bibliotecas de terceros

37
00:02:48,880 --> 00:02:50,730
que ya importamos, no

38
00:02:50,830 --> 00:02:53,590
queremos volver a transformarlas. , ya estn

39
00:02:53,590 --> 00:02:56,470
optimizados, solo debe tocar nuestros propios archivos.

40
00:02:56,500 --> 00:02:59,240
Ahora bien, qu pasa con este cargador?

41
00:02:59,770 --> 00:03:04,650
Bueno, para javascript, usaremos el cargador de babel, babel es el

42
00:03:04,960 --> 00:03:11,990
estndar de facto para transpilar javascript de prxima generacin a javascript de gen actual, as que

43
00:03:12,190 --> 00:03:16,090
instalemos y configuremos Babel en la prxima conferencia.

