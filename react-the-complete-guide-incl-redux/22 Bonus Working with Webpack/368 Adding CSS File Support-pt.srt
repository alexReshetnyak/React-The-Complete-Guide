1
00:00:02,160 --> 00:00:04,140
Ento ns adicionamos babel na ltima

2
00:00:04,170 --> 00:00:09,720
palestra, vamos agora tambm suportar arquivos css e imagens. Para isso, adicionarei uma nova regra e quero comear

3
00:00:09,720 --> 00:00:10,640
com css, portanto,

4
00:00:10,680 --> 00:00:14,670
testamos os arquivos que terminam com. css, esse 

5
00:00:14,760 --> 00:00:17,150
o nosso teste simples.

6
00:00:17,190 --> 00:00:23,470
Eu tambm quero excluir qualquer coisa nos mdulos de n aqui apenas para estar

7
00:00:23,880 --> 00:00:29,370
seguro e ento podemos definir qual tipo de carregador queremos usar aqui.

8
00:00:29,460 --> 00:00:34,560
Agora, para css, eu preciso de uma configurao mais complexa, pois js tambm temos uma configurao

9
00:00:34,560 --> 00:00:39,900
bastante complexa, mas isso  tudo feito atravs do babel e da nossa configurao do babel, para

10
00:00:39,900 --> 00:00:42,820
css vamos configur-lo aqui no arquivo de configurao do webpack.

11
00:00:42,840 --> 00:00:46,830
Ento ao invs de loader eu posso usar use aqui, essa  a

12
00:00:46,980 --> 00:00:52,580
forma longa, loader  a forma muito curta se ns apenas quisermos configurar um loader sem qualquer config,

13
00:00:52,740 --> 00:00:57,620
se quisermos configurar vrios loaders ou um loader com config, devemos use o uso aqui.

14
00:00:57,750 --> 00:01:00,870
 preciso uma matriz dos loaders que queremos

15
00:01:01,260 --> 00:01:05,210
aplicar e aqui, agora eu quero instalar dois loaders que

16
00:01:05,280 --> 00:01:13,170
eu farei com o npm install --save-dev e eu preciso de um loader que basicamente diga ao webpack o

17
00:01:13,170 --> 00:01:16,430
que fazer com eles. importaes de

18
00:01:16,650 --> 00:01:23,930
CSS e o carregador de estilo. Isso  um carregador que ir extrair o cdigo css dos

19
00:01:23,940 --> 00:01:26,870
arquivos css e injet-lo no topo do nosso arquivo

20
00:01:26,910 --> 00:01:30,790
html, reduzindo assim a quantidade de downloads de arquivos que temos que fazer.

21
00:01:30,810 --> 00:01:36,660
Ento eu vou instalar aqui e agora eu quero adicion-los,  claro, para que no meu array

22
00:01:36,780 --> 00:01:44,490
de uso, eu adicionarei um objeto javascript que tenha uma propriedade loader novamente onde eu defino o carregador de estilo, ele 

23
00:01:44,940 --> 00:01:50,390
seguido e o pedido importa aqui por outro objeto com um carregador, o carregador css.

24
00:01:50,490 --> 00:01:53,120
Agora importante e isso  fcil de

25
00:01:53,340 --> 00:01:59,720
bagunar, o webpack analisa os loaders nessa matriz de uso e os aplica da direita para a

26
00:01:59,730 --> 00:02:02,660
esquerda, de baixo para cima, se escrevermos assim.

27
00:02:02,820 --> 00:02:09,210
Portanto, primeiro  necessrio o loader css, pois isso faz com que ele entenda as importaes do css

28
00:02:09,210 --> 00:02:10,750
e no lana um

29
00:02:11,100 --> 00:02:16,140
erro e, em seguida, aplica o carregador de estilo no cdigo css extrado e

30
00:02:16,410 --> 00:02:19,120
 exatamente a ordem que precisamos aqui.

31
00:02:19,140 --> 00:02:25,730
Agora tambm podemos fornecer o carregador css, que  responsvel por analisar e

32
00:02:25,730 --> 00:02:35,770
manipular a propriedade css another, que  chamada de options. Agora as opes so um objeto javascript onde podemos configurar este

33
00:02:35,770 --> 00:02:36,660
carregador, agora

34
00:02:37,060 --> 00:02:45,400
aqui eu quero definir o mdulo como true para ativar os mdulos css e configurarei o nome ident

35
00:02:45,400 --> 00:02:52,660
local para definir como as classes css geradas devido aos mdulos css devem ser semelhantes .

36
00:02:52,830 --> 00:03:00,160
E aqui eu vou tomar o nome da classe que definimos, dois sublinhados, ento o nome do mdulo,

37
00:03:00,160 --> 00:03:07,630
ento o nome do componente e um hash para realmente ter nomes exclusivos, essa  a mesma configurao que

38
00:03:07,630 --> 00:03:13,080
adicionamos no mdulo de estilo para fazer o configurao criar reagir aplicativo nos deu.

39
00:03:13,420 --> 00:03:15,710
Ns ainda no terminamos com css,

40
00:03:15,790 --> 00:03:22,000
eu tambm quero adicionar auto-prefixing e para isso eu vou instalar outro pacote com --save-dev

41
00:03:22,000 --> 00:03:26,260
post css loader, agora postar css soa como se fizesse algo

42
00:03:26,260 --> 00:03:30,700
para css depois de analisarmos isso , aqui ele vai realmente

43
00:03:30,790 --> 00:03:38,830
rodar antes do carregador css, mergulhar no arquivo css e ajustar nosso cdigo antes do css loader puxar para fora

44
00:03:38,920 --> 00:03:47,170
e ajustar os nomes das classes e assim por diante. O post css loader  simplesmente um loader que nos permite

45
00:03:47,170 --> 00:03:49,540
transformar o css, por exemplo tambm

46
00:03:49,570 --> 00:03:55,320
poderamos usar o post css loader para manipular o sass e coisas assim, aqui no

47
00:03:55,320 --> 00:04:00,820
entanto eu simplesmente vou adicion-lo como outro loader e portanto na terceira posio porque deve

48
00:04:00,820 --> 00:04:02,780
ser executado antes desse carregador css.

49
00:04:03,010 --> 00:04:10,600
Aqui vou configurar meu loader que  post css loader e preciso configurar minhas opes nesse loader com a

50
00:04:11,690 --> 00:04:18,870
chave de opes onde agora quero definir a opo ident, isso  importante internamente aqui, mas mais importante

51
00:04:19,070 --> 00:04:24,350
so os plugins, que na verdade pega uma funo que retorna um array e

52
00:04:24,470 --> 00:04:28,950
estes so passos que devemos aplicar ou queremos aplicar para transformar tudo.

53
00:04:29,270 --> 00:04:36,120
E aqui quero executar o prefixer automtico, agora o prefixer automtico precisa ser instalado.

54
00:04:36,140 --> 00:04:37,530
 uma ferramenta separada.

55
00:04:37,880 --> 00:04:43,990
Ento, eu vou rodar o npm install --save-dev auto prefixer, que 

56
00:04:44,360 --> 00:04:52,040
uma biblioteca de terceiros que  capaz de auto prefixar nossas propriedades css, precisamos import-lo

57
00:04:52,130 --> 00:04:53,530
para o arquivo

58
00:04:53,540 --> 00:05:03,400
de configurao, ento criarei um novo const, autoPrefixer que usa a sintaxe necessria para importar o autoPrefixer, como este.

59
00:05:03,410 --> 00:05:08,120
Agora, com essa importao adicionada, podemos adicionar isso  matriz de plugins aqui,

60
00:05:08,120 --> 00:05:11,510
ento aqui eu adicionarei o autoPrefixer e esta  realmente

61
00:05:11,660 --> 00:05:17,450
uma funo que precisamos executar e passamos um objeto javascript para ele para configur-lo e l novamente

62
00:05:17,450 --> 00:05:17,770
passamos

63
00:05:17,900 --> 00:05:24,110
um lista de navegadores, ento os navegadores so uma lista e podemos pegar a lista que montamos no

64
00:05:24,110 --> 00:05:26,830
babelrc, que  a lista de navegadores que

65
00:05:26,840 --> 00:05:27,890
eu quero suportar,

66
00:05:28,040 --> 00:05:31,810
vou apenas col-la na lista do navegador para o autoPrefixer.

67
00:05:31,940 --> 00:05:38,300
Portanto, agora prefixamos o css conforme necessrio para esses navegadores que suportamos e ele

68
00:05:38,330 --> 00:05:41,450
descobrir automaticamente quais navegadores so para ns.

69
00:05:41,450 --> 00:05:43,830
Essa  a configurao mnima que eu quero usar.

70
00:05:44,060 --> 00:05:50,030
Agora, como temos um loader adicional antes do css loader, precisamos informar ao css loader sobre isso, isso

71
00:05:50,030 --> 00:05:50,550
 apenas

72
00:05:50,570 --> 00:05:53,210
uma necessidade especial de configurao do css loader.

73
00:05:53,510 --> 00:06:00,950
Ento, adicionarei os carregadores de importao e configurarei isso para um porque executamos um carregador antes que o carregador de

74
00:06:00,950 --> 00:06:01,860
CSS seja aplicado.

75
00:06:02,210 --> 00:06:06,290
E essa  a nossa configurao de manipulao de css, deve ficar bem, em

76
00:06:06,320 --> 00:06:08,920
breve veremos se funciona. Com isso, vamos

77
00:06:08,930 --> 00:06:16,820
continuar e vamos nos certificar de que agora tambm podemos manipular imagens, j que tambm as importamos.

