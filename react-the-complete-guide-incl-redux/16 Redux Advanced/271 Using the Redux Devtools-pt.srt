1
00:00:02,240 --> 00:00:07,490
Ento, na ltima conferncia, adicionamos nosso prprio middleware, que  um Mitla de registro, onde

2
00:00:07,520 --> 00:00:09,800
produz algo sempre que despachamos uma ao.

3
00:00:09,800 --> 00:00:15,680
No, isso  bom e isso nos permite obter algumas idias sobre nossa histria, mas apenas se

4
00:00:16,310 --> 00:00:20,980
despachamos uma ao que seria mais til se pudessem sempre examinar a histria.

5
00:00:21,050 --> 00:00:27,530
Agora, na seo de depurao, aprendemos sobre as ferramentas DAPH reativas, podemos dar uma olhada em todos os

6
00:00:27,530 --> 00:00:31,690
componentes para o componente e o estado de cada um desses.

7
00:00:31,970 --> 00:00:37,430
E para o provedor, por exemplo, ns ganhamos a loja, mas l, s vemos as funes do utilitrio.

8
00:00:37,430 --> 00:00:40,130
Ns realmente no vemos o que est dentro da loja.

9
00:00:40,250 --> 00:00:43,420
Ento, isso no  timo agora.

10
00:00:43,490 --> 00:00:45,720
H maneiras de contornar isso.

11
00:00:45,800 --> 00:00:50,400
Vamos clicar no componente do contador, por exemplo, vemos o valor atual do contador Propp.

12
00:00:50,600 --> 00:00:56,570
Mas ainda  difcil se tivermos que navegar at um componente que obtenha uma certa fatia do

13
00:00:56,810 --> 00:01:02,930
estado apenas para ver essa fatia seria melhor poder olhar para a loja completa e at mesmo ver

14
00:01:02,930 --> 00:01:06,220
as aes que foram despachadas talvez at se rebobinassem.

15
00:01:06,770 --> 00:01:12,660
Bem, para isso, existem ferramentas de desenvolvedores especiais que podemos instalar se voc google for read dev tools.

16
00:01:12,740 --> 00:01:14,080
Voc encontrar dois resultados.

17
00:01:14,090 --> 00:01:19,840
A segunda, a extenso de ferramentas lidas para o dev desenvolve ou para ser precisa a terceira, a redux dev desenvolve

18
00:01:19,850 --> 00:01:21,100
a nichrome web shop.

19
00:01:21,230 --> 00:01:22,760
Isso  interessante.

20
00:01:23,210 --> 00:01:26,060
Voc deve instalar esta extenso no Chrome.

21
00:01:26,060 --> 00:01:30,340
Isso lhe dar uma boa ficha e voc pode usar para procurar sua loja.

22
00:01:30,470 --> 00:01:33,510
Agora voc pode ler mais instrues sobre esse segundo resultado.

23
00:01:33,560 --> 00:01:39,710
de extenso redux dev ferramentas aqui voc encontrar mais instrues sobre como instalar e configur-lo no final  super

24
00:01:39,710 --> 00:01:44,420
simples, voc s precisa baixar essa extenso e instal-lo e voc est praticamente pronto.

25
00:01:44,420 --> 00:01:45,110
O repositrio

26
00:01:45,110 --> 00:01:46,780
No entanto,  necessrio mais um passo.

27
00:01:46,880 --> 00:01:49,820
Mas, claro, tambm o acompanhar pelas etapas necessrias.

28
00:01:49,820 --> 00:01:53,740
Agora importante no d uma olhada no primeiro resultado aqui.

29
00:01:53,750 --> 00:01:57,930
Estas so todas as ferramentas de desenvolvimento que voc pode implementar programaticamente em seu aplicativo.

30
00:01:57,980 --> 00:02:00,280
Ns queremos ter essa extenso de navegador embora.

31
00:02:00,650 --> 00:02:03,410
Ento, ns vemos as etapas que precisamos aplicar.

32
00:02:03,440 --> 00:02:10,550
instalou as ferramentas def, se voc abri-las, ento sero as ferramentas do desenvolvedor, deve haver uma opo redux.

33
00:02:10,550 --> 00:02:12,210
Agora, como voc j

34
00:02:13,810 --> 00:02:17,910
Pode ter que voltar ao console primeiro.

35
00:02:17,950 --> 00:02:21,760
Voc deve ver as ferramentas redox dev abrir aqui  direita.

36
00:02:21,760 --> 00:02:27,810
Agora, est dizendo que nenhuma loja encontrada porque no seguimos o segundo passo em que devemos basicamente

37
00:02:27,810 --> 00:02:35,830
informar essa extenso de que existe uma loja em nosso aplicativo da Web e, para isso, precisamos configurar uma varivel especial aqui

38
00:02:36,160 --> 00:02:43,510
ou passar por um especial aprimorado ou devemos dizer ao nosso mtodo create store, uma vez que estamos usando o middleware,

39
00:02:43,570 --> 00:02:46,470
temos que usar a configurao da loja avanada.

40
00:02:46,510 --> 00:02:52,930
Mas ainda  bastante simples, copie essa varivel estranhamente nomeada aqui no objeto da janela.

41
00:02:52,990 --> 00:02:59,140
O redux def tools extension compor o item aqui , essencialmente, uma varivel que  injetada pela extenso

42
00:02:59,140 --> 00:03:05,500
do Chrome em nosso javascript em tempo de execuo para que ele esteja disponvel novamente em nosso cdigo no

43
00:03:05,530 --> 00:03:06,340
prximo, como segue.

44
00:03:06,340 --> 00:03:07,690
Criamos uma loja.

45
00:03:07,910 --> 00:03:17,320
Primeiro, conforme instrudo aqui, crie uma constante personalizada antes de fazer qualquer coisa na loja, todos

46
00:03:17,320 --> 00:03:27,370
os nomes e compor e responderemos, ento nossa varivel especial ou, caso no seja possvel, retornar a

47
00:03:27,720 --> 00:03:32,580
uma funo de composio padro fornecida por redux.

48
00:03:32,690 --> 00:03:36,190
Voc pode import-lo do pacote redox.

49
00:03:36,340 --> 00:03:42,310
Agora, compor  um pouco semelhante aos redutores combinados, os redutores combinados nos permitem combinar o redutor de

50
00:03:42,400 --> 00:03:48,880
poos compondo nos permite combinar e o middleware de aplicao da Hans  apenas para o meio, enquanto que

51
00:03:48,910 --> 00:03:56,500
se ns possumos amplificadores de pera como para armazenar ferramentas de def, precisamos usar compor para compor um conjunto de respostas com

52
00:03:56,500 --> 00:03:59,230
os recursos de ferramentas def e nosso middleware.

53
00:03:59,380 --> 00:04:08,360
Ento, tambm adicionamos compositor separado que conosco ou atribuir texto  injetar dinamicamente aquela baleia varivel.

54
00:04:08,380 --> 00:04:14,500
Mas, se no, ainda tem que voltar para a soluo redox nativa, que naturalmente no nos d

55
00:04:14,500 --> 00:04:16,030
surdos para suportar ento.

56
00:04:16,120 --> 00:04:20,410
Ento, agora, os aprimoradores do kapos basicamente mantm uma funo.

57
00:04:20,440 --> 00:04:22,900
Voltamos  documentao.

58
00:04:23,080 --> 00:04:28,540
Ns vemos que agora devemos criar nossa loja e usar esta nova funo de aprimoramento de composio

59
00:04:28,560 --> 00:04:35,420
que usa a funo de ferramentas def ou construda de forma nativa para depois passar a aplicar o middleware para ela.

60
00:04:35,490 --> 00:04:37,030
Ento vamos fazer isso.

61
00:04:37,080 --> 00:04:44,750
Vou envolver o middleware de aplicao na loja de criao com potenciadores de compostos.

62
00:04:45,010 --> 00:04:52,530
Ento, com este nome constante, aqui, envolva os aprimoramentos, aplique o middleware com ele, ento, aplique o middleware como

63
00:04:52,540 --> 00:04:54,070
uma funo para isso.

64
00:04:54,250 --> 00:04:58,450
de def, porque isso ser passado automaticamente se os dados escolhidos de dados estiverem disponveis.

65
00:04:58,450 --> 00:05:00,620
Voc no precisa passar nada sobre as ferramentas

66
00:05:00,850 --> 00:05:07,330
Ento ns conseguimos um conjunto onde devemos poder conectar a extenso do nosso navegador  loja que roda

67
00:05:07,330 --> 00:05:08,920
no nosso cdigo Javascript.

68
00:05:09,280 --> 00:05:15,550
Vamos dar uma olhada, vamos voltar ao aplicativo de reao, e voc j deve ver que

69
00:05:15,550 --> 00:05:19,160
a viso de leitura X est preenchida com a vida.

70
00:05:19,240 --> 00:05:24,230
Aqui voc v todas as aes que foram emitidas como a ao init que acontece primeiro.

71
00:05:24,340 --> 00:05:27,290
Contra isso, obtenha uma viso diferente sobre isso.

72
00:05:27,640 --> 00:05:32,930
E a voc v para cada ao qual o tipo que era ou qual a carga til que realmente carregava.

73
00:05:32,950 --> 00:05:38,390
Alm disso, alm disso, digite o que o estado  neste momento, como ele mudou o estado.

74
00:05:38,710 --> 00:05:45,610
E voc sempre pode olhar para o estado, portanto, com este boto de estado em um determinado momento.

75
00:05:45,610 --> 00:05:52,120
Agora, se despachar uma nova ao, por exemplo, subtraindo 15, voc ver que ela  adicionada aqui.

76
00:05:52,180 --> 00:05:56,780
E se voc clicar nele, vemos o que o estado  depois. Faa a ao neste estado aqui.

77
00:05:56,910 --> 00:06:00,280
Voc tambm v o estado antigo se voc clicar na ao na ao da unidade.

78
00:06:00,400 --> 00:06:06,520
Ento, voc v o estado em diferentes pontos de tempo, voc ver como a ao subtrair mudou para

79
00:06:06,670 --> 00:06:11,820
indicar que detectou 15 fora do contador e voc ver o que a ao executou.

80
00:06:12,280 --> 00:06:13,720
Isso  bastante til.

81
00:06:13,720 --> 00:06:19,510
Agora, podemos adicionar mais e mais e sempre podemos ver como ajustamos nosso estado e qual  o nosso estado atual

82
00:06:19,510 --> 00:06:21,910
e o que nosso estado era no passado.

83
00:06:21,910 --> 00:06:28,600
Ento, as ferramentas do Rydex dev so extremamente teis e definitivamente mergulhar na documentao que eu apontou para

84
00:06:28,850 --> 00:06:31,150
que voc aprenda mais sobre elas.

85
00:06:31,150 --> 00:06:36,550
Agora, uma caracterstica importante que quero mostrar  o tempo que viaja com as ferramentas redux dev.

86
00:06:36,640 --> 00:06:38,370
Voc pode viajar pelo tempo.

87
00:06:38,500 --> 00:06:45,070
Ento, por exemplo,  claro que a aplicao que vemos aqui reflete o estado depois de todas essas aes.

88
00:06:45,340 --> 00:06:51,670
e dizer vamos voltar a essa subtrao aqui, voc pode clicar em subtrair e, em seguida, em chump.

89
00:06:51,670 --> 00:06:52,930
Mas se quisermos rebobinar

90
00:06:53,170 --> 00:06:57,770
E agora voc v que voc est de volta ao ponto morto do tempo em que voc apenas subtraiu 50.

91
00:06:57,930 --> 00:06:59,400
Agora, os estados antigos no esto perdidos.

92
00:06:59,400 --> 00:07:02,810
Voc sempre pode voltar para l clicando em chomp nisso novamente.

93
00:07:03,130 --> 00:07:10,800
Mas voc tambm pode voltar e, por exemplo, ignorar isso para atualizar seu estado como se voc nunca tivesse enviado

94
00:07:10,800 --> 00:07:11,700
como ao.

95
00:07:11,740 --> 00:07:13,520
E, claro, isso tambm pode ser retrabalhado.

96
00:07:13,690 --> 00:07:19,810
um recurso extremamente agradvel que lhe oferece muitas possibilidades de depurao e, especialmente, aplicativos mais complexos.

97
00:07:19,810 --> 00:07:21,130
Ento, este 

98
00:07:21,140 --> 00:07:26,110
Isso  timo para garantir que apenas as aes sejam despachadas, voc espera que seja despachado e

99
00:07:26,110 --> 00:07:28,290
descobrir por que o estado est atualmente.

100
00:07:28,330 --> 00:07:30,100
Bem, o estado em que est.

