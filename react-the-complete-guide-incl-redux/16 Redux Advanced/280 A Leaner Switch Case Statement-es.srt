1
00:00:02,500 --> 00:00:09,410
Termine la ltima conferencia. Ya usamos nuestro objeto de actualizacin de la funcin de utilidad para hacer que nuestros reductores sean

2
00:00:09,710 --> 00:00:11,510
ms eficientes tercerizando nuestro paso comn.

3
00:00:11,510 --> 00:00:15,770
Lo repetimos por todas partes en una funcin de utilidad.

4
00:00:15,770 --> 00:00:23,870
Ahora nuestros casos de reductores en realidad son lindos Linville que en el recuento de REDUCE-IT pueden ser mucho ms delgados y son

5
00:00:24,580 --> 00:00:30,240
un productor slido, al menos tenemos uno de los casos con un paso adicional donde actualizamos

6
00:00:30,240 --> 00:00:31,160
la matriz.

7
00:00:31,640 --> 00:00:37,720
Algunos desarrolladores no todos, pero a algunos les gusta tener casos muy magros en los que esencialmente tienes dos

8
00:00:37,850 --> 00:00:40,750
puntos y luego una funcin a la que llamas.

9
00:00:40,850 --> 00:00:47,640
Obviamente, todava tenemos que ejecutar nuestra lgica, pero les gusta externalizar esto en una funcin para que la declaracin de

10
00:00:47,660 --> 00:00:49,490
maysculas y minsculas sea muy delgada.

11
00:00:49,520 --> 00:00:54,960
Tiene una gran ventaja si se ve una declaracin de maysculas y minsculas en el reductor de contador.

12
00:00:55,100 --> 00:01:00,650
Podemos ver rpidamente qu sucede en cada productor o al menos dnde manejamos algo.

13
00:01:00,710 --> 00:01:08,300
Entonces, vemos todos los casos en una pgina, por as decirlo para los resultados de este otoo, lo que significa

14
00:01:08,330 --> 00:01:11,920
que puede externalizar esta lgica aqu en su propia funcin.

15
00:01:12,110 --> 00:01:14,660
Esa funcin entra en el mismo archivo.

16
00:01:14,870 --> 00:01:20,100
Entonces, simplemente agregar una nueva funcin fuera de la funcin de reduccin.

17
00:01:20,110 --> 00:01:24,060
Obviamente y lo nombrar eliminar.

18
00:01:24,160 --> 00:01:25,110
Resultado.

19
00:01:25,220 --> 00:01:32,270
La convencin debera ser usar el tipo de accin como el nombre aunque no en maysculas, sino en camel case.

20
00:01:32,450 --> 00:01:38,150
Entonces la sal literal y all obtengo mi estado y necesito obtener mi accin.

21
00:01:38,150 --> 00:01:41,880
Entonces, esencialmente, los mismos datos que obtengo en el reductor.

22
00:01:41,930 --> 00:01:48,580
Ahora aqu quiero usarlo como la sintaxis de la funcin 6 flechas, as que lo har.

23
00:01:48,960 --> 00:01:54,400
Y en esta funcin ahora bsicamente ejecuto lo que hice antes en la declaracin de maysculas y minsculas.

24
00:01:54,620 --> 00:02:02,300
todos actualizan la matriz de poner ese mtodo all o ese cdigo en la funcin de eliminacin de resultados.

25
00:02:02,300 --> 00:02:04,040
Entonces, en mi caso,

26
00:02:04,080 --> 00:02:10,530
Ahora, al final aqu en esta funcin, por supuesto, necesito devolver el estado actualizado todava.

27
00:02:10,760 --> 00:02:18,950
As que tambin grep ese cdigo de mi caso de eliminacin de asaltos y llamo al objeto actualizado con un estado.

28
00:02:19,190 --> 00:02:23,270
Y bsicamente estn haciendo lo mismo que yo haca antes en la declaracin de maysculas y minsculas.

29
00:02:23,540 --> 00:02:26,320
Y esa es exactamente la idea detrs de su ayuda o funciones.

30
00:02:26,360 --> 00:02:31,930
Pones tu cdigo anterior en ellos y luego no puedo simplemente llamar al pre-sal principal y devolver datos aqu.

31
00:02:32,090 --> 00:02:34,750
Entonces, desde eliminar Rosol, devuelve el mapa que tena el objeto.

32
00:02:34,760 --> 00:02:38,100
Simplemente puedo devolver el resultado de eliminacin aqu.

33
00:02:38,150 --> 00:02:39,410
Simplemente llamndolo as.

34
00:02:39,410 --> 00:02:44,780
Y, por supuesto, tengo que pasar a estado y accin porque ambos son necesarios en esa funcin.

35
00:02:46,280 --> 00:02:52,490
Con eso conseguimos un reductor ms simple aqu para dejarme eliminar los comentarios, no es ms fcil que eso.

36
00:02:52,490 --> 00:02:58,100
Ahora podemos escribirlo en lnea junto a los dos puntos si queremos que tenga un cuerpo delgado y

37
00:02:58,100 --> 00:02:59,950
solo tenga un caso por lnea.

38
00:03:00,170 --> 00:03:01,600
Y esto es todo opcional.

39
00:03:01,670 --> 00:03:07,700
Es una forma de crear sentencias de caso de interruptor muy limpias que hacen que sea fcil ver qu

40
00:03:07,700 --> 00:03:12,660
casos est manejando en un reductor dado y esa puede ser la ventaja de este enfoque.

