1
00:00:02,340 --> 00:00:05,630
Ora abbiamo ristrutturato le nostre azioni nell'ultima lezione.

2
00:00:05,640 --> 00:00:10,410
Ora voglio tuffarmi in ci che effettivamente mettiamo nei creatori di azioni.

3
00:00:10,440 --> 00:00:12,990
 ovviamente facile per il codice asincrono.

4
00:00:13,020 --> 00:00:18,720
L'unico posto in cui possiamo eseguire codice asincrono  nel nostro creatore di ection.

5
00:00:18,810 --> 00:00:23,700
 ci per cui  stato creato il funk redux ed  il modello comune e migliore.

6
00:00:23,790 --> 00:00:29,820
 necessario raggiungere un server per recuperare i dati da esso e successivamente memorizzarlo nel tuo negozio.

7
00:00:29,940 --> 00:00:35,580
Sicuramente farlo con il creatore di azioni invia qui la tua richiesta HTP invece di detto time out e una volta che

8
00:00:35,580 --> 00:00:37,860
la risposta  l la risposta lo sguardo fisso.

9
00:00:37,890 --> 00:00:42,780
Memorizzalo nel tuo negozio lo vedrai come un'azione nel progetto del corso, ovviamente.

10
00:00:42,890 --> 00:00:51,010
Tuttavia, puoi ovviamente mettere molta pi logica nella tua azione, i creatori pensano allo stesso risultato.

11
00:00:51,120 --> 00:00:57,300
Salviamo i nostri risultati li otteniamo come argomento e restituiamo semplicemente un'azione in cui la

12
00:00:57,300 --> 00:00:58,390
passiamo come payload.

13
00:00:58,410 --> 00:01:00,930
Ora questo  un creatore ere molto secco.

14
00:01:00,930 --> 00:01:05,940
Non fa altro, ma restituisce l'oggetto con la risposta invariata.

15
00:01:05,940 --> 00:01:07,260
Risultato mi scusi.

16
00:01:07,260 --> 00:01:15,700
fare  creare una costante, magari denominarla come risultato aggiornato e quindi uguale a risultato due volte.

17
00:01:15,720 --> 00:01:17,960
Ora, ovviamente, quello che potremmo

18
00:01:17,970 --> 00:01:24,720
Ora ovviamente questo non ha molto senso qui ma possiamo teoricamente modificare tutto ci che vuoi

19
00:01:24,720 --> 00:01:28,310
qui e potresti avere trasformazioni che hanno pi senso.

20
00:01:28,470 --> 00:01:36,690
Forse vogliamo aggiornare alcune idee che vogliamo aggiungere un nome utente e quindi passare il nostro risultato aggiornato.

21
00:01:36,690 --> 00:01:39,770
Il fatto  che questo succede risparmiando anni.

22
00:01:39,780 --> 00:01:40,960
Lo terro 'a mente.

23
00:01:41,280 --> 00:01:49,620
La nostra applicazione funziona ancora per un negozio che abbiamo archiviato 20 perch abbiamo aggiornato il loro

24
00:01:49,620 --> 00:01:51,470
assalto moltiplicandolo con due.

25
00:01:51,480 --> 00:01:54,110
Ora abbiamo la logica nel creatore di azioni.

26
00:01:54,180 --> 00:01:58,970
E questa potrebbe essere una logica valida invece di qualche operazione senza senso come questa.

27
00:01:58,980 --> 00:02:03,160
Il fatto  che potresti anche eseguire la stessa logica.

28
00:02:03,180 --> 00:02:07,700
Quindi lasciatemi riformulare lo stato precedente di una semplice risposta.

29
00:02:07,860 --> 00:02:13,440
 possibile eseguire la stessa logica se  necessario trasformare i dati prima di memorizzarli nello stato che

30
00:02:13,440 --> 00:02:15,680
 perfettamente a posto che potrebbe accadere.

31
00:02:15,840 --> 00:02:20,210
Puoi eseguire la stessa logica ovviamente nel tuo riduttore qui.

32
00:02:20,340 --> 00:02:21,670
Store result.

33
00:02:21,900 --> 00:02:25,750
Qui concateniamo il risultato e memorizziamo il valore.

34
00:02:25,780 --> 00:02:30,650
Ora ovviamente nulla ci impedisce di moltiplicare questo con due qui.

35
00:02:30,720 --> 00:02:33,990
Se lo faccio con loro nel loro riduttore d'assalto.

36
00:02:34,020 --> 00:02:38,870
Ora se salvo 10 ne conserviamo ancora 20 nel negozio, come puoi vedere.

37
00:02:38,940 --> 00:02:41,620
Ma ora lo cambiamo in un posto completamente diverso.

38
00:02:41,640 --> 00:02:43,310
Lo cambiamo nel riduttore.

39
00:02:43,350 --> 00:02:49,470
Ora, come ho gi detto, questa operazione potrebbe non avere molto senso, ma spesso troverai casi in

40
00:02:49,470 --> 00:02:53,190
cui desideri veramente modificare qualcosa prima di essere archiviati nello stato.

41
00:02:53,310 --> 00:02:56,950
Non sempre ottieni il valore che vuoi trasmettere.

42
00:02:57,030 --> 00:03:00,190
Dove dovresti Denne cambiarlo nel riduttore.

43
00:03:00,300 --> 00:03:09,180
Naturalmente, come ti mostro qui, puoi anche eseguire alcuni codici prima di restituire i tuoi dati di modifica o qualsiasi altro creatore

44
00:03:09,180 --> 00:03:10,000
di azioni.

45
00:03:10,140 --> 00:03:13,550
Come ti ho mostrato prima di qui, cosa ho commentato.

46
00:03:13,980 --> 00:03:15,570
Entrambe le opere.

47
00:03:15,600 --> 00:03:18,020
Cosa c' di meglio da dare un'occhiata pi da vicino.

48
00:03:18,720 --> 00:03:23,030
Alla fine la domanda si riduce a dove mettere la logica.

49
00:03:23,070 --> 00:03:27,670
Adesso abbiamo creatori e produttori effettivi.

50
00:03:27,690 --> 00:03:35,270
I creatori di azioni che hai imparato sono fantastici per l'esecuzione di codice asincrono quando invii un riduttore

51
00:03:35,280 --> 00:03:44,240
di azioni su Yaverland solo sono in grado di eseguire il codice sincrono e sono puro input in riduttori di stato

52
00:03:44,240 --> 00:03:50,740
aggiornati, tuttavia tieni presente che sono pensati per essere il luogo in cui aggiorni il stato.

53
00:03:50,740 --> 00:03:59,030
Questo  un concetto fondamentale di redux action. I creatori di Natcore sono un concetto fondamentale per le nostre azioni.

54
00:03:59,180 --> 00:04:05,930
DS  geloso di oggetti con un tipo e un carico utile, quindi i riduttori il concetto di base

55
00:04:05,930 --> 00:04:12,980
e l'intera idea alla rovescia  che il riduttore  l'unica cosa che aggiorna i creatori di azioni statali che

56
00:04:12,980 --> 00:04:14,460
non dovrebbero prepararsi troppo.

57
00:04:14,460 --> 00:04:19,940
Per questo motivo dovrebbe essere il riduttore che fa l'aggiornamento, ma ovviamente c'

58
00:04:19,940 --> 00:04:27,090
una differenza tra l'aggiornamento dello stato che essenzialmente significa semplicemente restituire un nuovo oggetto che costituisce il

59
00:04:27,080 --> 00:04:30,910
nostro stato e modificare i dati che vanno nello stato.

60
00:04:31,220 --> 00:04:35,370
Ancora puoi trovare argomenti per entrambe le direzioni.

61
00:04:35,390 --> 00:04:42,770
Mi propongo di inserire la logica nel riduttore e non troppa logica nel creatore dell'azione.

62
00:04:42,770 --> 00:04:49,010
Il codice asincrono deve andare l, ma una volta che hai recuperato i dati

63
00:04:49,010 --> 00:04:55,860
dal server che potresti dover raggiungere, puoi ovviamente trasformarlo nell'action Creator e dovresti farlo in

64
00:04:56,540 --> 00:05:03,970
una certa misura, ma una volta che hai dati che sono relativamente pulito dovresti consegnarlo al produttore.

65
00:05:04,130 --> 00:05:09,980
E se hai ancora bisogno di manipolarlo ad esempio prendendo 8 volte o qualcosa del genere

66
00:05:09,980 --> 00:05:12,910
a mio parere, questo dovrebbe andare nel riduttore.

67
00:05:13,100 --> 00:05:18,620
Ora troverai anche argomenti per l'altra parte e alla fine  una tua decisione

68
00:05:18,620 --> 00:05:21,660
se scegli un approccio stick, ma non cambiarlo.

69
00:05:21,800 --> 00:05:27,860
Non mettere molta logica in un creatore di azioni semplicemente non hanno un sacco di logica e un riduttore di numeri.

70
00:05:27,920 --> 00:05:35,120
Sii coerente e decidi dove vuoi trasformare e preparare il tuo creatore di direzione dati o educe

71
00:05:35,120 --> 00:05:36,960
o ti consiglio quest'ultimo.

72
00:05:36,980 --> 00:05:38,640
Ma alla fine tocca a te.

73
00:05:38,750 --> 00:05:40,460
Prendi una strada coerente.

