1
00:00:02,120 --> 00:00:03,680
Wic

2
00:00:03,680 --> 00:00:11,210
zaimplementujmy ten skadnik kasy. W rzeczywistoci zaimplementuj go w kontenerze, poniewa bdzie

3
00:00:11,210 --> 00:00:16,590
on komponentem, ktry zarzdza wasnym stanem, a take przekazuje go innym komponentom.

4
00:00:16,640 --> 00:00:22,690
Dodaj nowy folder w pojemnikach, a ja go wymieniam, a tam dodam to do kasy. Plik js, ktry

5
00:00:22,730 --> 00:00:27,010
powinien przechowywa mj komponent kasowy.

6
00:00:27,080 --> 00:00:34,190
Bdzie to komponent oparty na klasach i stan bdzie zaangaowany i dlatego rozszerzam

7
00:00:34,190 --> 00:00:42,380
obiekt komponentu, ktry musz importowa, aby reagowa razem z samym pakietem reagowania, aby obsugiwa jsx.

8
00:00:42,680 --> 00:00:45,610
Dodajmy wic t klas, a nastpnie

9
00:00:45,830 --> 00:00:53,720
wyeksportujmy j jako domyln dla tego pliku, a nastpnie zaplanujmy, jak powinien wyglda komponent kasowy

10
00:00:53,810 --> 00:00:56,000
i powinien si zachowywa.

11
00:00:56,000 --> 00:01:02,970
To, co chc mie w kasie to mae podsumowanie kasy, wic w zasadzie to,

12
00:01:03,020 --> 00:01:10,290
co uytkownik ma zamiar kupi, a cena prawdopodobnie, a nastpnie przycisk, aby anulowa proces realizacji

13
00:01:10,310 --> 00:01:15,460
transakcji i wrci do budowniczego burgera i oczywicie przycisku kontynuowa.

14
00:01:15,680 --> 00:01:22,580
I myl, e dla podsumowania byoby mio nie pokaza jeszcze tylko listy skadnikw, ale

15
00:01:22,580 --> 00:01:24,210
moe pokaza samego

16
00:01:24,230 --> 00:01:26,060
burgera, przebudowa burgera w

17
00:01:26,060 --> 00:01:27,850
tym podsumowaniu kasy.

18
00:01:27,950 --> 00:01:30,760
Oto cel, pokaza to podsumowanie,

19
00:01:30,830 --> 00:01:36,700
a kiedy uytkownik kliknie dalej, chc zaadowa formularz kontaktowy.

20
00:01:37,040 --> 00:01:44,780
Dlatego krok po kroku celem jest stworzenie formularza podsumowania transakcji, ktry pozwala mi wywietli podgld

21
00:01:44,780 --> 00:01:52,280
burgera i wywietli przyciski kontynuacji lub anulowania. W tym celu przejd do folderu z

22
00:01:52,370 --> 00:01:55,340
komponentami i dodam tam nowy folder,

23
00:01:55,340 --> 00:01:56,530
w ktrym

24
00:01:56,660 --> 00:02:05,770
wymieniam nazw kasy, a moe zamwienie, aby zastpi wszystkie komponenty zwizane z zamwieniami, takie jak komponent kasowy, sprawd,

25
00:02:05,780 --> 00:02:05,960
&nbsp;

26
00:02:05,960 --> 00:02:07,740
czy powinno by

27
00:02:07,820 --> 00:02:09,980
to podsumowanie o nazwie kasy.

28
00:02:10,130 --> 00:02:13,270
A potem utworz streszczenie podsumowania. plik js i plik podsumowujcy

29
00:02:13,330 --> 00:02:14,840
css do stylizacji.

30
00:02:15,020 --> 00:02:20,310
Teraz spjrzmy na podsumowanie wypat. Plik js, tam uyj formularza funkcjonalnego do stworzenia komponentu podsumowania

31
00:02:20,540 --> 00:02:27,440
kasy, wic w zasadzie po prostu funkcja

32
00:02:27,440 --> 00:02:29,950
podsumowania kasy tutaj, jak wiesz.

33
00:02:29,990 --> 00:02:33,580
Prawdopodobnie otrzymamy kilka rekwizytw do renderowania

34
00:02:33,700 --> 00:02:39,630
burgera, a nastpnie zwrcimy troch jsx, wic zdecydowanie musimy zaimportowa

35
00:02:39,680 --> 00:02:44,810
reakcj z pakietu reagowania i oczywicie jak zawsze, jako

36
00:02:45,020 --> 00:02:47,260
domylne podsumowania eksportu eksportu.

37
00:02:47,270 --> 00:02:50,150
Teraz celem jest wywietlenie podgldu naszego burgera tutaj, a nastpnie wywietlenie przyciskw kontynuacji lub anulowania.

38
00:02:50,150 --> 00:03:00,180
Wic, co zrobi, to w jsx, ktry chc tu przywrci, najpierw zapakuj to w div, ktrego uyj

39
00:03:00,200 --> 00:03:09,500
do celw stylizacyjnych, aby nada temu komponentowi jaki styl, potem chc mie Tag h1, w ktrym

40
00:03:09,500 --> 00:03:14,900
mwi, e mamy nadziej, e smakuje dobrze, co takiego,

41
00:03:14,900 --> 00:03:19,640
a potem, teraz chc mie pudeko, w zasadzie

42
00:03:19,640 --> 00:03:22,940
div, gdzie chc obejrze mj komponent hamburgera.

43
00:03:22,960 --> 00:03:29,420
Ten element div jest wymagany do ustawienia granic tego komponentu burgera.

44
00:03:29,620 --> 00:03:33,650
i oczywicie zamierzam ponownie wykorzysta mj komponent hamburgerowy,

45
00:03:33,650 --> 00:03:37,240
ktry ju mam, to jest fajne, moemy go

46
00:03:37,250 --> 00:03:38,180
ponownie wykorzysta. Tak wic

47
00:03:38,180 --> 00:03:45,590
ustawi tu kilka liniowych stylizacji na tym opakowaniu div,

48
00:03:46,040 --> 00:03:55,420
ktre zatrzymaj mojego burgera, aby ustawi szeroko powiedzmy 300px, a nastpnie take nasz wysoko powiedzmy 300px, a nastpnie ustawmy tutaj margines na auto.

49
00:03:55,430 --> 00:04:00,180
Teraz wewntrz tego div chc uy mojego komponentu burgera, zaimportuj go. Zaimportuj burgera z, a teraz przejd do folderu

50
00:04:00,180 --> 00:04:06,970
z burgerami i tam jest burger. Plik js, to jest nasz skadnik

51
00:04:06,970 --> 00:04:11,620
hamburgerowy, ktry mog teraz

52
00:04:11,650 --> 00:04:15,730
wygodnie doda, burger, samozamykajcy si tag.

53
00:04:15,740 --> 00:04:17,790
Ja rwnie musz przekaza moje

54
00:04:18,440 --> 00:04:24,050
skadniki, a do tego oczywicie wane bdzie wiedzie, w jaki sposb otrzymuj te skadniki.

55
00:04:24,050 --> 00:04:29,740
Zakadam, e na razie mog po prostu ustawi waciwo skadnikw

56
00:04:29,750 --> 00:04:37,220
mojego skadnika hamburgerowego, czego mona si spodziewa, jeli przyjrzymy si skadnikowi burgera, mamy

57
00:04:37,280 --> 00:04:40,080
tam skadniki rekwizytw, ktrych uywamy,

58
00:04:40,220 --> 00:04:47,060
wic powinienem przekaza to rwnie temu skadnikowi, do tego komponentu Ups nie

59
00:04:47,240 --> 00:04:48,380
zamawia, checkoutsummary,

60
00:04:48,440 --> 00:04:50,670
oto my.

61
00:04:50,690 --> 00:04:51,630
Spodziewamy si wic

62
00:04:51,920 --> 00:04:58,460
skadnikw w burgerach, wic powinnimy je poda i na razie po prostu spodziewam si, e w komponencie podsumowujcym patno dostan rwnie skadniki

63
00:04:58,460 --> 00:04:59,970
skadnikw, ktre nastpnie przekazuj dalej. Poniej chciabym pokaza

64
00:05:00,050 --> 00:05:08,450
moje przyciski, a zaimportuj wasne przyciski, ktre zbudowaem. A wic komponent przycisku z folderu UI i

65
00:05:08,480 --> 00:05:16,160
tam z folderu przycisku, a nastpnie przycisku. Oczywicie plik js i te przyciski, jak zapewne

66
00:05:16,160 --> 00:05:24,130
znasz, obsuguj dwa rne style, mamy tu sukces

67
00:05:24,170 --> 00:05:25,640
i klas niebezpieczestwa,

68
00:05:25,640 --> 00:05:31,850
ktr moemy przekaza, a my przekazujemy j za pomoc waciwoci typu przycisku.

69
00:05:31,850 --> 00:05:33,200
Wic dodam moje

70
00:05:33,500 --> 00:05:35,900
przyciski poniej, dodam pierwszy przycisk,

71
00:05:35,900 --> 00:05:38,210
gdzie ustawiam typ przycisku, powiedzmy

72
00:05:38,210 --> 00:05:39,890
Danger z duym D,

73
00:05:40,430 --> 00:05:48,260
poniewa jest to nazwa klasy css, gdzie po prostu chc powiedzie CANCEL, moe wszystko czapki tylko do celw

74
00:05:48,260 --> 00:05:55,850
stylizacyjnych, a nastpnie powiel je, aby rwnie mie przycisk Sukces z du liter S, gdzie powiem KONTYNUUJ.

75
00:05:55,850 --> 00:06:00,210
Wic to s dwa przyciski, wiesz te, e przyciski pokazuj

76
00:06:00,230 --> 00:06:01,800
waciwo click, ktra po

77
00:06:01,880 --> 00:06:08,510
prostu wskazuje, e kliknlimy przycisk, wic to jest co, co musz rwnie zrobi, podzielmy to

78
00:06:08,510 --> 00:06:11,910
na wiele linii, implementuj kliknij tutaj i nastpnie

79
00:06:12,020 --> 00:06:14,210
zrb co po klikniciu.

80
00:06:14,240 --> 00:06:18,460
Teraz to jest co, co dodam, na razie chc tylko zakoczy stylizacj tego komponentu.

81
00:06:18,500 --> 00:06:23,810
Tak wic otrzymalimy nasz kod podsumowania jsx z podsumowaniem,

82
00:06:23,810 --> 00:06:29,970
teraz pozwlcie mi take przypisa nazw klasy do elementu div

83
00:06:29,990 --> 00:06:36,820
opakowujcego i jest to klasa, ktr chc ustawi w check outsummary. plik css. Dodam tutaj klas css checkoutsummary, poniewa pamitajmy, e wrcilimy do naszego projektu kursu, uywamy tu moduw

84
00:06:36,820 --> 00:06:42,900
css, aby rozszerzy nasze style.

85
00:06:42,950 --> 00:06:50,290
Tam ustawi wyrwnanie tekstu, aby wyrodkowa wszystko, ustawi szeroko na 80% i margines

86
00:06:50,330 --> 00:06:57,080
automatyczny, aby nastpnie wyrodkowa ten element div lub ten element, a dodam

87
00:06:57,080 --> 00:07:01,440
zapytanie o media, gdzie sprawdz, czy mamy minimaln

88
00:07:01,760 --> 00:07:08,300
szeroko 600px, w ktrym to momencie chc po prostu ograniczy szeroko

89
00:07:08,330 --> 00:07:13,110
tak, aby nie by ju procentem, ale tutaj

90
00:07:13,280 --> 00:07:16,730
ogranicz go do 500px Teraz musz

91
00:07:16,730 --> 00:07:24,560
zaimportowa ten kod css lub obiekt klasy, ktry powiniene bd dokadny, od podsumowania kas. css, a nastpnie przypisz j tutaj.

92
00:07:24,560 --> 00:07:27,860
Wic tutaj dodam

93
00:07:27,860 --> 00:07:30,500
podsumowanie podsumowa zaj z wykorzystaniem

94
00:07:30,500 --> 00:07:32,050
moduw css tutaj.

95
00:07:32,120 --> 00:07:35,190
Teraz przejdziemy do komponentu checkoutsummary, teraz chc go uy w

96
00:07:35,450 --> 00:07:38,280
moim pliku kasy, w moim kontenerze kasowym, aby by precyzyjny. Tak wic, szybko zaimportuj

97
00:07:38,300 --> 00:07:46,640
ten komponent checkoutsummary, ktry wanie utworzylimy

98
00:07:46,640 --> 00:07:54,170
z folderu skadnikw, w zwizku z czym utworzyem ten folder zamwie,

99
00:07:54,170 --> 00:08:01,050
ktry zawiera folder podsumowania transakcji i tam, sprawd podsumowanie. plik js.

100
00:08:01,050 --> 00:08:03,690
Teraz wewntrz komponentu

101
00:08:03,740 --> 00:08:11,070
kasowego, gdzie bd implementowa metod renderowania, gdzie nastpnie oczywicie zwracam jsx, tam chc mie div,

102
00:08:11,080 --> 00:08:17,270
ktry otacza ca moj stron, poniewa bdzie to uywane jako strona z routerem

103
00:08:17,270 --> 00:08:21,940
reagujcym oczywicie w tam, teraz dodam checkoutsummary w ten sposb.

104
00:08:21,950 --> 00:08:24,340
Pamitaj, e checkoutsummary spodziewa si

105
00:08:24,410 --> 00:08:25,250
uzyska skadniki

106
00:08:25,280 --> 00:08:32,630
jako prop, wic powinienem poda tutaj skadniki i oczywicie jest to interesujce pytanie, skd

107
00:08:32,630 --> 00:08:34,860
mog pobra moje skadniki?

108
00:08:34,880 --> 00:08:38,560
Na razie po prostu przejd po obojtny przedmiot, ale oczywicie to co, co zastpi.

109
00:08:38,560 --> 00:08:46,290
Dodam stan do komponentu kasowego, a tam w stanie, dodam

110
00:08:46,360 --> 00:08:54,210
skadniki i skadniki na teraz bd saatkowe, misne, serowe i

111
00:08:54,220 --> 00:09:01,700
bekonowe, a to znowu tylko troch obojtnych danych, ktre wymieni.

112
00:09:01,750 --> 00:09:05,430
Na razie pozwala mi to przej. stan. skadnikw, bdziemy musieli uy routingu, aby

113
00:09:05,440 --> 00:09:12,330
naprawd przekaza skadniki pniej.

114
00:09:12,340 --> 00:09:13,830
Teraz otrzymujemy tutaj checkoutsummary i

115
00:09:13,840 --> 00:09:17,930
checkout container, teraz chc go oczywicie uy, a do tego utworz hardcode do mojej aplikacji. plik js tu

116
00:09:18,160 --> 00:09:26,170
pod budowniczym burgerw.

117
00:09:26,170 --> 00:09:27,540
Tutaj zaimportuj kontener do kasowania z. / Containers

118
00:09:27,760 --> 00:09:38,260
/ Checkout / Checkout, aby zobaczy, jak to wyglda.

119
00:09:38,260 --> 00:09:39,220
Wkrtce zaadujemy i

120
00:09:39,430 --> 00:09:42,700
skierujemy routing, upewnijmy si, e zapisujemy wszystkie pliki i upewniamy si,

121
00:09:42,700 --> 00:09:49,630
e npm start jest uruchomiony, a nastpnie, jeli odwiedzisz swoj stron, otrzymamy bd dotyczcy detektora onclick, ale teraz nie powinno to stanowi problemu.

122
00:09:49,630 --> 00:09:54,500
Oto jak wyglda nasz

123
00:09:54,520 --> 00:09:56,960
komponent checkoutsummary.

124
00:09:56,980 --> 00:09:59,360
Teraz widzimy, e stan

125
00:09:59,590 --> 00:10:05,470
burgera nie jest tak naprawd wyrodkowany, wic powinnimy to naprawi.

126
00:10:05,470 --> 00:10:06,670
W tym celu wrc do podsumowania

127
00:10:06,700 --> 00:10:11,890
checkoutw, w ktrym uyem burgera i jedn z rzeczy, ktre powinienem tutaj poprawi, jest to, e powinienem uy szerokoci 100%, aby wzi ca szeroko komponentu podsumowujcego patno.

128
00:10:11,890 --> 00:10:18,070
Teraz to wyglda znacznie lepiej zarwno na maych urzdzeniach, jak i na wikszych urzdzeniach. Teraz, na maych urzdzeniach, mamy niewielk wysoko, jest to

129
00:10:18,070 --> 00:10:25,080
co, co moemy naprawi, wyczajc

130
00:10:25,080 --> 00:10:29,050
t wysoko, aby nie zawsze ustawia

131
00:10:29,180 --> 00:10:32,020
j na 300px.

132
00:10:32,050 --> 00:10:34,630
Pozbdmy si tutaj take waciwoci

133
00:10:34,750 --> 00:10:37,990
wysokoci, poniewa stylizacja bya troch za dua.

134
00:10:38,120 --> 00:10:40,970
Teraz zdecydowanie moemy to

135
00:10:41,020 --> 00:10:47,020
wykorzysta na urzdzeniach mobilnych i na komputerze, to te

136
00:10:47,020 --> 00:10:47,870
wyglda dobrze. Teraz oczywicie jest

137
00:10:47,880 --> 00:10:55,620
jeszcze troch miejsca, ale potrzebujemy troch miejsca na wiksze hamburgery, wic jest to

138
00:10:56,500 --> 00:11:02,830
celowe, ale najwaniejsze, nad czym teraz chc popracowa, jest to, e nie zawsze to wywietlam, ale zamiast tego powinno to by wywietlane.

139
00:11:02,860 --> 00:11:03,770
Jeli klikn

140
00:11:03,880 --> 00:11:12,130
teraz polecenie, kontynuuj, a nastpnie chc zaadowa do podsumowania podsumowa, zamiast do budowniczego hamburgerw, jest to cel i do tego oczywicie potrzebujemy routingu.

141
00:11:12,150 --> 00:11:15,430
Teraz miao moesz to wdroy na wasn

142
00:11:15,430 --> 00:11:22,510
rk, a nastpnie porwna swoje rozwizanie z moim, ktre zaczn budowa na nastpnym wykadzie.

143
00:11:22,510 --> 00:11:24,790
&nbsp;

