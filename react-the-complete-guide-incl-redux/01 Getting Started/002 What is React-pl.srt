1
00:00:02,170 --> 00:00:05,940
Zacznijmy wic od React; co, dlaczego i jak.

2
00:00:06,160 --> 00:00:08,900
Zacznijmy od pytania "Co to jest React? "pytanie i pozwol

3
00:00:08,980 --> 00:00:15,910
sobie zacytowa fraz z oficjalnej strony React:" React to biblioteka JavaScript do budowania interfejsw Pierwszym wanym punktem jest cz

4
00:00:15,940 --> 00:00:17,110
uytkownika. "To Jest to biblioteka JavaScript.

5
00:00:17,110 --> 00:00:19,910
jest adne stwierdzenie, ale co to znaczy. "Biblioteka JavaScript". Chodzi o tworzenie aplikacji opartych na JavaScript. Reaktywuj aplikacje uruchamiane w przegldarce. Nie dziaaj na serwerze, dziaaj w

6
00:00:19,930 --> 00:00:23,710
przegldarce i to daje nam wielk przewag.

7
00:00:23,740 --> 00:00:25,320
Wszystko dzieje si natychmiast, poniewa dzieje si to w przegldarce uytkownika.

8
00:00:25,330 --> 00:00:32,360
Nie musimy czeka na odpowied serwera, aby uzyska now stron lub renderowa co nowego.

9
00:00:32,380 --> 00:00:36,440
Inn wan czci tego owiadczenia

10
00:00:36,460 --> 00:00:39,980
jest cz "Interfejsy uytkownika". Interfejsy uytkownika s w zasadzie tym, co

11
00:00:40,060 --> 00:00:45,850
widzi uytkownik, a React polega na uywaniu komponentw do ich budowania.

12
00:00:45,850 --> 00:00:47,980
Jeli mylisz o tym, moesz podzieli dowoln stron na komponenty.

13
00:00:47,980 --> 00:00:55,750
Oto przykad (jest to po prostu dowolna

14
00:00:55,750 --> 00:00:58,710
przypadkowa strona internetowa, ktr moemy wymyli). Moemy mie ten obszar nagwka,

15
00:00:58,810 --> 00:01:03,690
pasek boczny, a nastpnie, po prawej, troch treci.

16
00:01:03,700 --> 00:01:04,750
Teraz wyranie moemy podzieli to na komponenty.

17
00:01:04,750 --> 00:01:11,200
Moemy mie komponent Nagwek, skadnik paska bocznego, a nastpnie nagwek w skadniku treci artykuu.

18
00:01:11,200 --> 00:01:13,180
Dlaczego mylenie takie jest wane lub uyteczne?

19
00:01:13,180 --> 00:01:16,330
C, jeli podzielimy nasz aplikacj internetow lub

20
00:01:16,450 --> 00:01:23,660
stron internetow na takie komponenty, moemy budowa te bloki (te komponenty) jako zawarte kawaki kodu.

21
00:01:24,040 --> 00:01:28,480
Nie musimy budowa caej naszej strony jako jednego wikszego obrazu.

22
00:01:28,480 --> 00:01:36,670
Moemy zbudowa wszystkie te mae rzeczy na wasn rk.

23
00:01:36,670 --> 00:01:41,460
To oczywicie uatwia prac w zespoach.

24
00:01:41,560 --> 00:01:45,960
Ale nawet jeli pracujemy sami, uatwi nam to zarzdzanie naszym kodem. Jeli pniej zmienimy nagwek, musimy przej do

25
00:01:46,000 --> 00:01:48,730
tego komponentu i zaktualizowa

26
00:01:48,730 --> 00:01:51,040
go; nie musimy znajdowa

27
00:01:51,130 --> 00:01:57,850
tego kodu w caym kodzie strony.

28
00:01:57,850 --> 00:01:59,150
Moemy rwnie atwo ponownie wykorzysta komponenty. Na przykad, jeli mamy

29
00:01:59,170 --> 00:02:04,810
element listy elementw i chcemy wypisa list tych elementw listy, musimy napisa kod tylko raz, a nastpnie moemy go

30
00:02:04,810 --> 00:02:06,610
atwo ponownie wykorzysta i jest to wane.

31
00:02:06,610 --> 00:02:12,700
Skadniki reaktywne mona uwaa za niestandardowe elementy HTML. W kocu

32
00:02:12,760 --> 00:02:20,070
piszesz tylko niestandardowe elementy HTML. O to chodzi w React i dlatego rozwizuje problem koniecznoci budowania zoonych interfejsw uytkownika z tym, co daje ci HTML i JavaScript; piszc atw w zarzdzaniu,

33
00:02:20,170 --> 00:02:21,350
atw w zarzdzaniu i

34
00:02:21,370 --> 00:02:29,870
wielokrotnego uytku cz tego kodu, ktr moesz wrzuci do swojej aplikacji internetowej, gdziekolwiek bdziesz jej potrzebowa.

35
00:02:29,870 --> 00:02:38,110
Rzumy okiem na kilka przykadw.

36
00:02:38,110 --> 00:02:46,840
&nbsp;

37
00:02:47,110 --> 00:02:51,840
&nbsp;

38
00:02:51,850 --> 00:02:53,460
&nbsp;

