1
00:00:02,260 --> 00:00:07,040
Teraz, gdy ju wiemy, czym waciwie jest React, czas zabrudzi sobie rce.

2
00:00:07,070 --> 00:00:14,900
W tym celu odwiedzam codepen. io. Jest to edytor stron internetowych, ktry pozwala nam

3
00:00:14,960 --> 00:00:20,120
pisa bardzo proste aplikacje HTML, CSS i JavaScript. To naprawd bardziej przypomina plac zabaw.

4
00:00:20,150 --> 00:00:23,570
Tak naprawd nie wykorzystamy tego do budowania prawdziwych projektw w tym kursie.

5
00:00:23,630 --> 00:00:29,730
Wykorzystamy do tego lokaln konfiguracj, ale wspaniale jest zagbi si w React. Wic na codepen. io, moesz klikn Utwrz

6
00:00:29,810 --> 00:00:36,450
i utworzy tak zwany Piro; ktry jest po prostu obszarem roboczym, w ktrym moesz

7
00:00:36,500 --> 00:00:39,330
napisa kod HTML, CSS i JavaScript.

8
00:00:39,350 --> 00:00:44,150
Teraz w tym edytorze masz trzy obszary dla HTML, CSS i JavaScript.

9
00:00:44,150 --> 00:00:47,830
Teraz napiszmy bardzo prost aplikacj (demo), aby zobaczy, jak

10
00:00:47,870 --> 00:00:54,650
piszemy co przy uyciu normalnego HTML, JavaScript i tak dalej, a nastpnie dodawa React; moe mie

11
00:00:54,680 --> 00:00:59,440
atwiejszy czas na stworzenie takiej aplikacji. W tym i czci HTML

12
00:00:59,440 --> 00:01:05,210
tego edytora utworz nowy div. Moesz szybko utworzy to, wpisujc div i

13
00:01:05,210 --> 00:01:06,160
uderzajc kart.

14
00:01:06,170 --> 00:01:08,250
To automatycznie rozszerzy to.

15
00:01:08,540 --> 00:01:12,890
Tam dodam teraz znacznik h1 i po prostu wypisz

16
00:01:12,900 --> 00:01:19,210
Max (moje imi), a poniej akapit, w ktrym mwi Twj wiek: 28 (to jest

17
00:01:19,220 --> 00:01:20,050
mj wiek).

18
00:01:20,060 --> 00:01:22,450
Oczywicie, moesz uy swoich danych tutaj.

19
00:01:22,490 --> 00:01:24,950
Tak wic teraz prowadzi to do

20
00:01:24,980 --> 00:01:27,320
wyjcia poniej; aktualizuje si automatycznie.

21
00:01:27,320 --> 00:01:29,820
Teraz szybko nadajmy tej stylizacji.

22
00:01:29,900 --> 00:01:37,310
Po prostu dajmy temu elementowi klas osoby (nazwa naley do

23
00:01:37,310 --> 00:01:42,260
ciebie) i dodaj klas CSS tej osoby

24
00:01:42,320 --> 00:01:53,150
z normalnym kodem CSS, gdzie podam t granic: 1px brya #ccc; i box-shadow: 0 2px

25
00:01:53,150 --> 00:01:53,520
2px

26
00:01:53,570 --> 00:01:58,840
#ccc; Moe uyjemy nieco janiejszego tutaj #eee

27
00:01:58,880 --> 00:02:00,010
dla granicy.

28
00:02:00,230 --> 00:02:08,240
Dodajmy teraz t szeroko: 200 pikseli i dopenienie: 20 pikseli, a teraz mamy ten wygld

29
00:02:08,240 --> 00:02:11,760
podobny do karty, ktr widzimy poniej.

30
00:02:11,870 --> 00:02:17,990
Teraz jest to karta osoby przechowujca informacje o osobie.

31
00:02:18,290 --> 00:02:27,830
Moemy rwnie ustawi to tak, aby wywietlao: inline-block; i daj mu margines: 10px. Teraz mog to powtrzy i doda

32
00:02:27,830 --> 00:02:36,750
drug osob; zamy, Manu, ktry ma 29 lat (Manu jest moim

33
00:02:36,750 --> 00:02:37,880
koleg).

34
00:02:38,280 --> 00:02:45,930
Mamy teraz te dwie karty osb i mona z atwoci pomyle o tym, e jest to zwyka aplikacja internetowa,

35
00:02:45,930 --> 00:02:52,320
w ktrej publikujesz informacje o uytkownikach lub o zespole za blogiem, ktry tworzysz; co w

36
00:02:52,320 --> 00:02:53,150
tym stylu.

37
00:02:53,310 --> 00:02:56,110
Uywamy tutaj tylko HTML i CSS.

38
00:02:56,250 --> 00:02:59,370
Teraz moemy ju zobaczy jedno ograniczenie (rodzaj).

39
00:02:59,580 --> 00:03:04,150
Zawsze uywamy tego samego kodu HTML tutaj.

40
00:03:04,320 --> 00:03:06,660
Teraz nie jest to zbyt problematyczne.

41
00:03:06,780 --> 00:03:11,610
Bardziej problematyczne byoby, gdybymy zrobili co z kadym z tych fragmentw przy pomocy

42
00:03:12,000 --> 00:03:16,800
JavaScript, ale nawet bez tego moemy myle o tej czci tutaj jako komponencie.

43
00:03:16,860 --> 00:03:23,290
Ta osoba div ma zawsze tak sam struktur; tylko dane w nim zawarte s rne.

44
00:03:23,310 --> 00:03:29,720
Tutaj pojawia si React, ale React najbardziej byszczy, poniewa czymy to rwnie z logik JavaScript.

45
00:03:29,730 --> 00:03:34,430
Mimo to moemy ju uywa React do tworzenia komponentw wielokrotnego uytku.

46
00:03:34,500 --> 00:03:36,300
W tym celu dodajmy React.

47
00:03:36,300 --> 00:03:41,430
Zamierzam nieco zmniejszy t cz CSS iw obszarze JavaScript

48
00:03:41,550 --> 00:03:44,020
najpierw musz zaimportowa React.

49
00:03:44,330 --> 00:03:51,060
Moesz klikn ikon koa zbatego obok kodu JavaScript, a nastpnie pobra lub zaimportowa

50
00:03:51,060 --> 00:03:55,780
niektre zewntrzne biblioteki JavaScript. React jest tak zewntrzn bibliotek.

51
00:03:55,800 --> 00:04:02,880
W rzeczywistoci jest tak popularny, e na CodePen mona przej do rozwijanego menu Quick-add i po prostu

52
00:04:03,000 --> 00:04:04,230
przewin do React,

53
00:04:04,230 --> 00:04:05,440
a to doda.

54
00:04:05,440 --> 00:04:08,030
Teraz tutaj dodaje wersj 15. 6. 1.

55
00:04:08,030 --> 00:04:12,440
Moe si to rni w momencie, w ktrym to przegldasz. W tym kursie omwi wersj

56
00:04:12,450 --> 00:04:18,570
16; wic uczysz si najnowszego Reactu i w lokalnej konfiguracji, ktrej uyjemy w tym

57
00:04:18,570 --> 00:04:21,390
kursie, uyjemy rwnie tej najnowszej wersji React.

58
00:04:21,420 --> 00:04:27,600
Bez obaw, tutaj uywamy starszego, ale w przypadku wersji demonstracyjnej nie ma to adnego znaczenia.

59
00:04:27,600 --> 00:04:30,720
Musimy rwnie szybko doda React DOM.

60
00:04:30,810 --> 00:04:37,860
To kolejny pakiet od zespou React. Reaguj sam w sobie to logika, ktrej potrzebujemy do

61
00:04:37,860 --> 00:04:39,680
stworzenia tych komponentw React.

62
00:04:39,690 --> 00:04:46,530
Mwiem ci, e w React chodzi wycznie o komponenty. React DOM dotyczy renderowania tych

63
00:04:46,530 --> 00:04:50,980
komponentw do rzeczywistego DOM. Po dodaniu tych dwch pakietw jestemy ju prawie na miejscu.

64
00:04:51,030 --> 00:04:57,570
Ale React uywa specjalnej skadni JavaScript i wielu funkcji JavaScript nastpnej generacji. Powrc do tego

65
00:04:57,570 --> 00:05:03,030
pniej w trakcie. Bd mia cay modu, w ktrym przedstawi ci

66
00:05:03,030 --> 00:05:05,410
najwaniejsze funkcje nowej generacji, ktrych uywa React.

67
00:05:05,790 --> 00:05:13,320
Aby odblokowa korzystanie z tych funkcji i tej specjalnej skadni, w menu rozwijanym JavaScript Preprocessor

68
00:05:13,560 --> 00:05:15,170
naley wybra Babel.

69
00:05:15,270 --> 00:05:21,330
Jest to po prostu narzdzie, ktre kompiluje kod JavaScript nowej generacji, ktry tu piszesz, do kodu,

70
00:05:21,420 --> 00:05:25,750
ktry dziaa dobrze w przegldarce; tak, e piszemy kod ze wszystkimi dostpnymi

71
00:05:25,830 --> 00:05:28,450
funkcjami, ale kod wysykowy dziaa w przegldarce.

72
00:05:28,770 --> 00:05:34,680
Dziki temu moesz klikn Zapisz i zamknij, a teraz moemy zacz pisa nasz aplikacj Reakcja tutaj w

73
00:05:34,680 --> 00:05:35,430
sekcji JavaScript.

74
00:05:35,430 --> 00:05:36,690
Wic dlaczego tego nie robimy.

75
00:05:36,990 --> 00:05:43,250
Stwrzmy komponent React, abymy mogli uy wielokrotnego uytku, niestandardowego elementu HTML, ktrego moemy uy zamiast powtarzania

76
00:05:43,410 --> 00:05:49,400
tego kodu HTML tutaj po lewej stronie. W swojej najbardziej podstawowej formie (i dowiesz

77
00:05:49,410 --> 00:05:55,710
si take o innej formie w tym kursie), ale w swojej najbardziej podstawowej formie

78
00:05:55,770 --> 00:06:01,140
skadnik React jest po prostu funkcj. Moemy wic stworzy now funkcj i by moe nazwa t osob.

79
00:06:01,290 --> 00:06:08,880
Upewnij si, e zaczyna si od duego P. Jest to wymagane do poprawnego uycia go w React. Ten komponent Person jest normaln

80
00:06:09,270 --> 00:06:13,100
funkcj, ale musi zwraca kod, ktry faktycznie

81
00:06:13,100 --> 00:06:20,320
chcesz renderowa do DOM i tutaj, React uywa specjalnej skadni, ktra nazywa si JSX.

82
00:06:20,500 --> 00:06:25,680
Uywam nawiasw tutaj, aby mc pisa lub zwraca kod wieloliniowy.

83
00:06:26,040 --> 00:06:32,190
Teraz mam zamiar skopiowa kod tutaj (od lewej) i wklei go do mojego zwrotu tutaj.

84
00:06:32,400 --> 00:06:35,670
I to z pewnoci teraz wyglda dziwnie. Wyglda jak HTML

85
00:06:35,760 --> 00:06:43,860
w JavaScript, ktry nie dziaaby normalnie i nie byby, gdybymy nie dodali Babel tutaj jako preprocesora.

86
00:06:44,520 --> 00:06:50,880
Babel, jeli jest poprawnie skonfigurowany (ktry jest tu automatycznie), pozwala nam uy tej specjalnej skadni, ktra

87
00:06:50,880 --> 00:06:57,550
wyglda jak HTML, ale ktra nie jest, i zagbi si w t skadni w kolejnych moduach kursu.

88
00:06:57,690 --> 00:07:01,420
Nazywa si JSX i to po prostu syntaktyczny cukier.

89
00:07:01,530 --> 00:07:06,060
Za kulisami zostaje to skompilowane do normalnego kodu JavaScript.

90
00:07:06,060 --> 00:07:11,450
Moemy go tutaj uy, aby atwiej byo pisa to, co chcemy renderowa.

91
00:07:11,640 --> 00:07:16,750
Dobrze, wic teraz mamy t funkcj i powiedziaem, e to jest komponent React.

92
00:07:17,010 --> 00:07:21,940
Oczywicie, teraz jest to tylko funkcja. Aby zmieni to w komponent

93
00:07:21,960 --> 00:07:26,220
React, musimy uy React, aby wywietli go na ekranie.

94
00:07:26,460 --> 00:07:33,600
Wic pozbd si mojej osoby po lewej stronie i zamiast tego dodam tutaj nowy div,

95
00:07:33,600 --> 00:07:36,560
a dam mu identyfikator = "p1".

96
00:07:36,710 --> 00:07:39,440
Moesz wybra dowolny ID, ktry chcesz.

97
00:07:39,560 --> 00:07:45,430
Teraz zaimportowany pakiet React jest odpowiedzialny za poprawne przeanalizowanie tego

98
00:07:45,450 --> 00:07:47,450
kodu; ten kod JSX.

99
00:07:47,660 --> 00:07:52,620
Innym zaimportowanym pakietem by ReactDOM (jeli pamitasz).

100
00:07:52,670 --> 00:07:55,910
Zawsze moesz sprawdzi tutaj ikon koa zbatego; react-dom.

101
00:07:56,090 --> 00:08:02,980
To faktycznie eksponuje obiekt, ReactDOM (napisany tak z DOM w stolicach), ktry

102
00:08:02,990 --> 00:08:05,000
ma metod renderowania.

103
00:08:05,000 --> 00:08:14,700
Ta metoda umoliwia renderowanie funkcji JavaScript jako komponentu do rzeczywistego DOM, a traktowanie jej jako komponentu

104
00:08:14,710 --> 00:08:18,960
jest dokadnie tym, co zajmuje si React.

105
00:08:19,460 --> 00:08:23,990
Moemy nastpnie wyrenderowa t funkcj, ale nie przez odwoywanie si

106
00:08:24,080 --> 00:08:32,000
do niej w ten sposb, ale przez przeksztacenie jej w element HTML (ponownie za kulisami, uywajc tej skadni

107
00:08:32,000 --> 00:08:33,620
JSX rozumianej przez React).

108
00:08:34,040 --> 00:08:42,400
Tak wic, pisz to jako mj niestandardowy samozamykajcy si element HTML, a nastpnie renderuj inny argument, w

109
00:08:42,410 --> 00:08:45,220
ktrym okrelam, gdzie renderowa ten element.

110
00:08:45,250 --> 00:08:48,860
Wycigam rk do dokumentu i mog uy selektora

111
00:08:48,860 --> 00:08:56,830
zapyta (przy uyciu normalnego kodu JavaScript), aby wybra dowolny element o id = "p1" (jest to rwnie normalny

112
00:08:56,880 --> 00:08:59,010
kod JavaScript, selektor tego zapytania).

113
00:08:59,510 --> 00:09:09,650
Mwic to, chc powiedzie React, e chc uczyni t funkcj, skadnik Person, w tym miejscu po lewej stronie

114
00:09:09,650 --> 00:09:12,100
i tak si dzieje.

115
00:09:12,320 --> 00:09:19,340
Teraz styl jest tracony, poniewa klasa faktycznie jest sowem kluczowym w JavaScript, wic React zamienia to w className; i jest

116
00:09:19,340 --> 00:09:22,730
to najlepszy dowd, e to wyglda jak HTML, ale

117
00:09:22,760 --> 00:09:23,480
nie jest.

118
00:09:23,540 --> 00:09:30,350
Uywa niestandardowej skadni, ktra w 99% przypadkw przypomina HTML, ale za kulisami jest przeksztacana

119
00:09:30,410 --> 00:09:31,410
w JavaScript.

120
00:09:31,880 --> 00:09:39,800
Teraz widzimy, e znw mamy tutaj klas osobow, Max, traktowan jako komponent niestandardowy, ktry moemy rwnie

121
00:09:39,890 --> 00:09:47,000
zweryfikowa dziki temu, e nasza wewntrzna blokada stylu jest tu zignorowana; poniewa pakujemy to w

122
00:09:47,000 --> 00:09:50,780
niestandardowy element, ktry jest traktowany jako instrukcja blokowa.

123
00:09:50,780 --> 00:09:53,050
Teraz zagbi si w stylizacj

124
00:09:53,120 --> 00:09:58,320
na tym kursie, ale na razie cieszmy si, e mamy tutaj nasz komponent.

125
00:09:58,580 --> 00:10:00,450
Jednak nie nadaje si do wielokrotnego uytku.

126
00:10:00,590 --> 00:10:10,450
Gdybym mia drugi hak w moim HTML tutaj, w mojej czci HTML (powiedzmy id = "p2") i chciaem

127
00:10:10,490 --> 00:10:14,480
renderowa inny komponent (inn osob) musiabym zakodowa

128
00:10:14,780 --> 00:10:19,430
w nim wartoci i w rzeczywistoci utworzy nowy komponent.

129
00:10:19,430 --> 00:10:26,150
Wspania rzecz w React i dlaczego komponenty s tak niesamowite i oszczdzaj nam mnstwo czasu, jest

130
00:10:26,150 --> 00:10:30,060
to, e moemy je skonfigurowa tak dynamicznie, jak tego potrzebujemy.

131
00:10:30,120 --> 00:10:36,920
Wic tutaj, co zrobi, dodam argument do funkcji tej osoby, ktr nazwabym rekwizytami.

132
00:10:36,950 --> 00:10:42,950
Moesz wybra dowoln nazw, ale koncepcja, ktrej uywam, nazywa si rekwizytami. React automatycznie daje mi argument

133
00:10:42,950 --> 00:10:48,830
w funkcji, ktr zamieniem w komponent, z t skadni tutaj (z

134
00:10:48,830 --> 00:10:57,140
kodem Person JSX), a rekwizyty po prostu zawieraj wszystkie atrybuty dodane do mojego wasnego komponentu.

135
00:10:57,140 --> 00:11:00,320
Mogabym wic doda imi = "Max"

136
00:11:00,530 --> 00:11:03,720
i wiek = "28" (jak to).

137
00:11:03,900 --> 00:11:08,820
Jeli to zrobi, teraz moemy wypisa to w naszym komponencie Person.

138
00:11:08,820 --> 00:11:12,130
Musimy tylko dynamicznie uzyska dostp do

139
00:11:12,150 --> 00:11:18,600
tego elementu rekwizytw; ten argument rekwizytw. Wyprowadzamy zawarto dynamiczn w React z nawiasami klamrowymi (otwieranie i

140
00:11:18,600 --> 00:11:19,190
zamykanie) i

141
00:11:19,200 --> 00:11:22,540
tylko jedn par (nie nawiasy klamrowe, tylko jedna para nawiasw klamrowych).

142
00:11:22,860 --> 00:11:30,540
Nastpnie sigamy po rekwizyty. nazw, aby uzyska ten atrybut nazwy, ktry przekazaem i rekwizyty. wiek, by wyprowadzi

143
00:11:30,660 --> 00:11:37,710
waciwo wieku, ktr przeszedem. Teraz uywamy waciwoci (atrybutw), ktre przechodzimy do naszego wasnego komponentu i

144
00:11:37,830 --> 00:11:44,820
to jest cakiem fajne, poniewa teraz, jeli powtrzymy t ReactDOM. wylij wywoanie tutaj dla #

145
00:11:44,820 --> 00:11:48,010
p2 (pamitaj, aby wymieni

146
00:11:48,150 --> 00:11:51,510
to w selektorze drugiego zapytania).

147
00:11:51,900 --> 00:11:59,370
Moemy przekaza rne rekwizyty do tego komponentu, takie jak Manu i 29, a teraz oba komponenty uywaj tej

148
00:11:59,370 --> 00:12:01,010
samej bazy, co wida.

149
00:12:01,110 --> 00:12:07,140
Uywaj tej samej funkcji, ktra jest przeksztacana w komponent przez React. W rzeczywistoci wykorzystujemy koncepcj

150
00:12:07,140 --> 00:12:14,940
komponentu, poniewa napisalimy kod HTML tylko raz i teraz moemy go wielokrotnie

151
00:12:14,940 --> 00:12:15,580
uywa.

152
00:12:15,720 --> 00:12:19,810
Zao si, e widzisz potencja tego w bardzo duych aplikacjach!

153
00:12:19,890 --> 00:12:26,720
Moesz skomponowa ca aplikacj wielokrotnego uytku, a ten komponent nie uywa nawet adnej logiki.

154
00:12:26,850 --> 00:12:32,600
Nie sucha klikni ani takich rzeczy. W aplikacjach (takich jak aplikacja, ktr tworzymy w tym

155
00:12:32,730 --> 00:12:34,160
kursie), oczywicie to zrobimy.

156
00:12:34,200 --> 00:12:41,340
Do naszych komponentw doczymy nasz wasn logik, a nastpnie bdziemy dysponowa maymi, nadajcymi si do wielokrotnego uytku, konserwowanymi

157
00:12:41,340 --> 00:12:48,290
i atwymi do zarzdzania elementami z ich wasn logik, ktr moemy wykorzysta wszdzie do tworzenia niesamowitych aplikacji.

158
00:12:48,300 --> 00:12:54,690
To jest idea React i dlatego jest tak wietna i dlaczego ta koncepcja komponentu jest tak wspaniaa.

159
00:12:54,690 --> 00:12:56,700
Teraz pozwl mi zrobi jeszcze jedn rzecz.

160
00:12:56,790 --> 00:12:59,670
W tej chwili dzwoni do ReactDOM. renderuj dwa razy.

161
00:12:59,670 --> 00:13:04,440
Nie ma w tym nic zego, ale w rzeczywistoci moemy zrobi to troch inaczej.

162
00:13:04,440 --> 00:13:10,050
Moemy mie jeden div tutaj w czci HTML, ktra ma id = "app" (lub id = "root"); to

163
00:13:10,110 --> 00:13:12,640
nie ma znaczenia; wybierz dowolny id twojego wyboru.

164
00:13:12,750 --> 00:13:18,840
Teraz pozbd si wtrnej ReactDOM. renderuj poczenie, a ja dodaj tutaj zmienn.

165
00:13:18,960 --> 00:13:22,520
Ta zmienna nazw nazw aplikacji, ale ta nazwa zaley rwnie od

166
00:13:22,620 --> 00:13:25,920
ciebie, ale ta zmienna bdzie rwnie zawieraa pewien kod JSX.

167
00:13:25,920 --> 00:13:31,060
Wanie zawijam to w nawiasach, eby mc napisa ten kod przez wiele linii.

168
00:13:31,080 --> 00:13:43,710
Teraz, co mog zrobi, mog wypisa mj komponent Person, tak jak wczeniej. Musimy owin go div, poniewa JSX ma wymg

169
00:13:43,710 --> 00:13:50,580
posiadania tylko jednego elementu gwnego; tak ssiadujce elementy nie

170
00:13:50,580 --> 00:13:51,650
s dozwolone.

171
00:13:51,660 --> 00:13:56,430
Bd rwnie mwi o tym w trakcie kursu (s sposoby obejcia tego ograniczenia).

172
00:13:56,460 --> 00:14:04,560
Tak wic teraz dodaem dwa zastosowania komponentu person do zmiennej mojej aplikacji, a teraz po

173
00:14:04,800 --> 00:14:14,070
prostu montuj zmienn aplikacji w miejscu tego elementu za pomoc id = "app", ktr wybieram, dostosowujc selektor zapytania.

174
00:14:14,070 --> 00:14:18,070
Teraz widzisz, otrzymuj dwa elementy obok siebie, poniewa teraz s

175
00:14:18,300 --> 00:14:23,160
renderowane w tym samym haku, w tym samym elemencie, w tym samym

176
00:14:23,160 --> 00:14:32,070
div i tej metodzie tylko majc jeden hak, jeden ReactDOM. renderowanie wywoania, a nastpnie tworzenie aplikacji z

177
00:14:32,070 --> 00:14:38,190
zagniedonymi komponentami jest znacznie bardziej popularnym sposobem tworzenia aplikacji React.

178
00:14:38,220 --> 00:14:43,120
Jest to metoda, ktrej uyj w tym kursie i podczas nadchodzcych wykadw bd mwi o tym w

179
00:14:43,160 --> 00:14:46,910
porwnaniu z alternatyw z wieloma ReactDOM. renderuj poczenia.

180
00:14:46,960 --> 00:14:52,010
Ale pamitaj, to o wiele wicej. Dziki takiemu podejciu tworzone

181
00:14:52,050 --> 00:14:56,060
s tak zwane aplikacje na jedn stron.

182
00:14:56,080 --> 00:14:59,110
To jest nasza pierwsza aplikacja React.

183
00:14:59,130 --> 00:15:01,290
Teraz zanurzmy si gbiej w

184
00:15:01,300 --> 00:15:05,160
React i kontynuujmy kurs i naprawd zacznijmy od React.

