1
00:00:02,210 --> 00:00:09,050
Kiedy mwimy o React, a take o Angular i Vue jako o nucie bocznej, musimy pamita, e

2
00:00:09,140 --> 00:00:14,620
w zasadzie moemy budowa dwa rodzaje aplikacji internetowych z tymi wszystkimi bibliotekami i frameworkami.

3
00:00:14,750 --> 00:00:18,980
Moemy zbudowa aplikacj na jedn stron lub aplikacj wielostronicow.

4
00:00:18,980 --> 00:00:22,400
Jaka jest rnica? W aplikacji na jedn

5
00:00:22,400 --> 00:00:29,540
stron otrzymujemy tylko jeden plik HTML z serwera i otrzymujemy ten plik za pierwszym razem, gdy

6
00:00:29,600 --> 00:00:31,570
uytkownik odwiedza stron; wic po

7
00:00:31,580 --> 00:00:40,430
raz pierwszy uytkownik odwiedza przykad. com. Nastpnie wszystko jest zarzdzane za pomoc JavaScript; z React. Caa strona skada si

8
00:00:40,520 --> 00:00:45,770
z komponentw, ktre s renderowane i obsugiwane przez JavaScript.

9
00:00:46,070 --> 00:00:53,150
Z drugiej strony, w wielostronicowej aplikacji otrzymujemy wiele stron HTML, na ktrych kada strona ma tre

10
00:00:53,150 --> 00:00:54,680
dla danej trasy; podany

11
00:00:54,740 --> 00:01:02,090
adres URL, ktry odwiedzilimy. Na przykad. com i przykad. com / users, otrzymujemy z powrotem dwie

12
00:01:02,090 --> 00:01:02,630
rne strony.

13
00:01:02,630 --> 00:01:04,370
To jest wane.

14
00:01:04,370 --> 00:01:10,550
W przypadku aplikacji wielostronicowych moemy rwnie uywa React, ale tylko do tworzenia

15
00:01:10,580 --> 00:01:17,570
maych widgetw; poszczeglne skadniki, ktre zrzucamy na t stron, ale "caa strona" nie jest

16
00:01:17,570 --> 00:01:18,880
zarzdzana przez React.

17
00:01:18,890 --> 00:01:24,410
Widzimy to rwnie na niektrych stronach, ale obecnie popularniejsze jest podejcie oparte na

18
00:01:24,410 --> 00:01:30,830
jednej stronie, poniewa jeli zarzdzasz ca stron z JavaScriptem, nigdy nie musisz wraca do serwera i

19
00:01:30,860 --> 00:01:32,030
ponownie adowa strony.

20
00:01:32,180 --> 00:01:37,850
Jest to niesamowite dowiadczenie dla uytkownika, poniewa wszystko dzieje si natychmiast. Nawet jeli uytkownik musi poczeka, wywietlasz

21
00:01:37,850 --> 00:01:44,300
spinner lub nadal wywietlasz reaktywn aplikacj internetow; nie wywietlasz tylko strony adujcej, na

22
00:01:44,570 --> 00:01:47,620
ktrej uytkownik nie moe nic zrobi.

23
00:01:48,020 --> 00:01:54,680
Tak wic w aplikacjach z jedn stron nasza strona jest zbudowana

24
00:01:54,680 --> 00:02:03,740
z komponentw, a kady skadnik jest skadnikiem React. Caa strona jest rwnie zarzdzana przez komponent React root, ktry jest wycznie pod kontrol React.

25
00:02:04,040 --> 00:02:06,480
Z drugiej strony, w aplikacji wielostronicowej

26
00:02:06,740 --> 00:02:13,550
moemy rwnie podzieli nasz aplikacj na komponenty teoretyczne, ale w rzeczywistoci dua cz strony bdzie zwykym

27
00:02:13,550 --> 00:02:19,740
kodem HTML i CSS oraz niektrymi widetami, ktre zrzucamy, jak obraz Galeria lub co

28
00:02:19,740 --> 00:02:22,290
takiego jest zarzdzane przez React.

29
00:02:22,430 --> 00:02:30,210
Tak wic caa strona nie znajduje si pod kontrol React. Poszczeglne widety nie znaj si nawzajem.

30
00:02:30,250 --> 00:02:36,080
Dlatego w przypadku pojedynczej strony aplikacji, ktr omwimy w tym kursie,

31
00:02:36,080 --> 00:02:43,070
zwykle mamy tylko jedn ReactDOM. renderuj poczenie. Widziae t metod na poprzednich wykadach, na ktrych

32
00:02:43,070 --> 00:02:44,120
stworzylimy nasz pierwsz aplikacj.

33
00:02:44,120 --> 00:02:49,970
Teraz potrzebujemy tylko jednej ReactDOM. renderuj wywoanie, poniewa mamy tylko jeden skadnik aplikacji root, ktry jest podczony

34
00:02:49,970 --> 00:02:56,090
do DOM i ktry obsuguje wszystkie inne komponenty React. W aplikacji wielostronicowej zwykle nazywamy ReactDOM. renderuj czciej, aby

35
00:02:56,090 --> 00:03:00,490
renderowa nasze rne komponenty w rnych miejscach aplikacji.

36
00:03:00,530 --> 00:03:06,230
Widziae ten ReactDOM. render pozwala wybra miejsce w kodzie

37
00:03:06,230 --> 00:03:13,220
HTML, w ktrym chcesz renderowa swoj aplikacj. W zwizku z tym masz te widety, ktre nie znaj si nawzajem.

38
00:03:13,220 --> 00:03:15,880
Teraz moesz zbudowa tak aplikacj, a kod

39
00:03:15,980 --> 00:03:18,950
React, ktry napiszesz, nie bdzie si rni.

40
00:03:18,980 --> 00:03:21,120
Ten kurs obejmuje oba te zagadnienia,

41
00:03:21,260 --> 00:03:27,260
ale skupi si na przypadku pojedynczej strony aplikacji, poniewa pozwala nam to rwnie korzysta z niektrych bibliotek,

42
00:03:27,260 --> 00:03:28,750
takich jak router React.

43
00:03:28,820 --> 00:03:34,500
Jest to najpopularniejszy sposb tworzenia aplikacji internetowych w tych dniach, a take podejcie, ktre

44
00:03:34,550 --> 00:03:36,230
mog ci tylko poleci.

