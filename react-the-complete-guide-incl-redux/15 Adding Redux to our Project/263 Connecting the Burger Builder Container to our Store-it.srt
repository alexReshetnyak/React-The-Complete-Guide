1
00:00:02,250 --> 00:00:06,730
Con le loro idee sono finiti almeno per quanto riguarda gli ingredienti.

2
00:00:07,080 --> 00:00:11,310
Colleghiamo una ciotola o un contenitore per hamburger al nostro negozio.

3
00:00:11,400 --> 00:00:16,890
Abbiamo gi installato il negozio qui nei prossimi tre anni, superando due fornitori e avvolto tutto

4
00:00:16,890 --> 00:00:18,060
con il fornitore.

5
00:00:18,270 --> 00:00:22,280
Quindi ora  il momento di lavorare sul bowler di hamburger per ricevere quei dati l fuori.

6
00:00:22,680 --> 00:00:24,230
E impari come funziona.

7
00:00:24,240 --> 00:00:26,870
Funziona con la funzione connectome.

8
00:00:26,910 --> 00:00:29,980
Importiamo da re-act redux.

9
00:00:30,030 --> 00:00:38,480
Quindi importiamo i collegamenti da l da re-act redux come questo e con quell'aggiunta di importazione lasciamoci avvolgere

10
00:00:38,570 --> 00:00:40,650
con la nostra esportazione.

11
00:00:40,730 --> 00:00:47,980
Per essere precisi, non affrettiamoci, raggruppiamo semplicemente il dispiegamento della mappa con gli oggetti di scena

12
00:00:47,990 --> 00:00:52,860
e gli stati delle mappe, con Constance e Propone Berger Boulder.

13
00:00:53,180 --> 00:01:01,940
Ma qui ci troviamo di fronte a un problema in cui abbiamo gi un componente di ordine superiore che avvolge la nostra esportazione con il componente di

14
00:01:01,970 --> 00:01:05,070
ordine elevato del gestore degli errori che abbiamo impostato qui.

15
00:01:05,570 --> 00:01:07,500
Beh, in realt questo non  un problema.

16
00:01:07,520 --> 00:01:11,950
Puoi avere tanti componenti di ordine superiore li come vuoi.

17
00:01:12,170 --> 00:01:18,320
Alla fine, ci che Connect far sar semplicemente impostare alcuni oggetti di scena sul componente che sta avvolgendo.

18
00:01:18,620 --> 00:01:25,280
Quindi, a patto che si passino questi oggetti di scena nei propri componenti di ordine superiore, questo dovrebbe funzionare

19
00:01:25,290 --> 00:01:32,210
bene perch qualsiasi oggetto di scena impostato dai nostri componenti di ordine superiore che potrebbero REPP questo sar comunque trasmesso

20
00:01:32,210 --> 00:01:32,790
bene.

21
00:01:32,960 --> 00:01:35,690
Quindi questo non dovrebbe rappresentare un problema.

22
00:01:35,930 --> 00:01:43,370
entriamo nella mappa degli hamburger di Boler per gli oggetti di scena e lo stato delle mappe per

23
00:01:43,370 --> 00:01:53,840
gli oggetti di scena, invertir l'ordine perch l'ho fatto prima, quindi Conn's mappa stato per prop's ora stato mappa che prop's detiene una funzione che

24
00:01:53,840 --> 00:02:02,000
riceve automaticamente lo stato e che restituisce un oggetto javascript dove definiamo quale propriet deve contenere quale Sly dello stato.

25
00:02:02,000 --> 00:02:08,270
Quindi vediamo se funziona, torniamo a Burger Bolar e trattiamo i nostri Q Constans che

26
00:02:08,270 --> 00:02:10,540
per trovare quali oggetti di scena

27
00:02:10,880 --> 00:02:19,280
Quindi qui potremmo creare gli ion G per gli ingredienti e assegnare gli ingredienti di stato proprio cos per ottenere

28
00:02:19,280 --> 00:02:26,480
l'accesso a quella propriet ingrediente nel nostro stato e spediti a prop's ora riceve una funzione o

29
00:02:26,480 --> 00:02:30,840
mantiene una funzione che riceve la funzione di invio come argomento.

30
00:02:31,250 --> 00:02:35,360
E poi tutti gli oggetti ritorni con forse le mappature delle funzioni.

31
00:02:35,360 --> 00:02:43,100
In questo caso e qui voglio dover inviare fondamentalmente o due oggetti di scena di Shabelle prop che

32
00:02:43,100 --> 00:02:44,480
possono essere attivati.

33
00:02:44,480 --> 00:02:53,000
Avr un ingrediente per aggiungere una propriet e questo nome di propriet come questo qui ovviamente dipende totalmente

34
00:02:53,000 --> 00:02:54,130
da te.

35
00:02:54,620 --> 00:03:02,690
Quindi qui vieni aggiunto manterr la funzione anonima dove eseguir il dispatch e passer una striscia di canale Optik dove

36
00:03:02,690 --> 00:03:09,470
il tipo dovrebbe essere il mio tipo di azione ADD Ingredion e per questo mi sposter

37
00:03:09,470 --> 00:03:18,020
fino al file e importer tutto come azione tipi da questa cartella tipi di azione che possiamo trovare due livelli in

38
00:03:18,020 --> 00:03:21,790
alto nella cartella del negozio e le azioni cadono.

39
00:03:21,790 --> 00:03:24,440
Qui  dove sono archiviati i tipi di azione.

40
00:03:24,440 --> 00:03:26,600
Quindi ora  questo che firmer qui.

41
00:03:26,600 --> 00:03:29,960
Tipo  tipi di azione aggiungere ingrediente.

42
00:03:30,440 --> 00:03:37,820
E ora se guardiamo il riduttore e probabilmente ricordate tutti un ingrediente, proprio come

43
00:03:37,820 --> 00:03:40,790
rimuovere l'ingrediente richiede un carico utile.

44
00:03:40,850 --> 00:03:45,070
Usiamo il nome dell'ingrediente l e lo accediamo all'azione.

45
00:03:45,260 --> 00:03:49,470
Quindi dobbiamo passare il nome dell'ingrediente insieme al tipo.

46
00:03:49,480 --> 00:03:57,730
Quindi, nel costruttore di hamburger qui il tipo  una cosa, ma imposter anche il mio nome ingrediente propriet

47
00:03:57,760 --> 00:03:59,950
azione e il nome dell'ingrediente.

48
00:03:59,950 --> 00:04:06,480
Ora  qualcosa che mi aspetto di ottenere qui in questa funzione, quindi chiamer semplicemente il nome dello ione qui.

49
00:04:06,490 --> 00:04:12,880
Puoi nominare questo argomento come preferisci, e poi firmer qui come valore e

50
00:04:12,910 --> 00:04:21,490
poi duplicher questa propriet e aggiunger la mia propriet rimossa da Ingredion, dove si incontra anche il nome

51
00:04:21,490 --> 00:04:22,110
dell'ingrediente.

52
00:04:22,210 --> 00:04:30,520
Ma poi qui ho inviato l'azione rimuovi ingrediente ma continuo a passare il nome del mio ingrediente.

53
00:04:30,520 --> 00:04:37,630
Ora abbiamo queste due costanti con lo stato della mappa due puntelli e mappiamo questa patch con due oggetti di scena

54
00:04:37,630 --> 00:04:39,860
che possiamo collegare al nostro redux.

55
00:04:40,210 --> 00:04:47,470
mappe agli oggetti di scena e mappiamo questa patch a prop's come argomenti e quindi questa  tutta la larghezza

56
00:04:47,470 --> 00:04:55,120
dell'errore che il gestore degli handler chiama qui come argomento alla funzione function disconnect call ci restituisce con questa configurazione.

57
00:04:55,120 --> 00:04:59,470
Quindi aggiungiamo connect lo abbiamo gi importato e passiamo gli stati delle

58
00:04:59,470 --> 00:05:05,100
Ora abbiamo il nostro contenitore Bergere Boulder collegato al negozio.

59
00:05:05,320 --> 00:05:12,430
Usiamo ora tutti questi oggetti di scena messi a disposizione nell'hamburger Bergere o come me e lei  ovunque

60
00:05:12,430 --> 00:05:16,480
dove usiamo gli ingredienti che ora vogliamo usare le nostre energie.

61
00:05:16,750 --> 00:05:22,120
E rimuover gli ingredienti da qui per rendere davvero chiaro che non stiamo usando lo stato locale

62
00:05:22,120 --> 00:05:26,800
per gli ingredienti pi per un prezzo che ci sar in questo momento almeno.

63
00:05:26,800 --> 00:05:33,940
Quindi sistemiamo questo o impostiamo un ingrediente e rimuoviamo il gestore degli ingredienti.

64
00:05:33,940 --> 00:05:36,890
Dovremmo essere in grado di rimuoverlo completamente.

65
00:05:36,910 --> 00:05:41,760
Ma lo lascer qui da quando in seguito hai scelto un codice aggiornato del prezzo totale da l.

66
00:05:41,890 --> 00:05:44,000
Ma non vogliamo pi eseguirli.

67
00:05:44,290 --> 00:05:51,390
Invece, se scorriamo verso il metodo di rendering ovunque accediamo a questi ingredienti di stato, vogliamo

68
00:05:51,400 --> 00:05:54,240
invece utilizzare queste energie di props.

69
00:05:54,490 --> 00:05:57,450
Ci sono propriet che impostiamo nello stato della mappa.

70
00:05:57,520 --> 00:06:05,580
Puntelli qui quindi questo  quello che vogliamo usare un metodo di rendering di un'ora questo oggetti di scena Algy's Invece

71
00:06:05,610 --> 00:06:09,270
di errori di stato degli stati e cos via.

72
00:06:09,300 --> 00:06:11,270
Rimarremo in contatto per ora.

73
00:06:11,580 --> 00:06:16,920
Ma qui, ad esempio, gli ingredienti di stato affermano questo e.

74
00:06:17,300 --> 00:06:20,280
E poi eccoci qui a Bergere dove siamo ingredienti del passato.

75
00:06:20,280 --> 00:06:21,050
Indovina un po.

76
00:06:21,120 --> 00:06:23,430
Sono questi oggetti di scena I-e.

77
00:06:23,930 --> 00:06:25,410
E cos via.

78
00:06:25,640 --> 00:06:32,300
Ora sostituir prima di tutto tutti gli ingredienti prima di lavorare sull'aggiunta verde e rimuovere i puntelli qui.

79
00:06:32,360 --> 00:06:34,260
Lasciami andare qui.

80
00:06:34,260 --> 00:06:40,700
Tutto il business  di scena I Angie's e dovrebbe essere cos.

81
00:06:40,700 --> 00:06:44,990
Ora lavoriamo sull'aggiunta di ingrediente e rimuoviamo i gestori degli ingredienti.

82
00:06:45,320 --> 00:06:46,980
Non lo chiamiamo pi.

83
00:06:47,090 --> 00:06:57,770
Invece eseguiamo questi oggetti di scena sull'ingrediente aggiunto e questo ingrediente sull'ingrediente rimosso, ma entrambe le funzioni della fine hanno bisogno

84
00:06:57,770 --> 00:06:59,330
di un argomento.

85
00:06:59,570 --> 00:07:06,290
Se scorriamo verso la nostra mappa questa pagina due puntelli costanti vediamo che la funzione  memorizzata in questi oggetti

86
00:07:06,290 --> 00:07:09,540
di scena o passata su questi oggetti di scena.

87
00:07:09,740 --> 00:07:15,250
Entrambi prendono il nome dell'ingrediente come argomento per passarci qui.

88
00:07:15,260 --> 00:07:18,540
Diamo prima di tutto un'occhiata al nostro componente di controlli Boltt.

89
00:07:18,650 --> 00:07:24,620
Se scorriamo fino ai nostri componenti e apriamo la cartella dei controlli di bulloni e passiamo al

90
00:07:25,190 --> 00:07:33,550
componente di controllo bulk, vediamo che abbiamo gi passato il tipo di controllo qui come argomento per i metodi di aggiunta e rimozione

91
00:07:33,560 --> 00:07:34,230
dell'ingrediente aggiunto.

92
00:07:34,280 --> 00:07:40,490
Quindi al metodo che viene passato attraverso questi oggetti di scena e questo  il metodo che abbiamo

93
00:07:40,490 --> 00:07:41,730
appena creato qui.

94
00:07:42,260 --> 00:07:48,830
Questo significa solo che dobbiamo controllare se il tipo di controllo  esattamente quello che stiamo cercando ed 

95
00:07:48,860 --> 00:07:53,860
perch il tipo di controllo  questa parte qui tipo insalata di pancetta e carne.

96
00:07:54,020 --> 00:08:01,850
che usiamo come propriet nel nostro rivestimento per riduttori e, naturalmente, dovremmo assicurarci che questo sia uguale.

97
00:08:01,850 --> 00:08:05,330
E questo ha lo stesso formato dei nomi

98
00:08:05,330 --> 00:08:11,600
Ovviamente potresti andare cos lontano e rifattorizzare la tua applicazione per prendere lo stato ingrediente qui i

99
00:08:11,600 --> 00:08:16,600
nomi delle propriet per creare i controlli e l'hamburger pi audace in controlli audaci.

100
00:08:16,750 --> 00:08:23,510
Componente qui ma lo lasceremo cos com' e ci stiamo solo assicurando che stiamo trasmettendo il

101
00:08:23,810 --> 00:08:30,010
valore corretto ai nostri dispatcher d'azione e lo facciamo salvando quindi tutti i file.

102
00:08:30,310 --> 00:08:31,930
E ora proviamo questo.

103
00:08:32,030 --> 00:08:39,560
Tornando alla nostra applicazione in esecuzione, aggiungiamo alcuni ingredienti a quel burger come se lo vendessimo con formaggio

104
00:08:39,890 --> 00:08:42,950
al bacon o carne e tutto funziona perfettamente.

105
00:08:43,280 --> 00:08:51,230
Ora ovviamente il prezzo non viene aggiornato qui perch quello che abbiamo qui  che non cambiamo pi lo

106
00:08:51,230 --> 00:08:53,630
stato dei prezzi in qualsiasi momento.

107
00:08:53,790 --> 00:08:55,960
Ci penseremo presto.

108
00:08:56,000 --> 00:08:57,740
Il resto funziona comunque.

109
00:08:58,050 --> 00:09:02,290
Bene, anche il pulsante Ordina ora non sta diventando attivo.

110
00:09:03,120 --> 00:09:05,750
Diamo un'occhiata a quel pulsante ora ordine quindi.

111
00:09:05,880 --> 00:09:11,970
Il motivo per cui non sta diventando attivo  che alla fine sono controllati i fruitori della propriet

112
00:09:11,970 --> 00:09:12,740
acquistabile qui.

113
00:09:12,900 --> 00:09:18,000
Abbiamo dato un'occhiata a questo prima in questo pulsante Marchal Sodhi per ordinare ora.

114
00:09:18,000 --> 00:09:23,580
Queste sono due cose che dovremo lavorare sugli ingredienti per conto loro, ma stanno gi lavorando

115
00:09:23,630 --> 00:09:24,990
alla grande nell'hamburger Boler.

116
00:09:25,170 --> 00:09:30,510
Continuiamo su questa strada e assicuriamoci che il pulsante per l'ordine ora funzioni e che aggiorniamo

117
00:09:30,510 --> 00:09:31,230
il prezzo.

