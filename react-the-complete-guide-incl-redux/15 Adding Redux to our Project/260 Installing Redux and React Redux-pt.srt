1
00:00:02,170 --> 00:00:10,030
Ento, vamos comear por instalar redox e re-agir redux, ento eu vou sair do processo de inicializao do

2
00:00:10,030 --> 00:00:19,870
NPM e simplesmente executar e PM instalar dash dash salvar ler X e reagir ler X aperte Enter para instalar esses dois

3
00:00:19,870 --> 00:00:26,590
pacotes para que possamos us-los aqui e pode acessar nossa loja redux na aplicao re-act.

4
00:00:26,860 --> 00:00:28,060
Uma vez terminado.

5
00:00:28,060 --> 00:00:35,680
Voc pode, naturalmente, recomear o seu processo ousado e se desenvolver com o NPM comeando a ver seu

6
00:00:35,680 --> 00:00:36,740
aplicativo adorvel novamente.

7
00:00:37,000 --> 00:00:46,240
Agora, com os dois instalados,  claro, sobre o tempo para criar novamente o nosso redutor de lojas e reaes para

8
00:00:46,240 --> 00:00:46,900
isso.

9
00:00:46,930 --> 00:00:53,570
Novamente re-entrevista uma pasta diretamente na pasta de origem, que  chamada de loja e l.

10
00:00:53,620 --> 00:00:55,570
Vou adicionar um novo redutor de queda.

11
00:00:55,620 --> 00:00:56,440
J. S. E, claro, aes.

12
00:00:56,560 --> 00:00:58,080
J. S. porque eu quero exportar minhas aes como constantes.

13
00:00:58,130 --> 00:01:02,460
A fila novamente me

14
00:01:02,580 --> 00:01:09,640
impede de criar erros ou a introduo de alguns erros apenas porque eu tento acessar strings de cdigo em vrios arquivos.

15
00:01:09,640 --> 00:01:10,890
Portanto, agora vamos comear com os tipos de ao bsicos que provavelmente precisaremos se comearmos com o hambrguer.

16
00:01:11,580 --> 00:01:19,970
E realmente a funcionalidade principal de construir esse hambrguer.

17
00:01:20,100 --> 00:01:23,420
Podemos mergulhar na tigela ou recipiente do hamburguer e dar uma olhada nos mtodos que criamos l.

18
00:01:23,610 --> 00:01:29,450
Ns conseguimos um manipulador de ingrediente e ns conseguimos um manipulador de ingredientes removido.

19
00:01:29,520 --> 00:01:34,210
Estes,  claro, so as duas principais coisas que

20
00:01:34,320 --> 00:01:39,990
adicionamos ingredientes e eliminamos os ingredientes, ento, provavelmente, queremos aes apropriadas.

21
00:01:39,990 --> 00:01:42,180
Exporte um conceito que nomeie ingredientes e atribua uma string com o mesmo valor.

22
00:01:42,510 --> 00:01:49,810
Adicione ingredientes e, em seguida, duplique para criar as respectivas aes para remover ingredientes.

23
00:01:49,940 --> 00:01:58,570
Na verdade, podemos nome-lo.

24
00:01:58,580 --> 00:01:59,520
Adicione ingrediente.

25
00:01:59,540 --> 00:02:00,680
Remova um ingrediente porque nunca adicionamos mais de um ou removemos mais de um por vez.

26
00:02:00,710 --> 00:02:05,620
Ento, conseguimos essas duas aes e antes de adicionar mais vamos comear com o thius vamos construir

27
00:02:05,900 --> 00:02:11,280
a loja com o DS e, em seguida, vamos adicionar mais e mais funcionalidades para as prximas palestras.

28
00:02:11,280 --> 00:02:16,220
Em seguida, vamos implementar ou comear a implementar nosso redutor.

29
00:02:16,250 --> 00:02:20,850
L, vou importar tudo como tipos de ao dessas aes.

30
00:02:20,900 --> 00:02:26,840
Arquivo JS.

31
00:02:26,840 --> 00:02:28,270
parecer inicial e, ento,

32
00:02:28,520 --> 00:02:35,150
provavelmente queremos ter o mesmo estado que j usamos no hamburguer Boler, se nos deslocarmos para cima.

33
00:02:35,150 --> 00:02:40,400
Ento, eu criarei um estado inicial constante para definir o que meu estado deve

34
00:02:40,400 --> 00:02:41,030
Ns somos, naturalmente, muitos campos agora.

35
00:02:41,140 --> 00:02:43,220
Eu disse que queria comear com ingredientes no preo total.

36
00:02:43,220 --> 00:02:46,330
Ento, copie esses dois e mova-os para o redutor.

37
00:02:46,330 --> 00:02:50,930
Ento, agora temos ingredientes e preo total para um estado inicial.

38
00:02:50,930 --> 00:02:54,600
Ento, podemos criar a prpria funo do redutor, simplesmente pode ser

39
00:02:54,950 --> 00:03:02,750
armazenado em um constante redutor nomeado usando a sintaxe de seis funes, onde chegamos ao estado que est configurado para o estado inicial.

40
00:03:02,750 --> 00:03:07,810
que executamos e, em seguida, adicione tambm a ao que todos recebero aqui.

41
00:03:07,970 --> 00:03:14,300
Bem, inicialmente no caso de voc ficar indefinido como um estado que fazemos com a primeira vez

42
00:03:14,420 --> 00:03:18,730
Agora, no final de tudo.

43
00:03:18,870 --> 00:03:20,830
 claro que tambm quero exportar o meu

44
00:03:20,850 --> 00:03:27,640
redutor como o padro de queda agora,  claro, teremos de preencher esse produtor com alguma vida, o far na prxima palestra antes de fazer isso.

45
00:03:27,640 --> 00:03:33,370
Vamos configurar a gesto do estado no ndice G-S

46
00:03:33,370 --> 00:03:40,510
queda, onde envolvemos todo o nosso aplicativo e j vemos algo interessante.

47
00:03:40,510 --> 00:03:42,700
Ns j envolvemos nosso aplicativo aqui com o roteador do navegador.

48
00:03:42,700 --> 00:03:47,350
Isso, claro, pode levar  confuso ou talvez seja algo que no examinamos antes.

49
00:03:47,350 --> 00:03:54,160
Onde devemos agora adicionar nosso componente de provedor de re-agir redux dentro do roteador do navegador ou fora.

50
00:03:54,160 --> 00:04:03,360
Vamos configurar isso para gabber na prxima palestra.

51
00:04:03,370 --> 00:04:06,640
&nbsp;

