1
00:00:02,170 --> 00:00:10,030
Comencemos por instalar redox y reactive redux, as que dejo el proceso de inicio de NPM y o simplemente

2
00:00:10,030 --> 00:00:19,870
ejecuto e instalo PM. Guin de dash save lea X y reaccione read X presione enter para instalar estos dos paquetes para que

3
00:00:19,870 --> 00:00:26,590
podamos usarlos aqu y puede acceder cmodamente a nuestra tienda redux en la aplicacin de reactivacin.

4
00:00:26,860 --> 00:00:28,060
Una vez que est terminado.

5
00:00:28,060 --> 00:00:35,680
Por supuesto, puede reiniciar su proceso audaz y desarrollar el desvelador con NPM para comenzar a ver su

6
00:00:35,680 --> 00:00:36,740
encantadora aplicacin nuevamente.

7
00:00:37,000 --> 00:00:46,240
Ahora que ambos estn instalados, es hora de volver a crear nuestro reductor de la tienda y las reacciones para

8
00:00:46,240 --> 00:00:46,900
eso.

9
00:00:46,930 --> 00:00:53,570
Vuelve a entrevistar una carpeta directamente en la carpeta fuente que se llama store y all.

10
00:00:53,620 --> 00:00:55,570
Agregar un nuevo reductor de otoo.

11
00:00:55,620 --> 00:00:56,440
J. S. Y por supuesto acciones.

12
00:00:56,560 --> 00:00:58,080
J. S. porque quiero exportar mis acciones como constantes.

13
00:00:58,130 --> 00:01:02,460
Queue nuevamente me

14
00:01:02,580 --> 00:01:09,640
impide escribir mal o introducir algunos errores solo porque trato de codificar cadenas en varios archivos.

15
00:01:09,640 --> 00:01:10,890
Entonces, comencemos con los tipos bsicos de accin que probablemente necesitaremos si comenzamos con la hamburguesa.

16
00:01:11,580 --> 00:01:19,970
Y realmente la funcionalidad central de construir esa hamburguesa.

17
00:01:20,100 --> 00:01:23,420
Podemos sumergirnos en el cuenco o recipiente de hamburguesas y echar un vistazo a los mtodos que creamos all.

18
00:01:23,610 --> 00:01:29,450
Tenemos un manejador de ingredientes y obtenemos un manejador de ingredientes eliminado.

19
00:01:29,520 --> 00:01:34,210
Por supuesto, estas son las dos cosas principales que agregamos

20
00:01:34,320 --> 00:01:39,990
ingredientes y quitamos los ingredientes, por lo que probablemente deseemos acciones apropiadas.

21
00:01:39,990 --> 00:01:42,180
Exporta un concepto que nombrar agregar ingredientes y asignar una cadena con el mismo valor.

22
00:01:42,510 --> 00:01:49,810
Agregue los ingredientes y luego duplquelos para crear tambin la accin respectiva para eliminar los ingredientes.

23
00:01:49,940 --> 00:01:58,570
En realidad podemos nombrarlo.

24
00:01:58,580 --> 00:01:59,520
Agregar ingrediente

25
00:01:59,540 --> 00:02:00,680
Elimine un ingrediente porque nunca agregamos ms de uno o eliminamos ms de uno por vez.

26
00:02:00,710 --> 00:02:05,620
As que tenemos estas dos acciones y antes de agregar ms comencemos con Thius

27
00:02:05,900 --> 00:02:11,280
construyamos la tienda con DS y luego agreguemos ms y ms funcionalidades a las prximas conferencias.

28
00:02:11,280 --> 00:02:16,220
A continuacin, implementemos o comencemos a implementar nuestro reductor.

29
00:02:16,250 --> 00:02:20,850
All importar todo como tipos de accin de estas acciones.

30
00:02:20,900 --> 00:02:26,840
Archivo JS.

31
00:02:26,840 --> 00:02:28,270
y luego probablemente deseemos

32
00:02:28,520 --> 00:02:35,150
tener el mismo estado que ya usamos en la hamburguesa de Boler all si nos desplazamos hacia arriba.

33
00:02:35,150 --> 00:02:40,400
Luego crear un estado inicial constante para definir cmo se vera mi estado inicialmente

34
00:02:40,400 --> 00:02:41,030
Por supuesto, ahora tenemos muchos campos.

35
00:02:41,140 --> 00:02:43,220
Dije que quiero comenzar con ingredientes en el precio total.

36
00:02:43,220 --> 00:02:46,330
As que copiemos estos dos y muvalos al reductor.

37
00:02:46,330 --> 00:02:50,930
Entonces ahora tenemos los ingredientes y el precio total all para un estado inicial.

38
00:02:50,930 --> 00:02:54,600
Entonces podemos crear la funcin de reductor en s misma,

39
00:02:54,950 --> 00:03:02,750
simplemente se puede almacenar en una constante llamada reductor usando la sintaxis de seis funciones, donde tenemos que establecer el estado inicial.

40
00:03:02,750 --> 00:03:07,810
que se ejecutan y luego agreguemos la accin que todos vamos a recibir aqu.

41
00:03:07,970 --> 00:03:14,300
Bueno, inicialmente en caso de que no se definan como un estado que hacemos con la primera vez

42
00:03:14,420 --> 00:03:18,730
Ahora al final de todo.

43
00:03:18,870 --> 00:03:20,830
Por supuesto, tambin quiero exportar mi reductor como

44
00:03:20,850 --> 00:03:27,640
el valor predeterminado de cada. Ahora, por supuesto, tendremos que llenar este productor con algo de vida, lo haremos en la prxima conferencia antes de hacerlo.

45
00:03:27,640 --> 00:03:33,370
Vamos a configurar la gestin del estado en el ndice

46
00:03:33,370 --> 00:03:40,510
G-S fall donde envolvemos toda nuestra aplicacin y all ya vemos algo interesante.

47
00:03:40,510 --> 00:03:42,700
Ya envolvemos nuestra aplicacin aqu con el enrutador del navegador.

48
00:03:42,700 --> 00:03:47,350
Eso, por supuesto, puede llevar a la confusin o tal vez es algo que no hemos visto antes.

49
00:03:47,350 --> 00:03:54,160
Dnde deberamos ahora agregar nuestro componente de proveedor de rejuvenecer dentro del enrutador del navegador o fuera?

50
00:03:54,160 --> 00:04:03,360
Vamos a configurar esto para gabber en la prxima conferencia.

51
00:04:03,370 --> 00:04:06,640
&nbsp;

