1
00:00:02,270 --> 00:00:07,340
Dejemos el mundo de los componentes de mayor orden por ahora y regresemos a nuestro proyecto de

2
00:00:07,340 --> 00:00:12,980
demostracin y sumrjase en algunas de las cosas tiles que debe tener en cuenta al construir aplicaciones de reactivacin,

3
00:00:12,980 --> 00:00:14,760
ya que pueden volverse importantes.

4
00:00:15,110 --> 00:00:20,780
Una importante conclusin que quiero que tengas es con respecto a dicho estado.

5
00:00:21,020 --> 00:00:26,570
Lo llamamos mucho en nuestra aplicacin en el Rapto como una locura, sin embargo, debido a la forma

6
00:00:26,570 --> 00:00:30,440
en que debe usar el estado, utilcelo solo en unos pocos componentes seleccionados.

7
00:00:30,590 --> 00:00:33,220
Y all siempre lo usamos de una manera inmutable.

8
00:00:33,230 --> 00:00:39,410
mudemos la original y luego mutezcamos esta copia y le asignamos cambiar la copia como un nuevo estado.

9
00:00:39,410 --> 00:00:45,200
Entonces, si asignamos una matriz de personas, creamos una copia de esa matriz para que no

10
00:00:45,410 --> 00:00:47,660
As es exactamente como deberas hacerlo.

11
00:00:47,870 --> 00:00:54,560
Ahora a veces tienes una actualizacin de estado que depende del estado anterior y es un poco ms trivial.

12
00:00:54,890 --> 00:00:59,060
Digamos que queremos tener un contador sobre la frecuencia con la que hacemos clic en el botn de alternar.

13
00:00:59,090 --> 00:01:00,560
Entonces, se habla del controlador de una persona.

14
00:01:00,560 --> 00:01:06,890
Con qu frecuencia se ejecut bsicamente en nuestro estado, que ahora iniciamos en el constructor desde que all

15
00:01:06,890 --> 00:01:09,700
se imparten las clases de ciclo de vida.

16
00:01:09,740 --> 00:01:15,110
Es posible que tengamos un contador de clics alternar que es 0 inicialmente.

17
00:01:15,170 --> 00:01:24,940
Ahora en nuestro controlador de alternar aqu llamamos estado establecido y all ahora tambin, por supuesto, haremos clic en alternar actualizacin y el

18
00:01:24,950 --> 00:01:32,030
valor del curso depende del valor anterior de alternar clic porque el chip o el valor

19
00:01:32,030 --> 00:01:33,350
anterior ms uno.

20
00:01:33,620 --> 00:01:40,430
Entonces, podramos decir que alternar entre estado y ms uno es el nuevo estado.

21
00:01:40,430 --> 00:01:46,820
Ahora si guardamos esto para ver si ese es el caso, podemos usar las herramientas de desarrollador de Riak.

22
00:01:46,820 --> 00:01:54,110
As que abrir las herramientas de desarrollador de reactivas en mis herramientas de desarrollo de Chrome y ahora ir al componente de la aplicacin

23
00:01:54,530 --> 00:01:58,270
donde puedo inspeccionar el objetivo de estado en el que hizo clic 0.

24
00:01:58,280 --> 00:02:01,190
Ahora es 1 2 3.

25
00:02:01,220 --> 00:02:07,940
Est funcionando correctamente y todava funciona de manera incorrecta porque dicho estado es en realidad un

26
00:02:07,940 --> 00:02:17,630
mtodo ejecutado de forma asncrona por reactivo, lo que significa que no puede confiar en que este estado se llame Dentro del estado

27
00:02:17,630 --> 00:02:24,260
dicho para reflejar realmente la ltima versin del estado si llam dicho estado en otro lugar

28
00:02:24,260 --> 00:02:25,530
en la aplicacin.

29
00:02:25,700 --> 00:02:32,510
Bsicamente, al mismo tiempo, el promedio de dicha llamada de estado podra finalizar antes de este,

30
00:02:32,540 --> 00:02:36,070
por lo que este estado podra no ser correcto.

31
00:02:36,140 --> 00:02:39,720
Entonces hay una mejor sintaxis para llamar a este estado de conjunto.

32
00:02:39,830 --> 00:02:47,950
que este estado establecido toma una funcin y usar la funcin de flecha y all obtienes dos argumentos.

33
00:02:47,990 --> 00:02:56,370
Si planeas usar este estado dentro de l y esta es la forma funcional de la sintaxis de la

34
00:02:56,370 --> 00:02:57,390
funcin, parece

35
00:02:57,390 --> 00:03:01,190
El estado anterior al que puede acceder de forma segura a continuacin.

36
00:03:01,200 --> 00:03:04,940
Porque este definitivamente es el ltimo estado que tena en este punto del tiempo.

37
00:03:05,370 --> 00:03:07,360
Y cualquier accesorio que puedas tener.

38
00:03:07,890 --> 00:03:14,970
Y luego, el cuerpo de la funcin tiene que devolver un objeto que es su estado actualizado.

39
00:03:15,230 --> 00:03:22,950
ya no hicimos clic en la etiqueta de estado en la que hicimos clic, pero hicimos clic en la etiqueta de estado anterior y, como

40
00:03:23,370 --> 00:03:30,420
acabo de decir, ahora es seguro acceder a ella porque el estado anterior no puede mutarse desde ningn otro lado en la aplicacin.

41
00:03:30,530 --> 00:03:33,170
Entonces, ahora colocaste el cdigo anterior, pero all

42
00:03:33,270 --> 00:03:36,360
Mientras estamos en este conjunto estado carbn.

43
00:03:36,660 --> 00:03:42,960
Entonces, si el archivo de datos vuelve a cargar la aplicacin, vaya a volver a activar las herramientas elctricas y seleccione la aplicacin.

44
00:03:43,290 --> 00:03:50,070
Ahora, si hago clic en hablar de personas, funciona como las cuatro y tambin funcionar con el mal enfoque en

45
00:03:50,070 --> 00:03:51,450
muchos casos de Abaroa.

46
00:03:51,690 --> 00:03:59,340
Pero el mejor caso de prctica del estado de mutacin si confas en el estado anterior como lo hacemos aqu es mediante

47
00:03:59,340 --> 00:04:01,480
la invocacin de estado previo aqu.

48
00:04:01,560 --> 00:04:09,060
nuestro estado, empeora el rumbo que no habra tenido el peligro aqu porque no cambiamos el objetivo recolectado desde ningn otro lado.

49
00:04:09,060 --> 00:04:14,960
Esto es solo una adquisicin y una mejor forma de mutar para indicar si usted corre el riesgo

50
00:04:14,960 --> 00:04:16,040
de interferir con

51
00:04:16,230 --> 00:04:19,490
Pero si te atreves, el mejor enfoque.

