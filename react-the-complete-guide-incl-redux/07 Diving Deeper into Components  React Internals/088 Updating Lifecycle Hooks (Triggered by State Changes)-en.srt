1
00:00:02,220 --> 00:00:07,230
We're almost done with the lifecycles, now that we had a look at updating triggered from the outside

2
00:00:07,470 --> 00:00:08,970
by props changes,

3
00:00:09,060 --> 00:00:14,760
let's now have a look at the update lifecycle process for internal changes because of set state basically.

4
00:00:15,300 --> 00:00:15,710
There,

5
00:00:15,750 --> 00:00:20,340
we don't start with componentWillReceiveProps because we won't receive props,

6
00:00:20,340 --> 00:00:25,320
instead we start right away which shouldComponentUpdate and we get nextProps and nextState here too

7
00:00:25,440 --> 00:00:30,960
and just as before, we may cancel the updating process here and as before we should decide whether or

8
00:00:30,960 --> 00:00:32,000
not to continue

9
00:00:32,100 --> 00:00:33,870
and we shouldn't cause side effects,

10
00:00:33,870 --> 00:00:36,580
so the logic is the same as before here.

11
00:00:36,740 --> 00:00:43,620
Thereafter we reach componentWillMount and the logic is the same as before here, then render, then

12
00:00:43,620 --> 00:00:47,490
we re-render all the child components and DidUpdate at the end.

13
00:00:47,730 --> 00:00:53,680
And I quickly walk through that because it's basically the same process as before for an external change,

14
00:00:53,730 --> 00:00:55,260
an external trigger,

15
00:00:55,500 --> 00:01:01,320
the only difference is that the first lifecycle hook willReceiveProps is missing here.

16
00:01:01,320 --> 00:01:07,080
So hence we don't need to include or implement any new methods now into our project because we already

17
00:01:07,080 --> 00:01:08,770
got all these methods.

18
00:01:09,090 --> 00:01:10,710
Nonetheless I will implement them in

19
00:01:10,740 --> 00:01:15,730
app.js which is the place where we do change the state so that we can see it there

20
00:01:15,740 --> 00:01:18,630
too. So after DidMount and so on,

21
00:01:18,690 --> 00:01:23,520
I want to implement the shouldComponentUpdate, WillUpdate and so on methods.

22
00:01:23,790 --> 00:01:30,400
So I'm going to copy them from persons.js and move them over to app.js after componentDidMount.

23
00:01:30,600 --> 00:01:39,480
And of course there, I should adjust this reference here, persons will be app.js, so I'll replace all

24
00:01:39,540 --> 00:01:41,960
persons.js reference in the console log

25
00:01:41,960 --> 00:01:46,200
here with app.js. And shouldComponentUpdate here,

26
00:01:46,200 --> 00:01:49,170
I'll also set it to true for now.

27
00:01:49,170 --> 00:01:53,960
Now let's save this and let's now see how this influence our app, if we reload it,

28
00:01:54,180 --> 00:01:57,300
we don't see any updating method here.

29
00:01:57,390 --> 00:02:03,030
Let me clear this and click the button now, now there's changes, you'll see right at the start,

30
00:02:03,060 --> 00:02:08,850
We're in the update app.js shouldComponentUpdate and this makes sense because clicking

31
00:02:08,850 --> 00:02:15,410
this button alone calls set state and therefore trigger the updating of that component.

32
00:02:15,720 --> 00:02:22,050
Obviously before we change the props and therefore trigger the updating process in the child components

33
00:02:22,410 --> 00:02:26,570
because before we can change the child components, the state there has to update.

34
00:02:26,970 --> 00:02:33,530
So in shouldComponentUpdate and then componentWillUpdate and thereafter render

35
00:02:33,630 --> 00:02:37,200
and now we leave for the normal process.

36
00:02:37,320 --> 00:02:43,440
At the end though, we see inside componentDidUpdate for app.js

37
00:02:43,440 --> 00:02:44,630
So this is important,

38
00:02:44,790 --> 00:02:50,070
the app.js updating runs first because it's triggered upon a state change which obviously is the first

39
00:02:50,070 --> 00:02:52,190
thing that happens.

40
00:02:52,260 --> 00:02:54,480
These are all the lifecycle hooks.

41
00:02:54,480 --> 00:03:00,420
Now let's go back to shouldComponentUpdate and how we may improve the performance of our application

42
00:03:00,420 --> 00:03:01,070
with it.

43
00:03:01,080 --> 00:03:02,530
Let me show you an example.

