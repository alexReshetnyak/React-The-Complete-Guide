1
00:00:02,310 --> 00:00:06,260
Knouted otteniamo componenti pieni e pieni e quindi possiamo davvero vedere gli hook del ciclo di vita.

2
00:00:06,360 --> 00:00:11,050
Diamo un'occhiata alle persone del ciclo di vita che abbiamo appreso sulla creazione di componenti 4-D.

3
00:00:11,070 --> 00:00:12,290
Iniziamo con Apple.

4
00:00:12,300 --> 00:00:13,220
S.

5
00:00:13,470 --> 00:00:20,610
Vi ho detto che avete questo costruttore e il costruttore riceve gli oggetti di scena questo componente ottiene

6
00:00:21,060 --> 00:00:22,170
solo il costruttore.

7
00:00:22,170 --> 00:00:27,330
Quindi non possiamo ancora chiamare il prop's da nessun'altra parte in questa classe di componenti solo in un costruttore.

8
00:00:27,330 --> 00:00:30,720
Potremmo accedere al titolo di oggetti di scena ovunque.

9
00:00:30,750 --> 00:00:33,990
Deve essere il titolo di questo oggetto.

10
00:00:34,380 --> 00:00:40,150
Ora che funziona, ora abbiamo bisogno di chiamare i super puntelli Osterweis.

11
00:00:40,350 --> 00:00:42,710
Questo processo non avr successo.

12
00:00:42,900 --> 00:00:47,030
Posso davvero dimostrartelo se commento questo e salvo questo.

13
00:00:47,160 --> 00:00:50,610
Ora vedi che abbiamo un errore nel mancato super costruttore di chiamate.

14
00:00:50,670 --> 00:00:53,930
Quindi l'errore  gi abbastanza chiaro su cosa c' che non va.

15
00:00:54,090 --> 00:01:00,630
Ora prima di implementare il costruttore ha funzionato perch ha reagito automaticamente raggiungendo il

16
00:01:00,630 --> 00:01:01,470
super costruttore.

17
00:01:01,590 --> 00:01:04,640
Quindi al costruttore del componente che estendiamo.

18
00:01:04,980 --> 00:01:10,280
Ma se implementiamo il nostro, sovrascriviamo i default di default e quindi dobbiamo farlo anche se

19
00:01:10,400 --> 00:01:15,350
per chiamare super e passare a prop's  un costruttore inutile in questo momento.

20
00:01:15,420 --> 00:01:19,090
Come Eastland ci avverte per perch non facciamo altro.

21
00:01:19,250 --> 00:01:25,980
Quindi permettimi di bloccare qualcosa e creer un'istruzione di blocco dove altro dir app Julias in

22
00:01:25,980 --> 00:01:30,460
modo che possiamo facilmente vedere da dove proviene il costruttore.

23
00:01:30,570 --> 00:01:35,390
Questo ha senso e lasciami passare anche gli oggetti di scena qui.

24
00:01:35,470 --> 00:01:40,690
Ora se salviamo questo e la nostra app viene caricata, vediamo che questo registro della console  qui a destra.

25
00:01:40,720 --> 00:01:41,370
Attualmente si.

26
00:01:41,410 --> 00:01:42,720
In quel costruttore.

27
00:01:42,820 --> 00:01:46,800
E vediamo gli oggetti di scena come un oggetto in cui abbiamo questo titolo.

28
00:01:46,840 --> 00:01:49,760
Ora implementiamo anche gli altri hook.

29
00:01:50,040 --> 00:01:54,350
Questo sarebbe il componente verr montato l.

30
00:01:54,360 --> 00:02:06,340
Inoltre consoler il log e dir l'app punto J. S. il componente interno si monter in questo modo.

31
00:02:06,530 --> 00:02:08,910
Ora con Dadley  sicuro ripeterlo.

32
00:02:09,700 --> 00:02:15,490
E una volta ricaricato, vedrai che per prima cosa stiamo eseguendo il costruttore e quindi il componente verr montato.

33
00:02:15,490 --> 00:02:20,980
Ora una parola in pi sul costruttore dal modo in cui inizializziamo lo stato qui.

34
00:02:21,010 --> 00:02:26,160
Ora, come ho detto, potresti ancora vedere frammenti di codice in cui lo stato  invece inizializzato qui.

35
00:02:26,290 --> 00:02:28,780
Puoi farlo chiamando questo stato.

36
00:02:28,780 --> 00:02:36,430
Assicurati di chiamare super forest questo stato e poi inizializzalo proprio come lo facciamo laggi.

37
00:02:36,670 --> 00:02:39,190
Quindi questa  fondamentalmente una sintassi alternativa.

38
00:02:39,520 --> 00:02:44,650
Non raccomando necessariamente di usare il costruttore perch  pi semplice implementare l'inizializzazione dello stato

39
00:02:44,650 --> 00:02:47,680
come abbiamo fatto prima, ma si ha un costruttore.

40
00:02:47,710 --> 00:02:49,160
Puoi assolutamente farlo.

41
00:02:49,180 --> 00:02:53,040
Non fa davvero la differenza bouffe va bene e fa il codice.

42
00:02:53,080 --> 00:02:59,760
Potresti ancora vedere in altri tutorial perch in altre parole reagisci o per essere precisi in

43
00:02:59,770 --> 00:03:03,270
tutte le parole del progetto creato per l'atto.

44
00:03:03,460 --> 00:03:10,630
Non abbiamo avuto accesso a questo modo relativamente nuovo di inizializzare le propriet in sei classi.

45
00:03:10,660 --> 00:03:16,570
Ecco perch questo  l'approccio che funzioner nella maggior parte dei progetti in cui questo funzioner solo

46
00:03:16,570 --> 00:03:19,750
nelle moderne impostazioni del progetto, come lo usiamo qui.

47
00:03:19,780 --> 00:03:21,110
Quindi con quello vedrai.

48
00:03:21,160 --> 00:03:22,060
Funziona ancora bene.

49
00:03:22,060 --> 00:03:25,210
Otteniamo tutti lo stesso stato e comportamento di prima.

50
00:03:25,210 --> 00:03:30,440
Ora l'inizializzazione  rimasta nel costruttore per tornare al ciclo di vita di Deese.

51
00:03:30,460 --> 00:03:33,190
Anche se dobbiamo rendere un metodo.

52
00:03:33,180 --> 00:03:39,520
Quindi, se ricordi la nostra diapositiva e dobbiamo gi implementarla perch ogni componente stateful deve

53
00:03:39,520 --> 00:03:40,490
avere questo.

54
00:03:40,510 --> 00:03:44,340
 l'unico obbligatorio perch abbiamo bisogno di sapere cosa renderizzare.

55
00:03:44,470 --> 00:03:56,640
Quindi, ora lancer anche Larke the J. S. all'interno rendiamo cos che salviamo questo, vediamo anche il Drenthe

56
00:03:56,640 --> 00:04:01,490
che viene chiamato per la posizione proprio come l'hai visto sulla diapositiva.

57
00:04:01,820 --> 00:04:04,270
E ora implementiamo il componente mount.

58
00:04:04,440 --> 00:04:06,230
Ora implementer quella lacrima in cima.

59
00:04:06,230 --> 00:04:11,030
L'ordine non ha importanza, ma in genere o spesso vedrai i hook del ciclo di

60
00:04:11,030 --> 00:04:12,530
vita implementati nel componente principale.

61
00:04:12,560 --> 00:04:14,400
Ho montato qui.

62
00:04:14,780 --> 00:04:18,310
Ci sar anche bloccare qualcosa.

63
00:04:18,360 --> 00:04:25,080
J. S. il componente interno  montato in questo modo.

64
00:04:25,130 --> 00:04:28,900
Ora se salviamo le sicurezze possiamo anche vedere che questo  chiamato Lost.

65
00:04:28,900 --> 00:04:30,460
Questo  interessante

66
00:04:30,460 --> 00:04:36,910
Aggiungiamo ora questi hook del ciclo di vita allo stato Arbre anche per i componenti.

67
00:04:37,140 --> 00:04:44,150
Quindi copiali e trasferiscili a Cheesus o incollali in un buffer o in un metodo.

68
00:04:44,440 --> 00:04:49,660
Non voglio inizializzare lo stato qui perch non uso lo stato in questo componente e ho bisogno di

69
00:04:49,690 --> 00:04:51,410
regolare tutti questi blocchi Konsole ora.

70
00:04:51,550 --> 00:04:59,320
Quindi qui abbiamo persone J. S. e abbiamo anche quello laggi e queste due serrature e il metodo di rendering.

71
00:04:59,420 --> 00:05:03,350
Aggiunger anche una dichiarazione di blocco della console per dire.

72
00:05:03,360 --> 00:05:06,610
J. S. all'interno render.

73
00:05:06,760 --> 00:05:08,230
Ora sta diventando interessante.

74
00:05:08,260 --> 00:05:14,380
Se ora salviamo questo, vediamo quando vengono eseguiti tutti questi hook del ciclo di vita delle persone.

75
00:05:15,130 --> 00:05:22,940
Quindi, come dicevo, assicurati di aver salvato e ricaricato la pagina e vedi che non li vediamo affatto.

76
00:05:22,980 --> 00:05:27,520
Ha senso perch abbiamo mostrato questa lista di persone solo in modo condizionale.

77
00:05:27,840 --> 00:05:32,060
Non appena faccio clic su Attiva / Disattiva le persone li vedi tutti.

78
00:05:32,160 --> 00:05:39,720
No, in realt quello che si vedeva  il rendering dell'apertura in quanto  stato richiamato il contenitore radice di Safdar.

79
00:05:39,900 --> 00:05:42,420
Il che ha senso perch lo stato  cambiato.

80
00:05:42,540 --> 00:05:45,800
Quindi ricorda che renderizza davvero eseguito.

81
00:05:46,140 --> 00:05:52,410
E poi vedi che la persona che ha costruito il costruttore  stata eseguita per montare il rendering

82
00:05:52,440 --> 00:05:54,320
delle persone e all'interno ha montato.

83
00:05:54,330 --> 00:06:03,930
Ora aggiungiamo anche i metodi Oldys alla persona J come sopra render qui per essere sicuri di aggiustare il blocco in modo da poterlo identificare e implementare

84
00:06:03,930 --> 00:06:12,960
un log nel metodo di rendering l per la console lock person J. S.

85
00:06:13,650 --> 00:06:16,380
all'interno render.

86
00:06:16,390 --> 00:06:19,110
Ora salviamo questo file.

87
00:06:19,230 --> 00:06:21,140
E ora vediamo un'altra volta.

88
00:06:21,410 --> 00:06:25,520
Quando l'app viene caricata, vediamo solo Abdias, ma ora si affoller.

89
00:06:25,520 --> 00:06:27,510
Una volta colpisco la persistenza del bersaglio.

90
00:06:27,890 --> 00:06:34,300
Quindi scaviamo la nostra strada attraverso il primo di tutto che dobbiamo inizialmente fare come invoca fino a qui

91
00:06:34,290 --> 00:06:35,210
componente che monta.

92
00:06:35,360 --> 00:06:41,720
Quindi clicchiamo sul pulsante e questo ritiro non ci arrende perch ovviamente lo stato cambiato ha bisogno di

93
00:06:41,720 --> 00:06:44,680
richiamare il rendering per vedere cosa  cambiato.

94
00:06:44,750 --> 00:06:52,130
Quindi eseguiamo i metodi di Jr della persona fino al rendering nel costruttore dove riceviamo i puntelli

95
00:06:52,130 --> 00:06:53,110
di percentuale.

96
00:06:53,120 --> 00:07:01,130
Quindi tutto questo componente che esegue il rendering dell'array all'interno verr montato e renderizzato, ma ci  importante.

97
00:07:01,280 --> 00:07:05,670
Non vediamo persone inseguire all'interno del componente montato.

98
00:07:05,720 --> 00:07:11,170
Invece continuiamo con la persona J. S. componente e questo ha perfettamente senso.

99
00:07:11,180 --> 00:07:17,160
Ricorda che fai scorrere questo passaggio dopo il rendering dei componenti figlio resi.

100
00:07:17,530 --> 00:07:24,590
Questo  il motivo per cui non vediamo ancora il componente montare ma perch vediamo la persona

101
00:07:24,600 --> 00:07:34,130
J all'interno del costruttore e cos via perch abbiamo reso la lista e l'elenco ha componenti singolari al 3 percento, motivo per cui

102
00:07:34,130 --> 00:07:44,390
vediamo la persona geus fino a renda tre volte e l dopo noi vediamo la persona che Ges fece montare i tempi liberi fa il

103
00:07:44,390 --> 00:07:46,440
suo tempo libero questo anno.

104
00:07:46,970 --> 00:07:50,630
E ci sono persone che compongono il componente di Chia.

105
00:07:50,960 --> 00:07:53,960
E questo  esattamente l'ordine che hai visto sulla diapositiva.

106
00:07:53,960 --> 00:08:00,080
Scende il componente e il rendering e in questi Meffert si avr la possibilit di eseguire il

107
00:08:00,080 --> 00:08:00,980
proprio codice.

108
00:08:01,160 --> 00:08:07,430
Ma anche con la sola registrazione,  interessante vedere come funziona il re-act e

109
00:08:07,430 --> 00:08:09,500
come crea effettivamente questo componente.

110
00:08:09,500 --> 00:08:12,160
Ora creare  una cosa interessante.

111
00:08:12,560 --> 00:08:15,890
E ovviamente crea componenti funzionali allo stesso modo.

112
00:08:16,010 --> 00:08:18,680
Non possiamo semplicemente aggiungere i nostri hook del ciclo di vita.

113
00:08:18,800 --> 00:08:24,650
Ma se non  necessario eseguire alcuna logica, non  necessario, ma la creazione di componenti 

114
00:08:24,650 --> 00:08:25,560
una cosa interessante.

115
00:08:25,580 --> 00:08:29,900
Diamo ora un'occhiata a cosa succede quando aggiorniamo i componenti.

116
00:08:29,900 --> 00:08:31,780
Come appare questo ciclo di vita.

