1
00:00:02,240 --> 00:00:08,830
En las ltimas conferencias tuvimos una visin sper detallada de toda la teora detrs de reaccionar cuando se est haciendo detrs

2
00:00:08,830 --> 00:00:12,310
de escena cmo est creando el componente del ciclo de vida.

3
00:00:12,310 --> 00:00:18,710
Y eso es importante, por supuesto, cmo podemos simplemente ver los antecedentes radicales.

4
00:00:18,850 --> 00:00:26,290
Este concepto detrs reacciona para optimizar la reaccin, ya que es algo que tambin ver en los proyectos del curso

5
00:00:26,300 --> 00:00:27,780
que vamos a construir.

6
00:00:27,880 --> 00:00:33,310
Eso, por supuesto, hace que sea an ms fcil de entender para ver cundo utilizar un ciclo de vida

7
00:00:33,310 --> 00:00:38,620
cmo llegar a la web desde el componente que se monta y dnde usar un componente puro, por ejemplo.

8
00:00:38,620 --> 00:00:45,610
una primera idea y hay ms cosas que vers de los proyectos del Curso que quiero presentar ahora mismo.

9
00:00:45,610 --> 00:00:47,290
An as, esta debera ser

10
00:00:47,590 --> 00:00:55,960
Y una cosa es algo que mencion anteriormente: aprendes que nuestros componentes suelen tener un elemento de ajuste que no debes tener y

11
00:00:55,990 --> 00:01:02,650
mltiples elementos situados uno al lado del otro en el nivel raz dentro de tu mtodo de renderizado

12
00:01:02,650 --> 00:01:07,830
o para ser precisos dentro de la declaracin de retorno de tu mtodo de renderizado

13
00:01:07,870 --> 00:01:14,340
Esta es una restriccin de volver a actuar, es una especie de forma relajada de volver a actuar 16, aunque,

14
00:01:14,380 --> 00:01:19,830
por ejemplo, en porcentaje de J. S. no tenemos ningn problema para devolverle esta matriz a la persona.

15
00:01:19,840 --> 00:01:21,120
Acabamos de regresar una matriz aqu.

16
00:01:21,130 --> 00:01:28,540
Tenga esto en cuenta que estamos mapeando esta matriz de Javascript en una matriz de J como elementos x.

17
00:01:28,540 --> 00:01:30,210
Y eso es algo importante.

18
00:01:30,220 --> 00:01:33,310
Puede devolver una matriz de elementos.

19
00:01:33,340 --> 00:01:38,450
Esto es algo que est bien, no elemento sentado uno al lado del otro.

20
00:01:38,590 --> 00:01:43,740
Pero si se trata de una matriz de elementos GSX X como este, aqu funciona.

21
00:01:43,810 --> 00:01:47,800
Y, por supuesto, puedes hacer esto aqu tambin en persona.

22
00:01:47,870 --> 00:01:52,000
S, podra devolver una serie de elementos gratuitos de DS.

23
00:01:52,090 --> 00:02:00,870
Cada elemento de la matriz tambin necesita una clave, como es el caso aqu para nuestro porcentaje. de forma manual, por lo que podra tener una matriz con el primer

24
00:02:01,210 --> 00:02:07,630
prrafo, luego un segundo elemento y el primer elemento aqu.

25
00:02:07,630 --> 00:02:19,910
As que no importa si genera automticamente la matriz con el mtodo de mapa o si lo hace

26
00:02:19,910 --> 00:02:20,380
Sin embargo, esta sera una matriz vlida.

27
00:02:22,620 --> 00:02:25,230
Debes quedrtelo.

28
00:02:25,440 --> 00:02:26,920
As que djame comentar la primera declaracin de devolucin por ahora y djame guardar este cdigo actualizado.

29
00:02:26,940 --> 00:02:32,450
Ahora regrese a nuestra aplicacin.

30
00:02:32,490 --> 00:02:34,130
Abra la consola recargada.

31
00:02:34,140 --> 00:02:36,870
Y personas objetivo.

32
00:02:37,960 --> 00:02:40,020
Usted ve que realmente obtenemos un error entre que cada nio en una matriz debe tener una clave.

33
00:02:40,060 --> 00:02:45,570
Tambin ves que faltan los Stahl.

34
00:02:45,610 --> 00:02:47,740
Eso simplemente sucede porque ya no

35
00:02:47,740 --> 00:02:53,270
tenemos este elemento de envoltura que tena la clase de persona que en este caso

36
00:02:53,270 --> 00:02:59,970
era necesaria porque aqu volver a envolver a Dave no es obligatorio, sino algo que todos necesitamos para Stolley.

37
00:02:59,970 --> 00:03:00,860
Entonces, en este caso, estamos cambiando no es ptimo, pero puedes hacerlo.

38
00:03:01,090 --> 00:03:05,690
Y si agrega una clave con una identificacin nica, por supuesto, puede codificarla.

39
00:03:05,800 --> 00:03:11,060
Si no se genera dinmicamente, ese es el caso.

40
00:03:11,080 --> 00:03:14,670
Entonces, si lo hace, ahora guarde esto y vuelva a cargar su aplicacin para evitar que aparezcan errores.

41
00:03:14,980 --> 00:03:23,710
An en este ejemplo no eres lo ms til porque realmente necesitas el div de envoltura.

42
00:03:23,710 --> 00:03:30,150
Pero quera resaltar que puedes devolver matrices.

43
00:03:30,400 --> 00:03:34,540
Ahora voy a volver a mi antiguo cdigo aqu todava y

44
00:03:34,590 --> 00:03:39,900
la mayora de las veces tendr un cdigo como este y no devolver las matrices.

45
00:03:39,900 --> 00:03:41,080
La excepcin son los componentes que manejan la representacin de listas como el componente de una persona.

46
00:03:41,080 --> 00:03:47,340
Ah es muy conveniente que no tengamos que cambiar Raptor, la

47
00:03:47,610 --> 00:03:53,080
matriz se actualiza para transformar la matriz en una diferencia.

48
00:03:53,080 --> 00:03:56,240
Ahora hay otra excepcin que se considera una cabina simplemente caer.

49
00:03:56,250 --> 00:04:01,990
Ah todos tenemos TODOS los envoltorios diff para aplicar a cabina clase B.

50
00:04:02,280 --> 00:04:07,580
Echa un vistazo a DC como se encuentra, aunque no necesitamos realmente clase de cabina

51
00:04:07,620 --> 00:04:14,940
excepto por los botones en los que queremos ampliar este componente. Bueno, podramos simplemente crear nuestra propia clase de botn para

52
00:04:14,940 --> 00:04:22,960
esto, aunque podramos definir una clase de botn aqu para habere combinado con la clase de lectura y tambin para leer y hover.

53
00:04:23,470 --> 00:04:32,170
Ahora no hay una clase de cockpit y todo lo que tenemos que hacer en nuestro cdigo ahora se le asigna a

54
00:04:32,170 --> 00:04:39,070
esta clase de botn, de modo que para nuestro botn tengamos siempre el botn de clases como predeterminado.

55
00:04:39,070 --> 00:04:48,300
Tenga en cuenta ver los mdulos de ISS.

56
00:04:48,310 --> 00:04:49,950
clases para que las clases se lean.

57
00:04:49,960 --> 00:04:57,200
Ahora danos esta clase de botn porque la definimos aqu en el archivo C S S y, en el caso de que queramos agregar la clase de lectura, simplemente tendramos una matriz de

58
00:04:57,200 --> 00:05:05,260
Pero antes de la deuda, todas las clases se accionan y al final solo Joyner's con un espacio en blanco.

59
00:05:05,620 --> 00:05:14,230
Ahora si eso guardamos este cdigo y volvemos al botn de la aplicacin, parece y funciona como antes.

60
00:05:14,240 --> 00:05:20,050
Pero ahora este div de envoltura es redundante.

61
00:05:20,270 --> 00:05:23,240
Podemos eliminar el nombre de clase all y seguir teniendo el mismo estilo de botn.

62
00:05:23,240 --> 00:05:28,040
Entonces es redundante y sera bueno si pudieras deshacerte de l.

63
00:05:28,280 --> 00:05:31,350
Ahora una solucin es eliminarlo y devolver una matriz de elementos aqu.

64
00:05:31,370 --> 00:05:35,530
Pero tambin hay otra alternativa.

65
00:05:35,780 --> 00:05:38,060
Podemos crear un componente de orden superior para eso.

66
00:05:38,240 --> 00:05:42,190
As que ir a la fuente y crear una nueva

67
00:05:42,650 --> 00:05:50,990
carpeta que nombrar HELOC para componentes de orden superior. Los componentes de orden superior son componentes absolutamente normales de reactivacin.

68
00:05:51,560 --> 00:05:56,420
Tienen una especialidad, aunque no son

69
00:05:56,750 --> 00:06:04,220
representativas, pero envuelven nuestros componentes para agregar cierta funcionalidad.

70
00:06:04,220 --> 00:06:05,730
Por ejemplo, podemos crear un componente alks para auxiliar y este componente tendr una nica tarea.

71
00:06:05,750 --> 00:06:13,170
Ser una funcin que exija apoyos y que devuelva un poco de

72
00:06:13,250 --> 00:06:23,030
X de Jael, obviamente necesita importar reaccionar porque, de nuevo, es solo un componente normal all.

73
00:06:23,060 --> 00:06:27,600
Todo lo que quiero hacer es

74
00:06:27,630 --> 00:06:38,040
dar salida quizs a nios envueltos en llaves o ni siquiera necesitamos hacer eso.

75
00:06:38,040 --> 00:06:39,100
No podemos simplemente devolver a Propst hijos as y ahora exportar un valor predeterminado.

76
00:06:39,210 --> 00:06:47,730
Funcin Alks.

77
00:06:47,850 --> 00:06:49,880
Este componente puede parecer intil porque

78
00:06:49,950 --> 00:06:56,100
todo lo que hace es devolver lo que pas entre la etiqueta de apertura y de cierre.

79
00:06:56,130 --> 00:06:58,200
Sin embargo, esto es enorme porque ahora podemos usarlo como componente de alks y el componente de la cabina aqu.

80
00:06:58,590 --> 00:07:05,640
All podemos importar alks con una A mayscula desde dos niveles arriba Agencia alks G-S.

81
00:07:05,970 --> 00:07:15,380
Sin la extensin de archivo.

82
00:07:15,540 --> 00:07:17,090
Como siempre y ahora podemos ajustar nuestro cdigo aqu con nuestro componente personalizado alks.

83
00:07:17,090 --> 00:07:25,840
El que acabamos de crear ahora ya no obtenemos un error aqu porque tenemos un componente de rapin, pero

84
00:07:25,950 --> 00:07:33,000
en realidad no creamos un elemento de HVM de envoltura porque el alks est vaco.

85
00:07:33,000 --> 00:07:39,160
Podemos simplemente devolver los accesorios a los nios.

86
00:07:39,180 --> 00:07:41,680
Esa es una clave para llevar.

87
00:07:41,690 --> 00:07:43,060
No tenemos que raptus e incluso tenemos accesorios.

88
00:07:43,200 --> 00:07:46,230
Los nios son elementos adyacentes HVM l, como es el caso aqu.

89
00:07:46,230 --> 00:07:51,090
Estos son los nios.

90
00:07:51,090 --> 00:07:52,550
Todava funcionar en el re-acto 16.

91
00:07:52,770 --> 00:07:55,310
Eso es genial porque a

92
00:07:55,710 --> 00:08:02,370
veces no quieres introducir un elemento HVM separado como un div de envoltura.

93
00:08:02,370 --> 00:08:03,090
Si no

94
00:08:03,270 --> 00:08:08,460
necesita razones de estilo, incluso puede destruir su rediseo si est utilizando bloques flexibles o algo as.

95
00:08:08,460 --> 00:08:10,270
Entonces, si guardamos esto, obtenemos una aplicacin que funciona.

96
00:08:10,440 --> 00:08:14,680
No se debe ver ningn error, excepto el buey definido por el reactor pero nunca usado.

97
00:08:14,730 --> 00:08:20,920
Esto se debe a que ni siquiera tenemos el elemento de tratamiento de reactivacin, por lo que no

98
00:08:20,940 --> 00:08:27,180
podemos eliminarlo, ni siquiera hacerlo ms gil, porque todo lo que hacemos es distribuir los elementos de apoyo.

99
00:08:27,180 --> 00:08:31,020
As que ahora con una configuracin muy delgada, pero guardamos este elemento HVM M-L extra redundante aqu en la cabina.

100
00:08:31,080 --> 00:08:38,910
Este div que realmente no necesitamos

101
00:08:38,910 --> 00:08:41,570
Esto es algo que quera llamar su

102
00:08:41,580 --> 00:08:47,640
atencin para que pueda devolver matrices como en personas y que puede devolver a los nios de

103
00:08:47,640 --> 00:08:54,180
props como un buey y, aunque DS podra ser una reaccin adyacente, est bien con esa reactivacin 16

104
00:08:54,180 --> 00:09:00,960
al menos algo que usted tiene que tener en cuenta y algo que le permite guardar ese elemento div innecesario.

105
00:09:01,140 --> 00:09:03,690
Tuvimos que usar antes de esta solucin aqu.

106
00:09:03,690 --> 00:09:06,160
&nbsp;

