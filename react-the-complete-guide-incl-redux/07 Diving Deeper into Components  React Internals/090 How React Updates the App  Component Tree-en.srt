1
00:00:02,200 --> 00:00:07,840
Let's have a look at this rendering and updating process and where to place our pure components.

2
00:00:07,900 --> 00:00:10,180
Consider this react application,

3
00:00:10,180 --> 00:00:16,060
we have a root app component and then we might have a shop and a user's component and shop and users

4
00:00:16,060 --> 00:00:18,070
might very well be containers,

5
00:00:18,070 --> 00:00:24,010
each managing their relevant state. These components probably also have child components,

6
00:00:24,700 --> 00:00:30,910
list and card for the shop and users one, two, three in the users case.

7
00:00:30,950 --> 00:00:38,420
Now the updating as you'll learn happens from top to bottom and only when state or props change,

8
00:00:38,420 --> 00:00:44,840
so if the state and the shop component changes, list and card will probably receive new props and also

9
00:00:44,840 --> 00:00:46,370
update

10
00:00:46,370 --> 00:00:52,730
and this also gives us an idea about what might be pure components and where this doesn't make too much

11
00:00:52,730 --> 00:00:53,660
sense.

12
00:00:54,200 --> 00:01:02,150
If we have lists and card depend on props which are distributed by shop, then maybe it makes sense to

13
00:01:02,150 --> 00:01:07,500
implement shouldComponentUpdate in the shop case and stop updating

14
00:01:07,640 --> 00:01:13,790
if the state didn't actually change, if we maybe called set state but the properties in the state are

15
00:01:13,790 --> 00:01:19,940
still the same as before and then list and card won't be reached anyways so there's no need

16
00:01:19,940 --> 00:01:26,330
in turning list and card into pure components because we have a good check one level above them in

17
00:01:26,330 --> 00:01:33,200
our shop container and obviously the same would be true for users or any other part of your application.

18
00:01:33,260 --> 00:01:40,940
So having some containers where you have these checks might make a lot of sense and still you might

19
00:01:40,940 --> 00:01:46,940
even find cases where your containers don't need that check because you know you only call set state

20
00:01:47,150 --> 00:01:53,660
or you only receive new props if they really changed. Then you can also leave out shouldComponentUpdate or

21
00:01:53,660 --> 00:01:54,750
a pure component

22
00:01:54,830 --> 00:01:57,440
but often times it might make sense.

23
00:01:57,470 --> 00:02:00,470
So this is how the rendering and updating works,

24
00:02:00,470 --> 00:02:07,320
how this tree of components is updated and handled by react and how you may optimize it.

25
00:02:07,340 --> 00:02:13,700
Let's now understand how react to optimize this updating process for us out of the box by not hitting

26
00:02:13,700 --> 00:02:19,730
the real dom all the time because as you could see, there is a big difference between the render method

27
00:02:19,730 --> 00:02:22,940
being called and the real dom being changed.

28
00:02:23,150 --> 00:02:25,460
The second look at this in the next lecture.

