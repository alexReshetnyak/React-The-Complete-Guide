1
00:00:02,320 --> 00:00:08,470
Wic zaimplementuj te aktualizacje zwizane z hakami i nie zaimplementuj ich we wszystkich komponentach, poniewa mogoby

2
00:00:08,470 --> 00:00:11,490
to spowodowa eksplozj naszego logu konsoli, wic zrobi

3
00:00:11,590 --> 00:00:12,780
to osobicie. Komponent

4
00:00:12,850 --> 00:00:17,470
js, bd implementowa je poniej tych zwizanych

5
00:00:17,530 --> 00:00:23,680
z twrczoci, ale powyej renderowania. Przy okazji, jeli zastanawiasz si, dlaczego wdroyem te metody w

6
00:00:23,740 --> 00:00:27,830
ten sposb, a nie jako waciwoci z funkcjami strzaek, moesz to zrobi, ale poniewa

7
00:00:28,000 --> 00:00:34,870
te metody nie s wywoywane przez zdarzenia w domenie i dlatego nigdy nie bdziemy mie tego problemu ze sowem kluczowym, moemy rwnie uy

8
00:00:35,020 --> 00:00:41,350
tej skadni, ktr moesz zna rwnie z innych jzykw programowania. Wracamy jednak do hakw na

9
00:00:41,350 --> 00:00:42,610
cae ycie.

10
00:00:42,880 --> 00:00:50,540
Zacznijmy od componentWillReceiveProps i otrzymamy nadchodzce rekwizyty jako argument.

11
00:00:50,770 --> 00:00:56,850
Teraz dodam instrukcj logu konsoli, w ktrej wydrukuj osoby aktualizujce. js, abymy mogli

12
00:00:56,890 --> 00:00:59,970
to atwo zobaczy.

13
00:01:00,400 --> 00:01:10,390
Tam powiem, e wewntrz componentWillReceiveProps i wydrukuj tutaj rwnie nextProps, abymy mogli

14
00:01:10,390 --> 00:01:12,400
to zobaczy.

15
00:01:12,400 --> 00:01:15,940
Pozwl mi to zapisa i zobaczmy, kiedy to si uda. Przeaduj aplikacj, nie widzimy jej

16
00:01:15,940 --> 00:01:20,050
tutaj, poniewa zdefiniowalimy j w osobach. Plik js, jeli

17
00:01:20,110 --> 00:01:29,140
klikn przeczam osoby, przeanalizujmy konsol. zaloguj tutaj mamy wszystkie metody zwizane

18
00:01:29,140 --> 00:01:37,660
z osobami, wic osoby. js w konstruktorze, osoby WillMount. js render to nasz komponent dla jednej

19
00:01:37,660 --> 00:01:39,910
osoby, wic s to komponenty

20
00:01:41,160 --> 00:01:45,440
pojedynczej osoby i DidMount, bez hase zwizanych z trybem aktualizacji.

21
00:01:45,440 --> 00:01:48,440
Wic pozwl mi wyczyci dziennik, ale

22
00:01:48,570 --> 00:01:51,150
nie przeadowaem strony, a teraz co

23
00:01:51,480 --> 00:01:58,680
zmiemy, by moe usumy jedn z tych osb, Manu tutaj, jeli klikn na niego, zobaczysz

24
00:01:58,720 --> 00:02:01,080
przypomnienie w aplikacji. Poniewa stan si

25
00:02:01,290 --> 00:02:07,530
zmieni, a potem widzimy nasz aktualizacj, WillReceiveProps jest wywoywana, gdy otrzymujemy zaktualizowane rekwizyty, w ktrych

26
00:02:07,530 --> 00:02:13,980
mamy osoby, ktre s teraz tylko dwiema osobami. A nastpnie jestemy wewntrz renderowania osb i

27
00:02:13,980 --> 00:02:18,390
dwch skadnikw, ktre pozostay, poniewa te musiay zosta ponownie

28
00:02:18,420 --> 00:02:23,030
renderowane, zobaczye, e metoda renderowania jest rwnie czci cyklu aktualizacji.

29
00:02:23,520 --> 00:02:24,120
To

30
00:02:24,120 --> 00:02:25,570
wietnie, dodajmy kolejny

31
00:02:25,680 --> 00:02:33,840
hak, bardzo wan metod, powinnimy ComponentUpdate, ktra nie jest tylko metod wygody, ale tak, w ktrej naprawd moemy

32
00:02:33,840 --> 00:02:40,080
zaoszczdzi troch wydajnoci, jeli sprytnie z niej skorzystamy. Dostajemy nadchodzce rekwizyty i stan, a

33
00:02:40,080 --> 00:02:51,940
take dodam tutaj dziennik konsoli, w ktrym powiem aktualizowa osoby. js wewntrz shouldComponentUpdate, a

34
00:02:52,570 --> 00:02:59,880
ja wydrukuj rwnie nextProps i nextState.

35
00:02:59,890 --> 00:03:04,640
Teraz, jak ju powiedziaem, ta metoda powinna zwrci warto true lub

36
00:03:04,840 --> 00:03:08,300
false, jeli zwrci true, aktualizacja bdzie kontynuowana, jeli

37
00:03:08,320 --> 00:03:10,510
zwrci warto false, zatrzymamy cay proces.

38
00:03:10,510 --> 00:03:13,410
Teraz wrmy tutaj, eby zobaczy, jak to

39
00:03:13,720 --> 00:03:18,680
bdzie wyglda, jeli teraz wszystko zapisam, a ja przeczam osoby, e wszystko dziaa,

40
00:03:18,850 --> 00:03:20,850
ale teraz usumy Manu ponownie.

41
00:03:21,600 --> 00:03:24,870
Klikam na niego, ale widzisz, e si

42
00:03:24,870 --> 00:03:32,010
nie aktualizuje, moesz klikn na niego wiele razy, zobaczysz nawet, e nazywa si metoda aktualizacji, shouldComponentUpdate,

43
00:03:32,370 --> 00:03:34,490
a tablica tam si zmienia,

44
00:03:34,500 --> 00:03:41,280
osoby maj tu tylko jeden element, poniewa usunem dwie osoby, nie jest to odzwierciedlone w

45
00:03:41,610 --> 00:03:47,640
domenie, poniewa anulowalimy proces aktualizacji, wic nigdy nie docieramy do metod renderowania, ktre

46
00:03:47,640 --> 00:03:52,880
byyby wane dla informowania o reakcji na sprawdzenie, czy prawdziwy dom wymaga

47
00:03:52,890 --> 00:03:55,930
aktualizacji, co pokazuje nam moc metody shouldComponentUpdate.

48
00:03:56,310 --> 00:04:03,870
Teraz moesz si zastanawia, dlaczego kiedykolwiek zwrcilibymy faszywe, poniewa tutaj oczywicie amie aplikacj, ale moesz mie

49
00:04:04,070 --> 00:04:07,960
przypadki, w ktrych wiesz, e nie jest wymagana

50
00:04:08,150 --> 00:04:10,020
aktualizacja, i oczywicie zazwyczaj

51
00:04:10,040 --> 00:04:11,590
nie podajesz tutaj

52
00:04:11,700 --> 00:04:17,120
twardego ani prawdziwego kodu, zamiast tego sprawdzasz na podstawie nadchodzcych rekwizytw lub stanu.

53
00:04:17,120 --> 00:04:28,690
Na przykad tutaj wiemy, e chcemy kontynuowa tylko wtedy, gdy nextProps. ludzie nie s rwni temu.

54
00:04:28,760 --> 00:04:32,420
rekwizyty. osoby, ktre s starymi osobami.

55
00:04:32,420 --> 00:04:36,050
Teraz zaimplementowane, wrmy, przeczamy osoby, teraz jeli klikniesz na

56
00:04:36,060 --> 00:04:41,890
osob, z powodzeniem przechodzimy przez cay proces, poniewa tablica osb si zmienia, a przy

57
00:04:41,980 --> 00:04:42,840
okazji to

58
00:04:43,220 --> 00:04:50,390
tylko jest prawd, poniewa uylimy niezmiennego podejcia do aktualizowania osb. array, poniewa nie sprawdza to gboko tablicy

59
00:04:50,630 --> 00:04:53,410
osb, widzi tylko, czy s to rne

60
00:04:53,510 --> 00:04:59,500
obiekty, ale s to rne obiekty ze wzgldu na sposb, w jaki aktualizujemy osoby tutaj

61
00:04:59,510 --> 00:05:03,620
w naszej aplikacji. plik js. Tam, kiedy ustawiamy

62
00:05:03,620 --> 00:05:07,280
osoby, ustawiamy je na now tablic, wic jest

63
00:05:07,430 --> 00:05:10,570
to zupenie inny obiekt, to wane.

64
00:05:10,640 --> 00:05:14,130
shouldComponentUpdate tutaj nie sprawdza tego gboko, porwnuje tylko

65
00:05:14,270 --> 00:05:17,150
obiekty gwne, wskaniki s dokadne, ale

66
00:05:17,150 --> 00:05:23,100
s one rne, poniewa odtworzylimy now tablic. Ale na marginesie, co si teraz

67
00:05:23,120 --> 00:05:29,330
stanie, to jeli zmienimy jak inn waciwo, ktra moe nie by istotna

68
00:05:29,330 --> 00:05:31,430
dla tego komponentu, nie

69
00:05:31,430 --> 00:05:35,450
spowoduje to aktualizacji i moemy zapisa tutaj wydajno.

70
00:05:36,110 --> 00:05:38,170
Tak wic powinno to byComponentUpdate, niekoniecznie

71
00:05:38,180 --> 00:05:44,120
musisz go dodawa do kadego komponentu, poniewa oznaczaoby to, e powiniene uywa skadnikw stanowych w kadym

72
00:05:44,120 --> 00:05:49,400
miejscu i jest to troch przeciwne temu, co powiedziaem wczeniej o uywaniu komponentw funkcjonalnych

73
00:05:49,400 --> 00:05:51,360
tak czsto, jak to moliwe.

74
00:05:51,680 --> 00:05:58,580
Ale jeli masz przypadek uycia, o ktrym wiesz, tak, ten komponent otrzymuje wiele rekwizytw, ale w rzeczywistoci powinien

75
00:05:58,580 --> 00:06:02,050
on zosta ponownie renderowany tylko wtedy, gdy jeden z

76
00:06:02,120 --> 00:06:08,810
tych rekwizytw ulegnie zmianie, moesz przeksztaci komponent w stanowy i zaimplementowa funkcj Powinno si skomponowa sprawd, czy

77
00:06:08,960 --> 00:06:14,960
ten wany element, ktry jest dla ciebie wany, zmieni si lub nie i zignorowa wszystkie pozostae.

78
00:06:15,410 --> 00:06:21,870
W zwizku z tym otrzymujemy t dodatkow kontrol i moemy kontynuowa wdraanie przechwytw cyklu

79
00:06:22,040 --> 00:06:26,000
ycia, nastpnym cyklem ycia po shouldComponentUpdate jest componentWillUpdate.

80
00:06:26,030 --> 00:06:28,650
Teraz, gdy zdecydujemy, e mamy zamiar

81
00:06:28,690 --> 00:06:31,770
aktualizowa, tutaj rwnie otrzymuj nadchodzce stan i

82
00:06:31,910 --> 00:06:34,930
rekwizyty, wic teraz zrbmy to rwnie tutaj.

83
00:06:35,250 --> 00:06:37,910
Zezwalajmy na aktualizowanie osb. js wewntrz

84
00:06:37,970 --> 00:06:51,480
componentWillUpdate i log nextProps i nextState rwnie tutaj. Po tym, zapiszmy to i zobaczmy to jeszcze raz w akcji, przeczamy osoby,

85
00:06:51,480 --> 00:06:58,990
usuwamy log, usuwamy osob i widzimy aplikacj. js render componentWillReceiveProps,

86
00:06:59,440 --> 00:07:06,070
shouldComponentUpdate zaktualizuje, a nastpnie metody renderowania

87
00:07:06,070 --> 00:07:09,100
odpowiednich komponentw, idealne.

88
00:07:09,160 --> 00:07:13,000
Teraz nastpna metoda po ComponentWillUpdate zostaa wyrenderowana,

89
00:07:13,030 --> 00:07:14,540
ju to uzyskalimy.

90
00:07:14,710 --> 00:07:20,870
Nastpn metod jest componentDidUpdate, teraz moemy wywoywa

91
00:07:21,020 --> 00:07:31,370
efekty uboczne, podobnie jak w componentDidMount i szybko to te wydrukuj.

92
00:07:31,550 --> 00:07:38,130
Tutaj nie mamy nextProps i nextState, poniewa jest po aktualizacji, wanie to mamy. rekwizyty i to. stwierdza, e nowe rekwizyty

93
00:07:38,360 --> 00:07:44,360
i nowe pastwo to obecnie rekwizyty i obecny stan w tym momencie.

94
00:07:44,540 --> 00:07:50,690
Zapiszmy wic jeszcze raz, przeczamy osoby, usuwamy log, usuwamy osob i ca

95
00:07:50,720 --> 00:07:53,540
drog na dole, widzimy componentDidUpdate.

96
00:07:53,630 --> 00:07:55,580
Tak wic jest to cykl ycia

97
00:07:55,660 --> 00:08:02,960
aktualizacji, jeli aktualizacja jest uruchamiana z zewntrz z powodu zmiany rekwizytw, tak jak ma to miejsce w przypadku osb, tablica osb

98
00:08:03,030 --> 00:08:03,920
ulega zmianie.

