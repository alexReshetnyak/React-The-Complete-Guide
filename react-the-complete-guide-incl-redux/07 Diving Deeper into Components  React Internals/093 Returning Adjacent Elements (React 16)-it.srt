1
00:00:02,240 --> 00:00:08,830
Durante le ultime lezioni abbiamo avuto uno sguardo super dettagliato su tutte le teorie che stanno dietro alla reazione quando sta facendo dietro

2
00:00:08,830 --> 00:00:12,310
le quinte come si sta creando un componente nel ciclo di vita.

3
00:00:12,310 --> 00:00:18,710
E questo  importante, ovviamente, come possiamo semplicemente vedere il retroterra.

4
00:00:18,850 --> 00:00:26,290
Questo concetto dietro reagisce per ottimizzare la reazione in quanto  qualcosa che vedrai anche nei progetti del

5
00:00:26,300 --> 00:00:27,780
corso che costruiremo.

6
00:00:27,880 --> 00:00:33,310
Ci ovviamente rende ancora pi facile capire quando utilizzare un ciclo di vita come raggiungere

7
00:00:33,310 --> 00:00:38,620
il Web dal componente che monta e dove utilizzare un componente puro, ad esempio.

8
00:00:38,620 --> 00:00:45,610
prima idea e ci sono pi cose che vedrai dai progetti del Corso che voglio presentare in questo momento.

9
00:00:45,610 --> 00:00:47,290
Comunque questa dovrebbe essere una

10
00:00:47,590 --> 00:00:55,960
Una cosa  una cosa che ho menzionato in precedenza, quando impari che i nostri componenti hanno in genere un elemento wrapping che

11
00:00:55,990 --> 00:01:02,650
non devi avere e pi elementi siedono uno accanto all'altro a livello di root all'interno del tuo metodo

12
00:01:02,650 --> 00:01:07,830
di rendering o per essere precisi all'interno dell'istruzione return di il tuo metodo di rendering.

13
00:01:07,870 --> 00:01:14,340
Questa  una restrizione del re-act  una specie di modo sciolto di re-act 16 anche se per

14
00:01:14,380 --> 00:01:19,830
esempio in percentuale di J. S. non abbiamo problemi a restituire la persona a questo array.

15
00:01:19,840 --> 00:01:21,120
Abbiamo appena restituito un array qui.

16
00:01:21,130 --> 00:01:28,540
Tieni a mente che stiamo mappando questo array javascript in una matrice di J come elementi x.

17
00:01:28,540 --> 00:01:30,210
E questo  un take away importante.

18
00:01:30,220 --> 00:01:33,310
Puoi restituire una serie di elementi.

19
00:01:33,340 --> 00:01:38,450
Questo  qualcosa che non va bene l'elemento seduto l'uno accanto all'altro.

20
00:01:38,590 --> 00:01:43,740
Ma se  una serie di elementi GSX X come  qui funziona.

21
00:01:43,810 --> 00:01:47,800
E naturalmente puoi farlo anche qui di persona.

22
00:01:47,870 --> 00:01:52,000
S, puoi restituire una serie di elementi gratuiti di DS.

23
00:01:52,090 --> 00:02:00,870
Quindi ogni articolo dell'array deve avere anche una chiave, come nel caso della nostra percentuale. manualmente in questo modo si potrebbe ovviamente avere una matrice con il primo

24
00:02:01,210 --> 00:02:07,630
paragrafo, quindi un secondo elemento e il primo elemento qui.

25
00:02:07,630 --> 00:02:19,910
Quindi, non importa se si genera automaticamente la matrice con il metodo della mappa o se lo si fa

26
00:02:19,910 --> 00:02:20,380
Questo sarebbe un array valido per.

27
00:02:22,620 --> 00:02:25,230
Devi tenerlo.

28
00:02:25,440 --> 00:02:26,920
Quindi lasciatemi commentare la prima dichiarazione di ritorno per ora e fammi salvare questo codice aggiornato.

29
00:02:26,940 --> 00:02:32,450
Ora torna alla nostra applicazione.

30
00:02:32,490 --> 00:02:34,130
Apri la console ricaricata.

31
00:02:34,140 --> 00:02:36,870
E persone bersaglio.

32
00:02:37,960 --> 00:02:40,020
Vediamo che in realt abbiamo un errore nel mezzo che ogni bambino in un array dovrebbe avere una chiave.

33
00:02:40,060 --> 00:02:45,570
Vedi anche che mancano gli Stahl.

34
00:02:45,610 --> 00:02:47,740
Questo semplicemente accade perch non abbiamo

35
00:02:47,740 --> 00:02:53,270
pi questo elemento di fasciatura che aveva la classe di persone che in questo caso era necessaria

36
00:02:53,270 --> 00:02:59,970
perch qui il riavvolgimento di Dave non  solo un must ma qualcosa di cui tutti abbiamo bisogno per Stolley.

37
00:02:59,970 --> 00:03:00,860
Quindi, in questo caso, la svolta non  nemmeno ottimale, ma puoi farlo.

38
00:03:01,090 --> 00:03:05,690
E se si aggiunge una chiave con un ID univoco, ovviamente  possibile codificarlo.

39
00:03:05,800 --> 00:03:11,060
Se non  generato dinamicamente come  il tuo caso.

40
00:03:11,080 --> 00:03:14,670
Quindi, se lo fai, ora salvi questo e ricarichi la tua applicazione per far s che le persone non commettano errori.

41
00:03:14,980 --> 00:03:23,710
Ancora in questo esempio non sei la cosa pi utile perch hai effettivamente bisogno del div wrapping.

42
00:03:23,710 --> 00:03:30,150
Ma volevo sottolineare che puoi restituire gli array.

43
00:03:30,400 --> 00:03:34,540
Ora torner al mio vecchio codice qui ancora e la

44
00:03:34,590 --> 00:03:39,900
maggior parte del tempo avr codice come questo e non restituir gli array.

45
00:03:39,900 --> 00:03:41,080
L'eccezione  costituita da componenti che gestiscono il rendering di liste come il componente di una persona.

46
00:03:41,080 --> 00:03:47,340
In questo caso  molto conveniente che non sia necessario modificare la matrice di Raptor

47
00:03:47,610 --> 00:03:53,080
per aggiornare la matrice in modo da trasformare la matrice in una diff.

48
00:03:53,080 --> 00:03:56,240
Ora c' un'altra eccezione che  considerata una cabina di guida appena caduta.

49
00:03:56,250 --> 00:04:01,990
L tutti abbiamo MAI il wrapping da applicare al cockpit di classe B.

50
00:04:02,280 --> 00:04:07,580
Controlla DC come si trova anche se non abbiamo davvero bisogno di classe cockpit tranne per

51
00:04:07,620 --> 00:04:14,940
i pulsanti su cui vogliamo scope per questo componente Beh potremmo semplicemente creare la nostra propria classe di pulsanti per questo anche se

52
00:04:14,940 --> 00:04:22,960
potremmo definire una classe di pulsanti qui per habere combinato con la classe di lettura e anche per la lettura e il passaggio del mouse.

53
00:04:23,470 --> 00:04:32,170
Ora non ci sono classi di cockpit e tutto ci che dobbiamo fare nel nostro codice ora viene assegnato a questa

54
00:04:32,170 --> 00:04:39,070
classe di pulsanti in modo che per il nostro pulsante avremo sempre il pulsante classes come predefinito.

55
00:04:39,070 --> 00:04:48,300
Tieni presente i moduli ISS.

56
00:04:48,310 --> 00:04:49,950
serie di classi per leggere le classi.

57
00:04:49,960 --> 00:04:57,200
Ora dacci questa classe di pulsanti perch  stata definita qui nel file C S S e, nel caso in cui vogliamo aggiungere la classe di lettura, avremmo semplicemente una

58
00:04:57,200 --> 00:05:05,260
Ma prima del debito tutte le classi si chiudono e poi alla fine abbiamo solo Joyner con uno spazio bianco.

59
00:05:05,620 --> 00:05:14,230
Ora se questo se salviamo questo codice e torniamo al pulsante dell'applicazione sembra e funziona come prima.

60
00:05:14,240 --> 00:05:20,050
Ma ora questo div wrapping  ridondante.

61
00:05:20,270 --> 00:05:23,240
Possiamo rimuovere il nome della classe l e avere lo stesso stile di pulsante.

62
00:05:23,240 --> 00:05:28,040
Quindi  ridondante e sarebbe bello se potessi sbarazzartene.

63
00:05:28,280 --> 00:05:31,350
Ora una soluzione  rimuoverla e restituire una matrice di elementi qui.

64
00:05:31,370 --> 00:05:35,530
Ma c' anche un'altra alternativa.

65
00:05:35,780 --> 00:05:38,060
Possiamo creare un componente di ordine superiore per quello.

66
00:05:38,240 --> 00:05:42,190
Quindi andr alla fonte e creer una nuova cartella che

67
00:05:42,650 --> 00:05:50,990
chiamer HELOC per i componenti di ordine superiore. I componenti di ordine superiore sono componenti di azioni normali assolutamente normali.

68
00:05:51,560 --> 00:05:56,420
Hanno una specialit anche se non sono

69
00:05:56,750 --> 00:06:04,220
rappresentativi ma avvolgono i nostri componenti per aggiungere una certa funzionalit.

70
00:06:04,220 --> 00:06:05,730
Ad esempio possiamo creare un componente alks per ausiliari e questo componente avr una sola attivit.

71
00:06:05,750 --> 00:06:13,170
Sar una funzione alks che ottiene oggetti di scena e che restituisce alcuni Jael's

72
00:06:13,250 --> 00:06:23,030
X che ovviamente ha bisogno di importare reagire perch di nuovo  solo un componente normale in l per.

73
00:06:23,060 --> 00:06:27,600
Tutto quello che voglio fare  che

74
00:06:27,630 --> 00:06:38,040
voglio far uscire i bambini forse avvolti in parentesi graffe o non abbiamo nemmeno bisogno di farlo.

75
00:06:38,040 --> 00:06:39,100
Non possiamo semplicemente restituire i bambini di Propst in questo modo e ora esportare un valore predefinito.

76
00:06:39,210 --> 00:06:47,730
Funzione Alks.

77
00:06:47,850 --> 00:06:49,880
Questo componente potrebbe sembrare inutile perch

78
00:06:49,950 --> 00:06:56,100
tutto ci che fa  restituire ci che  passato tra il tag di apertura e di chiusura.

79
00:06:56,130 --> 00:06:58,200
Questo per  enorme perch ora possiamo utilizzarlo come componente alks e componente del cockpit.

80
00:06:58,590 --> 00:07:05,640
L possiamo importare alks con la A maiuscola da due livelli in su alie d'agenzia G-S.

81
00:07:05,970 --> 00:07:15,380
Senza l'estensione del file.

82
00:07:15,540 --> 00:07:17,090
Come sempre e ora possiamo avvolgere il nostro codice qui con il nostro componente alks personalizzato.

83
00:07:17,090 --> 00:07:25,840
Quello che abbiamo appena creato ora non abbiamo pi un errore qui perch abbiamo un componente rapin,

84
00:07:25,950 --> 00:07:33,000
ma in realt non creiamo un elemento HVM wrapping perch alks  vuoto.

85
00:07:33,000 --> 00:07:39,160
Potremmo solo restituire i bambini di scena.

86
00:07:39,180 --> 00:07:41,680
Questa  una chiave da portare via.

87
00:07:41,690 --> 00:07:43,060
Non dobbiamo raptus e nemmeno avere oggetti di scena.

88
00:07:43,200 --> 00:07:46,230
I bambini sono quindi elementi HVM l adiacenti, come nel caso qui.

89
00:07:46,230 --> 00:07:51,090
Questi sono i bambini.

90
00:07:51,090 --> 00:07:52,550
Funzioner ancora in re-act 16.

91
00:07:52,770 --> 00:07:55,310
 piuttosto interessante perch a

92
00:07:55,710 --> 00:08:02,370
volte non vuoi introdurre un elemento HVM separato come un div wrapping.

93
00:08:02,370 --> 00:08:03,090
Se non hai

94
00:08:03,270 --> 00:08:08,460
bisogno di motivi di stile, puoi persino distruggere il tuo restyling se usi blocchi flessibili o qualcosa del genere.

95
00:08:08,460 --> 00:08:10,270
Quindi se se salviamo questo otteniamo un'applicazione funzionante.

96
00:08:10,440 --> 00:08:14,680
Nessun errore  visibile tranne che per il reattore definito ma mai usato un bue.

97
00:08:14,730 --> 00:08:20,920
Questo perch non abbiamo nemmeno un elemento di trattamento re-act in modo che non possiamo rimuoverlo

98
00:08:20,940 --> 00:08:27,180
nemmeno renderlo ancora pi snello perch tutto ci che facciamo  distribuire i figli di prop.

99
00:08:27,180 --> 00:08:31,020
Quindi ora con una configurazione molto snella ma salviamo questo elemento HVM M-L ridondante in pi qui nella cabina di guida.

100
00:08:31,080 --> 00:08:38,910
Questo div di cui non abbiamo veramente bisogno.

101
00:08:38,910 --> 00:08:41,570
Questo  qualcosa che volevo portare alla

102
00:08:41,580 --> 00:08:47,640
tua attenzione che puoi restituire gli array come nelle persone e che puoi restituire i figli di

103
00:08:47,640 --> 00:08:54,180
prop come un bue e anche se DS potrebbe essere un re-act adiacente, va bene con quel re-act

104
00:08:54,180 --> 00:09:00,960
16 almeno qualcosa che tu tenere a mente e qualcosa che ti permetta di salvare quell'elemento div non necessario.

105
00:09:01,140 --> 00:09:03,690
Abbiamo dovuto usare prima questa soluzione qui.

106
00:09:03,690 --> 00:09:06,160
&nbsp;

