1
00:00:02,750 --> 00:00:08,810
Teraz, gdy spojrzelimy na referencje, rzumy okiem na inn niesamowit cech wprowadzon przez reakcj 16. 3, nowy kontekstowy interfejs API,

2
00:00:08,820 --> 00:00:11,210
wietne narzdzie do przekazywania

3
00:00:11,380 --> 00:00:14,900
informacji o stanie globalnym w Twojej aplikacji.

4
00:00:14,900 --> 00:00:22,790
Co mam na myli? Powiedzmy w naszym kokpicie tutaj, w kokpicie. Plik js, mamy nowy przycisk,

5
00:00:22,970 --> 00:00:25,070
pod przyciskiem, ktry ju

6
00:00:25,160 --> 00:00:29,360
mamy, dodam drugi i tam po prostu powiem login.

7
00:00:29,360 --> 00:00:36,260
Teraz ten przycisk po klikniciu powinien faktycznie ustawi jaki globalny stan logowania na true i

8
00:00:36,320 --> 00:00:38,560
zmieni co na rnych komponentach.

9
00:00:38,560 --> 00:00:45,750
Dodam wic suchacza typu "kliknij, aby klikn" i powiedzmy, e mamy tutaj prop, wic uyj

10
00:00:45,890 --> 00:00:48,110
rekwizytw, a nastpnie zalogujemy si.

11
00:00:48,200 --> 00:00:54,350
Musimy wic przekaza propozycj logowania do tego komponentu kokpitu, ktry powinien zawiera odwoanie do

12
00:00:54,350 --> 00:00:57,590
funkcji, ktra jest wykonywana po klikniciu przycisku.

13
00:00:57,630 --> 00:01:02,350
Wic idziemy do aplikacji. Plik js, w ktrym uywamy

14
00:01:02,900 --> 00:01:06,260
komponentu kokpitu tutaj. Dodam tutaj moj now waciwo

15
00:01:06,290 --> 00:01:09,800
logowania, czyli t, ktr przekazalimy, wyodrbniamy w kokpicie.

16
00:01:09,800 --> 00:01:13,380
Teraz powinno to zawiera odwoanie do metody, ktra zostanie

17
00:01:13,380 --> 00:01:21,140
wykonana, dodajmy wic nasz metod obsugi logowania w naszej aplikacji. js, a nastpnie tutaj chc

18
00:01:21,390 --> 00:01:23,870
zmieni stan, ktry

19
00:01:23,870 --> 00:01:30,440
true przecza status wskazania, powiedzmy. Przede wszystkim przydzielmy obsug logowania jako funkcj dla wniosku o logowanie, a nastpnie przejd

20
00:01:30,440 --> 00:01:32,620
do mojego stanu tej aplikacji. Plik js do

21
00:01:32,660 --> 00:01:39,610
gry, a nastpnie po prostu dodaj do niego now waciwo, ktra jest teraz uwierzytelniona, co jest teraz faszywe i

22
00:01:39,920 --> 00:01:45,420
powinno by prawd, gdy klikniemy ten przycisk powiedzmy. Wic w nowej funkcji obsugi

23
00:01:45,420 --> 00:01:48,930
logowania, zadzwoni do tego. setState i ustawi autentykacj na true,

24
00:01:48,950 --> 00:01:50,340
to wszystko, co tutaj robi.

25
00:01:50,390 --> 00:01:53,340
Teraz powiedzmy, e chc zmieni co w moim komponencie

26
00:01:53,420 --> 00:01:55,130
osobowym, gdy jest ustawione na true.

27
00:01:55,340 --> 00:02:00,830
Teraz moemy oczywicie sprbowa przekaza nasze stany osobom.

28
00:02:00,830 --> 00:02:09,320
Moemy to zrobi tutaj, e na tym zestawie osb, ktry ustawiamy, jest uwierzytelniony rekwizyt i ustawiamy to

29
00:02:09,320 --> 00:02:14,420
samo dla tego stanu uwierzytelnionego. W skadniku osoby otrzymujemy nowy

30
00:02:14,420 --> 00:02:18,730
rekwizyt i moemy przekaza go do komponentu pojedynczej osoby,

31
00:02:18,890 --> 00:02:27,170
moemy przekaza uwierzytelnione, a to bdzie odnosi si do tego rekwizytw jest uwierzytelniony, wic prop wanie ustawilimy

32
00:02:27,170 --> 00:02:28,850
w aplikacji. Plik js,

33
00:02:29,240 --> 00:02:33,980
a nastpnie skadnik osoby, moemy nastpnie wyprowadzi troch tekstu, jeli jestemy uwierzytelniane.

34
00:02:34,010 --> 00:02:41,540
Tak wic uyjmy potrjnego wyraenia, moemy powiedzie, jeli to jest uwierzytelnione, jeli to prawda, to chc

35
00:02:41,540 --> 00:02:45,680
wydrukowa, powiedzmy akapit, w ktrym powiem, e jestem uwierzytelniony

36
00:02:45,700 --> 00:02:46,710
inaczej, jeli

37
00:02:47,700 --> 00:02:50,530
to nie jest prawda, chc wypisa

38
00:02:50,580 --> 00:02:51,300
zero .

39
00:02:51,590 --> 00:02:57,060
Teraz z tym na miejscu, jeli to zapiszemy i przeadujemy, jeli klikniemy pokaza osoby, to dziaa dobrze.

40
00:02:57,080 --> 00:03:01,620
i jeli klikn tutaj ten adny przycisk logowania, zobaczymy, e jestem uwierzytelniony i wszyscy uytkownicy.

41
00:03:01,630 --> 00:03:04,360
Wic to dziaa, przekazujemy dane.

42
00:03:04,380 --> 00:03:10,310
Teraz jest to domylny sposb przekazywania danych i jest to zalecany sposb w wikszoci

43
00:03:10,310 --> 00:03:17,090
przypadkw uycia, jednak czasami masz jaki globalny stan, taki jak status uwierzytelniania lub na przykad dotyczcy

44
00:03:17,090 --> 00:03:19,570
globalnego koloru motywu skonfigurowanego przez uytkownika,

45
00:03:19,700 --> 00:03:20,960
takie rzeczy.

46
00:03:21,290 --> 00:03:26,570
Przekazywanie wartoci jest z pewnoci opcj, ale moesz uy nowego interfejsu API kontekstowego, aby byo

47
00:03:26,570 --> 00:03:27,770
to nieco atwiejsze.

48
00:03:27,770 --> 00:03:30,150
Dziaa to w ten sposb w

49
00:03:30,200 --> 00:03:30,690
aplikacji. Plik

50
00:03:30,750 --> 00:03:32,560
js, przede wszystkim tworzymy kontekst.

51
00:03:32,600 --> 00:03:39,380
Robimy to poza klas, po wprowadzeniu danych i bd przechowywa w staej i nazwa to AuthContext,

52
00:03:39,380 --> 00:03:40,550
tak jak to.

53
00:03:40,550 --> 00:03:46,800
Robimy to, reagujc na kontekst tworzenia, a wic now metod wprowadzon przez reakcj 16. 3 i tam mog ustawi warto

54
00:03:47,420 --> 00:03:53,360
domyln, tak jak false dla uwierzytelniania, false, jest to opcjonalne, ale waniejsz

55
00:03:53,480 --> 00:03:55,110
czci jest to,

56
00:03:55,400 --> 00:03:58,390
w jaki sposb korzystalimy z Autokontekstu.

57
00:03:58,610 --> 00:04:06,250
Robimy to w naszym kodzie jsx i AuthContext lub kontekst w oglnoci wsppracuje z dostawcami i konsumentami.

58
00:04:06,260 --> 00:04:12,540
Mamy cieki w naszej aplikacji, gdzie zapewniamy kontekst i inne, w ktrych go konsumujemy. Teraz w aplikacji. Plik js, to jest

59
00:04:12,590 --> 00:04:17,150
miejsce, w ktrym go udostpnilimy, poniewa tutaj zarzdzilimy stanem uwierzytelniania.

60
00:04:17,150 --> 00:04:24,410
Teraz pakujemy wszystkie komponenty, w ktrych planujemy wyodrbni t warto z kontekstu

61
00:04:24,410 --> 00:04:28,130
za pomoc specjalnego komponentu, komponentu AuthContext.

62
00:04:28,160 --> 00:04:31,800
Teraz nazwa komponentu jest po prostu nazw tej staej

63
00:04:31,850 --> 00:04:36,350
tutaj, wic utwrz kontekst tworzy komponent, ktrego moesz uy w jsx.

64
00:04:36,500 --> 00:04:38,990
Teraz mamy komponent AuthContext,

65
00:04:38,990 --> 00:04:41,790
jednak nie uywamy AuthContext w

66
00:04:41,900 --> 00:04:49,430
ten sposb, zamiast tego uzyskujemy dostp. dostawca, podskadnik utworzony przez reagowanie, aby tak rzec,

67
00:04:49,430 --> 00:04:57,310
i to take zamykamy tutaj z tagiem zamykajcym. Teraz osoby s pakowane przez dostawc AuthContext, innym wanym

68
00:04:57,310 --> 00:04:58,820
elementem jest teraz warto.

69
00:04:58,990 --> 00:05:04,750
Teraz otrzymujemy pocztkow warto faszu, poniewa zainicjowalimy kontekst tworzenia z wartoci false, ale jeli chcesz mie

70
00:05:04,870 --> 00:05:10,780
warto dynamiczn, ktra moe si zmieni, dodajemy warto prop i zauwamy, e ta warto musi by

71
00:05:10,780 --> 00:05:17,250
nazwana wartoci dla tego komponentu dostawcy Kontekstu autorskiego, a my ustawiamy go rwne wartoci, ktr chcemy uy i

72
00:05:17,350 --> 00:05:19,490
ta warto moe oczywicie ulec zmianie.

73
00:05:19,570 --> 00:05:25,600
Tak wic ustawi go w tym stanie uwierzytelnionym i zmieni si, gdy stan si zmieni.

74
00:05:25,600 --> 00:05:32,380
Teraz udostpniamy ten kontekst wszystkim komponentom podrzdnym w tym miejscu, bez wzgldu na to, na jakim poziomie s one do powiedzenia,

75
00:05:32,380 --> 00:05:36,610
a to oczywicie jest tylko jeden tutaj, ale moe to by wicej, a

76
00:05:36,760 --> 00:05:40,280
ten jeden komponent ma w rzeczywistoci wicej ni jeden komponent.

77
00:05:40,360 --> 00:05:46,450
Tak wic w komponencie osb moemy teraz pozby si tego uwierzytelnionego wniosku, ktry przesyamy do

78
00:05:46,450 --> 00:05:55,210
pojedynczej osoby i do aplikacji. js, moemy te si tego pozby. zalegalizowany. Proponujemy przekazywa ludziom, a

79
00:05:55,210 --> 00:06:02,180
dziki usunitym, moemy przej do komponentu pojedynczej osoby i wanie tam chcemy

80
00:06:02,180 --> 00:06:04,250
dobrze wykorzysta nasz kontekst.

81
00:06:04,250 --> 00:06:06,780
Przede wszystkim musimy mie moliwo

82
00:06:06,860 --> 00:06:13,040
zaimportowania go, abymy mogli wrci do aplikacji. Plik js i po prostu eksportujemy nasz Autokontekst

83
00:06:13,040 --> 00:06:19,820
tutaj, to czyni go dostpnym rwnie poza tym plikiem. Moemy teraz przej do plikw pojedynczych osb, nie

84
00:06:19,850 --> 00:06:28,220
do osb, to jest to, nad czym musimy pracowa, osobicie i tutaj, w naszym komponencie osobowym, teraz po prostu

85
00:06:28,400 --> 00:06:29,580
importujemy ten kontekst.

86
00:06:29,750 --> 00:06:32,640
Dlatego importujemy AuthContext z, a teraz musimy przej

87
00:06:32,660 --> 00:06:36,490
ca drog do naszej aplikacji. plik

88
00:06:36,550 --> 00:06:43,770
js. Importujemy AuthContext i teraz musimy owin element tam, gdzie chcemy uy

89
00:06:43,770 --> 00:06:44,590
tej wartoci kontekstowej.

90
00:06:44,670 --> 00:06:52,850
W naszym przypadku jest to pierwsza linijka tutaj, tam teraz tworz nowy komponent AuthContext, ale teraz nie jest dostawc,

91
00:06:52,940 --> 00:06:59,210
ale konsumentem, poniewa teraz bdziemy konsumowa t warto przechowywan w kontekcie, a ja po

92
00:06:59,210 --> 00:07:04,270
prostu zawr to cae wyraenie tutaj z naszym konsumentem Kontekstu autorskiego skadnik.

93
00:07:04,310 --> 00:07:10,670
Tutaj, w tym komponencie konsumenckim, wci uywamy pojedynczych nawiasw klamrowych, ale tam

94
00:07:10,670 --> 00:07:13,990
musimy wykona metod, ktra zareaguje dla nas.

95
00:07:14,060 --> 00:07:20,570
Ta metoda otrzymuje jeden argument i to s dane, ktre przekazujemy z kontekstem, moe to oczywicie

96
00:07:20,570 --> 00:07:23,880
by obiekt, w naszym przypadku jest to boolean.

97
00:07:24,020 --> 00:07:30,600
Oto nasz stan autoryzacji i zwracamy jsx, ktry chcemy renderowa.

98
00:07:30,740 --> 00:07:33,970
Teraz w naszym przypadku nie musimy ju sprawdza uwierzytelnionych

99
00:07:34,100 --> 00:07:40,880
rekwizytw, sprawdzamy tylko, czy auth, ktry jest dla nas boolean, jest prawd, w takim przypadku to renderujemy, w

100
00:07:40,880 --> 00:07:42,800
przeciwnym razie nic nie wyrenderujemy.

101
00:07:43,100 --> 00:07:48,290
A teraz korzystamy z interfejsu API kontekstu 16. 3 wprowadzone i moemy

102
00:07:48,350 --> 00:07:53,180
przekaza dane bez koniecznoci konfigurowania tego acucha rekwizytw.

103
00:07:53,540 --> 00:07:57,530
Jeli teraz ponownie zaadujesz ten komponent, klikniemy opcj Poka osoby, a

104
00:07:57,680 --> 00:07:59,210
my klikniemy login, nadal

105
00:07:59,240 --> 00:08:05,670
widzimy, e jestem uwierzytelniony, ale teraz bez przechodzenia wok rekwizytw. W wikszoci przypadkw zalecane jest stosowanie podpr, co sprawia, e elementy

106
00:08:05,720 --> 00:08:10,310
staj si bardziej przydatne do wielokrotnego uytku i nie wi ich ze sob tak bardzo.

107
00:08:10,310 --> 00:08:14,420
Jednak kontekstowy interfejs API jest naprawd wietny dla takich globalnych ustawie jak ten.

