1
00:00:02,240 --> 00:00:08,830
Podczas ostatnich wykadw mielimy bardzo szczegowe spojrzenie na ca teori reakcji, co dzieje

2
00:00:08,830 --> 00:00:12,310
si za kulisami, jak tworzy si komponent

3
00:00:12,310 --> 00:00:18,710
cyklu ycia, i wane jest oczywicie, jak moemy wykorzysta to teoretyczne to, koncepcja

4
00:00:18,850 --> 00:00:26,290
ta reaguje na optymalizacj reagowa na aplikacje. Jest to co, co zobaczysz rwnie w projektach

5
00:00:26,300 --> 00:00:27,780
kursu, ktre bdziemy

6
00:00:27,880 --> 00:00:33,310
budowa, co oczywicie uatwia zrozumienie, kiedy naley korzysta z cyklu ycia, jak

7
00:00:33,310 --> 00:00:38,620
dotrze do sieci z komponentu ComponentMount i gdzie uy czystego na przykad skadnik.

8
00:00:38,620 --> 00:00:45,610
To powinien by pierwszy pomys i wicej rzeczy mona zobaczy w trakcie kursw, ktre

9
00:00:45,610 --> 00:00:47,290
chc teraz przedstawi.

10
00:00:47,590 --> 00:00:55,960
Jedn rzecz jest to, o czym wspomniaem wczeniej, dowiedziae si, e nasze komponenty zazwyczaj zawieraj element owijajcy,

11
00:00:55,990 --> 00:01:02,650
w ktrym nie mona umieszcza wielu elementw obok siebie na poziomie katalogu gwnego w

12
00:01:02,650 --> 00:01:07,830
metodzie renderowania lub, cile mwic, w instrukcji return Twojej metody renderowania.

13
00:01:07,870 --> 00:01:14,340
Jest to ograniczenie reakcji, jest jednak nieco rozlunione przy 16 reakcji. Na przykad u osb. js nie mamy

14
00:01:14,380 --> 00:01:19,830
problemu z zwracaniem osoby, ta tablica, wanie

15
00:01:19,840 --> 00:01:21,120
zwrcilimy tablic,

16
00:01:21,130 --> 00:01:28,540
pamitajmy, e mapujemy tablic javascript na tablic elementw jsx.

17
00:01:28,540 --> 00:01:30,210
i to jest wane zabranie.

18
00:01:30,220 --> 00:01:33,310
Moesz zwrci tablic elementw, to jest co,

19
00:01:33,340 --> 00:01:38,450
co jest w porzdku, a nie element siedzcy obok siebie, ale

20
00:01:38,590 --> 00:01:43,740
jeli jest to tablica elementw jsx takich jak tutaj, to dziaa.

21
00:01:43,810 --> 00:01:47,800
Oczywicie moesz to zrobi tutaj osobicie. js moesz

22
00:01:47,870 --> 00:01:52,000
zwrci tablic tych trzech elementw.

23
00:01:52,090 --> 00:02:00,870
Kady element tablicy musi rwnie mie klucz, tak jak ma to miejsce w przypadku naszej tablicy person.

24
00:02:01,210 --> 00:02:07,630
Niezalenie od tego, czy automatycznie generujesz tablic za pomoc metody

25
00:02:07,630 --> 00:02:19,910
map, czy te robisz to rcznie, moesz oczywicie mie tablic z pierwszym akapitem, a nastpnie drugi element i trzeci element

26
00:02:19,910 --> 00:02:20,380
tutaj.

27
00:02:22,620 --> 00:02:25,230
To byaby poprawna tablica, chocia

28
00:02:25,440 --> 00:02:26,920
musisz j wpisa.

29
00:02:26,940 --> 00:02:32,450
Wic pozwl mi skomentowa pierwsze owiadczenie zwrotu i pozwl mi zapisa ten zaktualizowany

30
00:02:32,490 --> 00:02:34,130
kod, jeli teraz wrcimy

31
00:02:34,140 --> 00:02:36,870
do naszej aplikacji, otwrz konsol, przeadujemy

32
00:02:37,960 --> 00:02:40,020
j i przeczamy osoby, widzisz,

33
00:02:40,060 --> 00:02:45,570
e faktycznie dostalimy bd pomidzy tymi dziecko w tablicy powinno mie klucz.

34
00:02:45,610 --> 00:02:47,740
Wida rwnie, e brakuje stylw, co

35
00:02:47,740 --> 00:02:53,270
po prostu si dzieje, poniewa nie mamy ju tego elementu owijajcego, ktry mia klas osoby, ktra

36
00:02:53,270 --> 00:02:59,970
w tym przypadku bya potrzebna, poniewa tutaj zawijany div nie jest tylko koniecznoci, ale czym, czego potrzebujemy rwnie do

37
00:02:59,970 --> 00:03:00,860
stylizacji, Tak wic

38
00:03:01,090 --> 00:03:05,690
w tym przypadku tablica zwracajca nie jest nawet optymalna, ale moesz to zrobi

39
00:03:05,800 --> 00:03:11,060
i jeli dodasz klucz z unikalnym identyfikatorem, oczywicie moesz go zakodowa, jeli nie jest on

40
00:03:11,080 --> 00:03:14,670
generowany dynamicznie, tak jak ma to miejsce w tym przypadku.

41
00:03:14,980 --> 00:03:23,710
Jeli wic to zrobisz, jeli teraz zapiszesz to i przeadujesz aplikacj, przeczasz osoby, nie wida adnego bdu.

42
00:03:23,710 --> 00:03:30,150
Cigle w tym przykadzie nie jest to najbardziej przydatna rzecz, poniewa faktycznie potrzebujemy elementu div

43
00:03:30,400 --> 00:03:34,540
do zawijania, ale chciaem podkreli, e moesz zwrci tablice.

44
00:03:34,590 --> 00:03:39,900
Teraz wrc do mojego starego kodu tutaj, a ty bdziesz przez wikszo czasu mia kod taki jak ten

45
00:03:39,900 --> 00:03:41,080
i nie zwrci tablic.

46
00:03:41,080 --> 00:03:47,340
Wyjtkiem s komponenty, ktre obsuguj renderowanie list takich jak nasz komponent person, nie

47
00:03:47,610 --> 00:03:53,080
jest to bardzo wygodne, e nie musimy owija zmienionej tablicy, ta

48
00:03:53,080 --> 00:03:56,240
zaktualizowana, ta transformowana tablica w div.

49
00:03:56,250 --> 00:04:01,990
Teraz jest inny wyjtek, rozwamy ten kokpit. Plik js, tam mamy rwnie pakowanie

50
00:04:02,280 --> 00:04:07,580
div do zastosowania w klasie kokpitu. Jeli jednak wyewidencjonujemy plik

51
00:04:07,620 --> 00:04:14,940
css, tak naprawd nie potrzebujemy klasy kokpitu, z wyjtkiem przyciskw,

52
00:04:14,940 --> 00:04:22,960
na ktrych chcemy zasign tego komponentu. Moglibymy po prostu stworzy wasn klas przyciskw, chocia

53
00:04:23,470 --> 00:04:32,170
moglibymy tutaj zdefiniowa klas przyciskw dla zawisu w poczeniu z klas czerwon, a take czerwon i aktywn.

54
00:04:32,170 --> 00:04:39,070
Teraz nie ma tam klasy kokpitu i wszystko, co musimy teraz zrobi w

55
00:04:39,070 --> 00:04:48,300
naszym kodzie, jest przypisane do tej klasy przyciskw, wic dla naszego przycisku mamy domylnie przycisk klasy, pamitajmy,

56
00:04:48,310 --> 00:04:49,950
e moduy css

57
00:04:49,960 --> 00:04:57,200
teraz daj nam t klas przyciskw, poniewa zdefiniowa to tutaj w pliku css i

58
00:04:57,200 --> 00:05:05,260
dla przypadku, e chcemy doda klas czerwon, po prostu mielibymy tablic klas, wic klasy czerwone,

59
00:05:05,620 --> 00:05:14,230
ale przedtem wszystkie przyciski klas, a potem na kocu, po prostu doczamy to z bia spacj.

60
00:05:14,240 --> 00:05:20,050
Teraz, jeli zapiszemy ten kod i wrcimy do aplikacji, przycisk wyglda i dziaa tak jak

61
00:05:20,270 --> 00:05:23,240
poprzednio, ale teraz ten element zawijajcy jest zbdny.

62
00:05:23,240 --> 00:05:28,040
Moemy usun tam nazw klasy i nadal mie ten sam styl przycisku, wic jest

63
00:05:28,280 --> 00:05:31,350
zbdny i byoby mio, gdyby mg si go pozby.

64
00:05:31,370 --> 00:05:35,530
Teraz jednym z rozwiza jest usunicie go i zwrcenie tablicy

65
00:05:35,780 --> 00:05:38,060
elementw tutaj, ale istnieje rwnie

66
00:05:38,240 --> 00:05:42,190
inna alternatywa, moemy stworzy dla tego komponent wyszego rzdu.

67
00:05:42,650 --> 00:05:50,990
Wic pjd do rda i utworz nowy folder, ktry nazwabym hoc dla komponentw wyszego

68
00:05:51,560 --> 00:05:56,420
rzdu Komponenty wyszego rzdu s absolutnie normalnymi komponentami

69
00:05:56,750 --> 00:06:04,220
reagowania, maj jedn specjalno, ale nie reprezentuj, ale zawijaj inne komponenty do

70
00:06:04,220 --> 00:06:05,730
dodaj okrelon funkcjonalno.

71
00:06:05,750 --> 00:06:13,170
Na przykad moemy stworzy komponent aux dla pomocniczego, a ten komponent bdzie mia jedno

72
00:06:13,250 --> 00:06:23,030
pojedyncze zadanie, bdzie funkcj aux, ktra pobiera rekwizyty i ktra zwraca jsx, oczywicie musi zaimportowa reakcj, poniewa znowu

73
00:06:23,060 --> 00:06:27,600
jest to normalny komponent. W tym jednak

74
00:06:27,630 --> 00:06:38,040
wszystkim, co chc zrobi, to e chc wyprowadza rekwizyty dzieci owinite w nawiasy klamrowe lub nawet

75
00:06:38,040 --> 00:06:39,100
nie musimy

76
00:06:39,210 --> 00:06:47,730
tego robi, moemy po prostu zwrci rekwizyty tego typu dzieciom i teraz wyeksportowa

77
00:06:47,850 --> 00:06:49,880
domyln, funkcj aux.

78
00:06:49,950 --> 00:06:56,100
Ten komponent moe wyglda na bezuyteczny, poniewa wszystko, co robi, to zwracanie tego, co zostao przekazane

79
00:06:56,130 --> 00:06:58,200
midzy tagiem otwierajcym i zamykajcym.

80
00:06:58,590 --> 00:07:05,640
Jest to jednak ogromne, poniewa moemy teraz uy tego komponentu Aux w komponencie kokpitu, tam moemy

81
00:07:05,970 --> 00:07:15,380
zaimportowa Aux ze stoecznym A z dwch poziomw w gr auksa. js bez rozszerzenia

82
00:07:15,540 --> 00:07:17,090
pliku

83
00:07:17,090 --> 00:07:25,840
jak zawsze. A teraz moemy zawin nasz kod tutaj z naszym

84
00:07:25,950 --> 00:07:33,000
niestandardowym skadnikiem aux, tym, ktry wanie stworzylimy. Teraz nie mamy ju tutaj bdu, poniewa mamy

85
00:07:33,000 --> 00:07:39,160
komponent owijajcy, ale tak naprawd nie tworzymy owijajcego elementu html, poniewa aux jest pusty,

86
00:07:39,180 --> 00:07:41,680
moemy po prostu zwrci rekwizyty potomne.

87
00:07:41,690 --> 00:07:43,060
To jest klucz do

88
00:07:43,200 --> 00:07:46,230
zabrania, nie musimy tego owija, a nawet rekwizytw.

89
00:07:46,230 --> 00:07:51,090
dzieci s wtedy ssiaduj z elementami html, jak to jest w tym

90
00:07:51,090 --> 00:07:52,550
przypadku, s to dzieci,

91
00:07:52,770 --> 00:07:55,310
nadal bdzie dziaa w reakcji 16.

92
00:07:55,710 --> 00:08:02,370
To cakiem fajne, poniewa czasami nie chcesz wprowadza oddzielnego elementu html, takiego jak div do

93
00:08:02,370 --> 00:08:03,090
pakowania, jeli

94
00:08:03,270 --> 00:08:08,460
nie potrzebujesz do stylizacji, moe nawet zniszczy twoj stylizacj, jeli uywasz flexboksa

95
00:08:08,460 --> 00:08:10,270
lub czego podobnego.

96
00:08:10,440 --> 00:08:14,680
Tak wic, jeli to zapiszemy, otrzymamy dziaajc aplikacj, nie

97
00:08:14,730 --> 00:08:20,920
zobaczymy adnych bdw poza reakcj, ktra zostaa zdefiniowana, ale nigdy nie korzystalimy z Aux.

98
00:08:20,940 --> 00:08:27,180
Dzieje si tak dlatego, e nawet nie reagujemy na element tworzenia, wic moemy go tam usun, nawet dlatego, e

99
00:08:27,180 --> 00:08:31,020
jest on jeszcze szczuplejszy, poniewa wszystko, co robimy, rozprowadza rekwizyty dla dzieci.

100
00:08:31,080 --> 00:08:38,910
Teraz mamy bardzo szczup konfiguracj, ale zapisujemy ten dodatkowy zbdny element html tutaj w kokpicie, ten

101
00:08:38,910 --> 00:08:41,570
div, ktrego tak naprawd nie potrzebujemy.

102
00:08:41,580 --> 00:08:47,640
To jest co, co chciaem zwrci twoj uwag, e moesz zwraca tablice jak u

103
00:08:47,640 --> 00:08:54,180
osb i e moesz przywrci rekwizyty dzieciom takim jak aux i nawet jeli ssiaduj z

104
00:08:54,180 --> 00:09:00,960
nimi, reaguj z tym dobrze, przynajmniej reaguj 16. Co, o czym musisz pamita i co pozwala

105
00:09:01,140 --> 00:09:03,690
ci zaoszczdzi ten niepotrzebny element div,

106
00:09:03,690 --> 00:09:06,160
musielimy uy tutaj przed tym rozwizaniem.

