1
00:00:02,260 --> 00:00:07,840
Deixe-me voltar para a atualizao do componente e mostre que  importante e por que voc pode

2
00:00:08,490 --> 00:00:15,450
querer us-lo, vamos editar nosso aplicativo como nosso modelo um pouco para que possamos um caso de uso de demonstrao ou

3
00:00:15,460 --> 00:00:24,360
adicionar um novo cachorro Leboeuf ao cockpit, este BOTTEN deve sempre mostrar o tipo de diferena da pessoa para o alvo, mas, em seguida, um cockpit

4
00:00:24,360 --> 00:00:26,190
 que ele no alterna.

5
00:00:26,220 --> 00:00:27,730
Esconda-os se forem visveis.

6
00:00:27,750 --> 00:00:30,520
Mostre se eles no so utilizveis, mas mostram sempre.

7
00:00:30,570 --> 00:00:35,620
E se eles j so risveis, no faz nada ou  assim voc pensaria.

8
00:00:36,060 --> 00:00:44,810
criarei um novo manipulador de mtodos, todos nos executem todos na linha aqui com a funo de seta que  executada aps clicar l.

9
00:00:44,810 --> 00:00:50,350
Ento, vamos adicionar o ouvinte para cancelar o seu e, por um motivo de brevidade, no

10
00:00:50,370 --> 00:00:56,760
Ligue para este estado definido que, claro, pode fazer em linha ou duas e disse que as pessoas do show so verdadeiras.

11
00:00:56,910 --> 00:00:58,140
Ento sempre  verdade.

12
00:00:58,140 --> 00:01:05,560
Mais uma vez, nenhuma segmentao sempre  verdadeira, mas ficar feia, mas far o truque aqui.

13
00:01:05,580 --> 00:01:09,930
Agora, deixe-me ir at o final de sua atualizao.

14
00:01:09,930 --> 00:01:13,410
E devemos retornar verdade.

15
00:01:13,530 --> 00:01:15,270
Sempre verdade.

16
00:01:15,270 --> 00:01:22,820
Agora vamos para Paris e perseguimos e tambm comecemos o nosso cheque aqui e, em vez disso, devolvamos a verdade aqui tambm.

17
00:01:22,920 --> 00:01:26,820
Qual seria a dobra se no implementarmos a atualizao do componente.

18
00:01:27,000 --> 00:01:30,050
Agora vamos voltar para nossa aplicao l.

19
00:01:30,130 --> 00:01:31,360
Se carregado.

20
00:01:31,730 --> 00:01:36,400
Vamos clicar em Mostrar pessoas, vemos toda a pessoa e ela se comporta como antes.

21
00:01:36,470 --> 00:01:39,810
Agora, tudo foi cancelado para cancelar, mas no recarreguei a pgina.

22
00:01:40,060 --> 00:01:42,810
Deixe-me clicar em Mostrar pessoas novamente.

23
00:01:42,940 --> 00:01:49,330
Agora, o que voc v  que passamos por todos esses ciclos de vida novamente, se a atualizao do

24
00:01:49,360 --> 00:01:56,770
componente para a abertura Sim, ns atualizaremos as pessoas que recebero, mostraram que a atualizao que retornamos  verdade, ento ela continuar.

25
00:01:56,770 --> 00:02:04,600
A atualizao de renderizao ser atualizada para todos os reajustes de componente de pessoa que vo do componente completo e de todos

26
00:02:04,600 --> 00:02:07,870
os mtodos de renderizao, mesmo que nada tenha mudado.

27
00:02:07,900 --> 00:02:10,150
As bolsas no mudaram a matriz no mudou.

28
00:02:10,210 --> 00:02:12,070
Nada mudou.

29
00:02:12,260 --> 00:02:19,220
Agora, no confunda isso com re-agir, re-entrando no dormitrio real, o dormitrio do navegador.

30
00:02:19,270 --> 00:02:20,780
No fez isso.

31
00:02:20,800 --> 00:02:29,140
Voc pode confirmar isso, indo aos elementos e, se voc for s opes aqui  direita,

32
00:02:29,140 --> 00:02:33,050
v para mais ferramentas e depois renderizao.

33
00:02:33,190 --> 00:02:40,710
Voc pode ativar a pintura piscando para ver reas que precisam ser repintadas.

34
00:02:41,050 --> 00:02:47,030
Se voc fizer isso e clicar em Mostrar pessoas, voc ver que apenas o boto precisa ser pintado para a pessoa alvo.

35
00:02:47,230 --> 00:02:54,540
Voc ver muito ficando pintado, mas para as pessoas do show isso no acontece, ento no toca o

36
00:02:54,540 --> 00:02:55,220
dormitrio real.

37
00:02:55,290 --> 00:02:57,930
S e isso simplesmente aconteceu porque ele pairava sobre ele.

38
00:02:57,930 --> 00:03:00,230
Por sinal e desabilitarei,  novamente.

39
00:03:00,300 --> 00:03:03,490
S tocou, mas isso no tocou na verdadeira dom.

40
00:03:03,810 --> 00:03:08,690
E vou voltar para a forma como reagimos, na verdade, decide se deve tocar o dom real ou no.

41
00:03:08,700 --> 00:03:15,150
Nas prximas palestras, mas, por enquanto, podemos saber que no toca necessariamente o Dom real somente se

42
00:03:15,150 --> 00:03:18,960
detectar diferenas quanto ao que v nos mtodos de renderizao.

43
00:03:19,080 --> 00:03:22,520
Mas, claro,  preciso executar para processar mtodos.

44
00:03:22,620 --> 00:03:25,330
E, como voc pode ver no console, fez isso.

45
00:03:25,380 --> 00:03:27,150
Ele executou todos os mtodos de renderizao.

46
00:03:27,390 --> 00:03:30,820
Isso, claro,  um pouco ineficiente, especialmente para aplicativos maiores.

47
00:03:30,840 --> 00:03:37,090
Aqui no nos custou muito, mas se voc tem um monte de filhos, no  uma lista muito longa de

48
00:03:37,530 --> 00:03:41,760
pessoas que esto passando por todos os mtodos de renderizao, mesmo que nada mudou.

49
00:03:41,910 --> 00:03:44,820
Realmente pode ser um problema de desempenho.

50
00:03:44,970 --> 00:03:46,830
 por isso que uma dvida privada.

51
00:03:46,950 --> 00:03:52,450
Tivemos que verificar se a atualizao do componente e as pessoas esto saindo verdadeiramente novamente e

52
00:03:52,450 --> 00:03:53,620
reintroduzem a dvida.

53
00:03:53,700 --> 00:03:59,880
Agora, aqui, ele realmente verifica se h uma diferena entre as pessoas e apenas pr-renderizado 

54
00:03:59,880 --> 00:04:01,790
se ele detecta essa diferena.

55
00:04:01,830 --> 00:04:07,010
Voc pode, naturalmente, adicionar o cheque para todas as outras propriedades tambm.

56
00:04:07,260 --> 00:04:16,820
diferente ou se a propriedade do nmero mudado do prximo prop, mudamos sua diferena para a implementao anterior de mudou.

57
00:04:16,860 --> 00:04:19,670
Ento, se o prximo adequado for

58
00:04:19,890 --> 00:04:27,670
Ento, se isso no  igual a este Propst mudou e, finalmente, o mesmo para os prximos problemas.

59
00:04:27,790 --> 00:04:30,980
Colete se os dados no forem iguais aos deste clique.

60
00:04:30,990 --> 00:04:35,430
Ento, se alguma das mudanas relevantes do suporte agora continuamos com a atualizao.

61
00:04:35,670 --> 00:04:39,270
Mas se nenhuma propriedade mudou, no vamos l.

62
00:04:39,540 --> 00:04:44,160
Como voc pode ver aqui, recarregue, clique em Mostrar pessoas.

63
00:04:44,310 --> 00:04:49,920
por todos os mtodos de renderizao,  claro, o que faz muito sentido porque precisamos renderizar a lista

64
00:04:49,960 --> 00:04:55,920
inteira, mas se ele apagou snakelike mostrar pessoas de novo, voc ver que estamos dentro deve atualizar o componente.

65
00:04:55,950 --> 00:04:56,420
Ns passamos

66
00:04:56,430 --> 00:04:59,820
Na verdade, sim ir atualizar realmente fez o eps.

67
00:04:59,850 --> 00:05:06,630
Sim, porque sempre devolvemos a verdade e devemos atualizar o componente, mas, em seguida, para as pessoas que

68
00:05:06,630 --> 00:05:10,950
perseguimos, receberemos a atualizao do componente deve ser atualizada e estamos finalizados.

69
00:05:10,950 --> 00:05:12,120
No continuamos.

70
00:05:12,120 --> 00:05:19,070
Ns no chamamos render 4 pessoas e componentes de pessoas individuais, porque ns detectamos se a

71
00:05:19,080 --> 00:05:24,190
atualizao calculada de pessoas geus que o Propst realmente no mudou.

72
00:05:24,540 --> 00:05:31,460
Ento, o nosso clique aqui no desencadeou uma renderizao real ou uma chamada de renderizao para todos esses componentes.

73
00:05:31,500 --> 00:05:37,780
Parou as pessoas,  claro, voc pode fazer o mesmo no Aperture Yes em vez de sempre retornar verdadeiro.

74
00:05:37,980 --> 00:05:41,120
Podemos verificar se alguma coisa realmente mudou em nosso estado.

75
00:05:41,400 --> 00:05:50,510
Ento, se o nosso prximo estado da pessoa, um dos estados, temos alm do nosso estado e mostra pessoas.

76
00:05:50,710 --> 00:06:01,750
Portanto, se as prximas prises estaduais no forem iguais a estas prises estaduais ou se o prximo estado mostrar prises no for igual a

77
00:06:01,750 --> 00:06:11,460
este estado, mostre pessoas com este check-in, devemos ver que se eu clicar em Mostrar pessoas passamos por todas as etapas

78
00:06:11,460 --> 00:06:17,630
corretamente, ns renderizamos Ele  claro para cancelar e clique em Mostrar pessoa novamente.

79
00:06:17,910 --> 00:06:23,640
Ns apenas lemos a atualizao do componente e  isso porque ns detectamos que nada mudou.

80
00:06:23,640 --> 00:06:25,210
No preciso continuar.

81
00:06:25,770 --> 00:06:31,020
Se eu remover uma pessoa,  correto faz-lo e passar por todas essas etapas.

82
00:06:31,110 --> 00:06:37,740
Ento, esta  a melhor maneira possvel de lidar com isso agora, porque ns nos certificamos de

83
00:06:37,740 --> 00:06:43,720
que s executamos o processo de atualizao se precisarmos fazer isso e ignoramos o trabalho desnecessrio.

84
00:06:43,980 --> 00:06:46,440
E  claro que eles so para hits de desempenho.

85
00:06:46,560 --> 00:06:52,710
Se na verdade no precisamos fazer atualizaes porque sabemos o que a Propst no mudou, no  necessrio

86
00:06:52,710 --> 00:06:53,830
fazer tudo isso.

87
00:06:53,970 --> 00:06:58,200
Agora, para uma verificao de disco, verifique as propriedades do estado.

88
00:06:58,320 --> 00:07:03,100
Ento, todas as propriedades em nosso estado ou propriedades do prop.

89
00:07:03,240 --> 00:07:07,850
Ento, qualquer propriedade no objeto do suporte se qualquer uma dessas alteraes for verificada.

90
00:07:07,860 --> 00:07:10,980
Ns no precisamos montar sozinhos se  isso que queremos fazer.

91
00:07:11,040 --> 00:07:17,880
Faa isso como uma comparao superficial e estou dizendo raso porque no verifica profundamente esses objetos.

92
00:07:18,000 --> 00:07:23,540
S detecta diferenas porque as atualizamos de forma imutvel, o que  importante.

93
00:07:23,910 --> 00:07:30,870
Ento, se voc quiser fazer essa verificao superficial, na verdade, no precisamos implementar a atualizao do componente.

94
00:07:31,140 --> 00:07:38,740
Em vez disso, podemos comentar isso e herdar de um tipo diferente de componente um componente puro.

95
00:07:39,030 --> 00:07:45,350
Este  um objeto diferente exposto pela biblioteca re-act e  exatamente o mesmo que o componente

96
00:07:45,900 --> 00:07:50,880
normal, mas tem esse tipo de verificao de atualizao do componente shoat j incorporada.

97
00:07:50,970 --> 00:07:56,640
Ele basicamente passar por todas as propriedades dos adereos e compar-los- com seus cultos antigos e

98
00:07:57,030 --> 00:08:02,320
apenas continuar atualizando se ele detecta as diferenas e faz o mesmo pelo estado.

99
00:08:02,430 --> 00:08:07,080
Ento, tambm podemos definir o seu componente.

100
00:08:07,410 --> 00:08:13,450
Ento, vamos importar seu componente at certo ponto seu componente com isso.

101
00:08:13,620 --> 00:08:14,940
Vamos tentar isso.

102
00:08:16,400 --> 00:08:17,380
E ainda.

103
00:08:17,390 --> 00:08:18,890
Obrigado pela mensagem de erro.

104
00:08:18,890 --> 00:08:22,400
Devemos ento remover a atualizao do componente em um componente puro.

105
00:08:22,490 --> 00:08:24,910
Porque novamente isso  tratado por reagir.

106
00:08:25,280 --> 00:08:28,490
Ento, tente novamente o show que as pessoas trabalham.

107
00:08:28,700 --> 00:08:33,110
Ao clicar nele, no vemos o bloqueio do console, porque no temos o nosso prprio mtodo de

108
00:08:33,110 --> 00:08:39,040
atualizao do componente do shell, mas veremos os logs do console de todas as atualizaes, pois eu posso provar se mudamos algo.

109
00:08:39,170 --> 00:08:45,290
Ento, obtemos o mesmo comportamento que antes, mas agora otimizados por reagir por esta implementao automtica

110
00:08:45,320 --> 00:08:47,300
da atualizao do componente deve.

111
00:08:47,300 --> 00:08:51,580
Se voc usar sempre componentes puros para toda a aplicao.

112
00:08:51,800 --> 00:08:57,590
que use componentes funcionais o mais rpido possvel, onde voc no pode usar isso porque voc no estende nada.

113
00:08:57,590 --> 00:09:00,770
E como isso faz sentido se eu tambm lhe dizer

114
00:09:01,080 --> 00:09:05,540
Bem, a resposta  que voc no deve usar seu componente em todos os lugares em sua aplicao.

115
00:09:05,720 --> 00:09:11,740
Voc s deve us-lo se souber que as atualizaes podem no ser necessrias.

116
00:09:11,810 --> 00:09:16,620
Por outro lado, voc possui componentes que s podem depender de um ou dois adereos.

117
00:09:16,790 --> 00:09:21,620
E voc sabe sempre que os atualizadores acionam para este componente. Eu quero atualiz-lo

118
00:09:21,620 --> 00:09:29,270
porque talvez eu tenha um par de componentes puros nas principais posies neste componente que impedem a atualizao de qualquer componente filho

119
00:09:29,270 --> 00:09:35,090
de qualquer forma, ento no faa de tudo um componente puro porque Voc tambm pode obter um

120
00:09:35,150 --> 00:09:36,730
sucesso de desempenho no final.

121
00:09:36,770 --> 00:09:39,380
Isso deve ser implementado para voc.

122
00:09:39,530 --> 00:09:43,880
E compara todos os adereos e estados antigos com os novos adereos e estados.

123
00:09:43,880 --> 00:09:46,860
H, claro, tambm leva um pouco de desempenho.

124
00:09:47,060 --> 00:09:52,850
E se voc implement-lo em algum lugar onde ele sempre ter sucesso porque voc j

125
00:09:52,840 --> 00:09:59,350
fez essa verificao em um ponto mais alto desse componente, ento voc realmente est prejudicando sua aplicao.

126
00:09:59,360 --> 00:10:01,730
Ento, nem tudo deve ser um componente puro.

127
00:10:01,940 --> 00:10:06,300
Contudo, alguns componentes puros estrategicamente colocados fazem muito sentido.

128
00:10:06,510 --> 00:10:09,010
Agora, para descobrir onde coloc-los.

129
00:10:09,140 --> 00:10:15,860
Precisamos obter uma melhor compreenso de como o re-agir atravessa nosso componente e como

130
00:10:15,860 --> 00:10:19,420
ele realmente decide realmente atualizar o amanhecer real.

131
00:10:19,430 --> 00:10:21,430
Vamos dar uma olhada nisso na prxima palestra.

