1
00:00:02,220 --> 00:00:07,230
Ya casi hemos terminado con los ciclos de vida ahora que hemos echado un vistazo a la actualizacin desencadenada desde

2
00:00:07,470 --> 00:00:08,970
el exterior por los cambios Propst.

3
00:00:09,060 --> 00:00:14,760
Echemos un vistazo al proceso del ciclo de vida de la actualizacin para cambios internos debido a un estado establecido bsicamente

4
00:00:15,300 --> 00:00:15,710
all.

5
00:00:15,750 --> 00:00:20,340
No comenzamos con el componente que recibir accesorios porque no recibir accesorios.

6
00:00:20,340 --> 00:00:25,320
En cambio, comenzamos de inmediato, que debera actualizarse el componente y obtenemos la siguiente etapa o dos del prximo accesorio.

7
00:00:25,440 --> 00:00:30,960
Y al igual que antes, podemos cancelar el proceso de actualizacin aqu y, como antes, debemos decidir si

8
00:00:30,960 --> 00:00:32,000
continuar o no.

9
00:00:32,100 --> 00:00:33,870
Y no deberamos causar efectos secundarios.

10
00:00:33,870 --> 00:00:36,580
Entonces la lgica es la misma que antes aqu.

11
00:00:36,740 --> 00:00:43,620
A partir de entonces llegamos al componente bien montado y la lgica es la misma que antes aqu, luego renderizamos,

12
00:00:43,620 --> 00:00:47,490
luego renderizamos todos los componentes secundarios y esa actualizacin al final.

13
00:00:47,730 --> 00:00:53,680
Y lo repaso rpidamente porque bsicamente es el mismo proceso que antes para un cambio externo.

14
00:00:53,730 --> 00:00:55,260
Disparador externo

15
00:00:55,500 --> 00:01:01,320
La nica diferencia es que aqu falta el primer gancho del ciclo de vida que recibir props.

16
00:01:01,320 --> 00:01:07,080
ni implementar ningn mtodo nuevo ahora en nuestro proyecto porque ya tenemos todos estos mtodos.

17
00:01:07,080 --> 00:01:08,770
Entonces, no necesitamos incluir

18
00:01:09,090 --> 00:01:10,710
Sin embargo, los implementar.

19
00:01:10,740 --> 00:01:15,730
En realidad s, que es el lugar donde cambiamos de estado para que podamos verlo all.

20
00:01:15,740 --> 00:01:18,630
P Entonces, despus de MT y as sucesivamente.

21
00:01:18,690 --> 00:01:23,520
Quiero implementar la actualizacin del componente escudo actualizar y as sucesivamente los mtodos.

22
00:01:23,790 --> 00:01:30,400
As que voy a copiarlos del ajedrez de personas y moverlos a la realidad.

23
00:01:30,600 --> 00:01:39,480
Y, por supuesto, sus ojos deben ajustar su referencia, sus personas sern aptas para reemplazar a todas las personas J como referencia

24
00:01:39,540 --> 00:01:41,960
en el registro de la consola.

25
00:01:41,960 --> 00:01:46,200
Aqu con Apicius y debera tratarse de una actualizacin aqu.

26
00:01:46,200 --> 00:01:49,170
Tambin lo establecer en verdad por ahora.

27
00:01:49,170 --> 00:01:53,960
Ahora guardemos esto y veamos ahora cmo esta influencia recarg nuestra aplicacin.

28
00:01:54,180 --> 00:01:57,300
No vemos ningn mtodo de actualizacin aqu.

29
00:01:57,390 --> 00:02:03,030
Permtanme aclarar esto y hacer clic en el botn. No hay cambios de aviso que vern desde el principio.

30
00:02:03,060 --> 00:02:08,850
De hecho, estamos en la actualizacin ya que la activacin de la actualizacin del componente tiene sentido, ya que

31
00:02:08,850 --> 00:02:15,410
al hacer clic solo en este botn, se llama a establecer estado y, por lo tanto, desencadenar la actualizacin de ese componente.

32
00:02:15,720 --> 00:02:22,050
en los componentes secundarios porque antes de que podamos cambiar los componentes secundarios, el estado debe actualizarse.

33
00:02:22,410 --> 00:02:26,570
Obviamente, antes de cambiar los puntales, desencaden el proceso de actualizacin

34
00:02:26,970 --> 00:02:33,530
Por lo tanto, debemos completar la actualizacin y luego el componente se actualizar y luego se procesar.

35
00:02:33,630 --> 00:02:37,200
Y ahora nos vamos para el proceso normal.

36
00:02:37,320 --> 00:02:43,440
Al final, aunque vemos que el componente interno se actualiz para la aplicacin Geass.

37
00:02:43,440 --> 00:02:44,630
Entonces esto es importante.

38
00:02:44,790 --> 00:02:50,070
S, ella se est actualizando primero porque se activ tras un cambio de estado que,

39
00:02:50,070 --> 00:02:52,190
obviamente, es lo primero que sucede.

40
00:02:52,260 --> 00:02:54,480
Estos son todos los ganchos del ciclo de vida.

41
00:02:54,480 --> 00:03:00,420
Ahora regresemos para enviar la actualizacin del componente y cmo podemos mejorar el rendimiento de nuestra aplicacin

42
00:03:00,420 --> 00:03:01,070
con l.

43
00:03:01,080 --> 00:03:02,530
Dejame mostrarte un ejemplo.

