1
00:00:02,750 --> 00:00:08,810
E analisamos as referncias, vamos dar uma olhada em um recurso impressionante introduzido pela re-act 16

2
00:00:08,820 --> 00:00:11,210
para liberar a nova API de contexto.

3
00:00:11,380 --> 00:00:14,900
Uma tima ferramenta para passar o estado global pela Europa.

4
00:00:14,900 --> 00:00:22,790
Agora, o que eu quero dizer com isso, digamos que em nosso cockpit aqui no cockpit, ns temos um novo boto abaixo

5
00:00:22,970 --> 00:00:25,070
do boto que ns j temos.

6
00:00:25,160 --> 00:00:29,360
Vou adicionar um segundo e, finalmente, dizer bloqueio.

7
00:00:29,360 --> 00:00:36,260
Agora, esse boto, uma vez clicado, deve definir algum estgio de logon global como true e

8
00:00:36,320 --> 00:00:38,560
alterar algo em componentes diferentes.

9
00:00:38,560 --> 00:00:45,750
Ento adicione um ouvinte no click e digamos que temos um suporte aqui, ento eu vou usar adereos.

10
00:00:45,890 --> 00:00:48,110
E ento ns entramos.

11
00:00:48,200 --> 00:00:54,350
Ento precisamos passar um bloqueio no componente prop cockpit que deve conter uma referncia a uma

12
00:00:54,350 --> 00:00:57,590
funo que  executada quando clicamos no boto.

13
00:00:57,630 --> 00:01:02,350
Ento v para o asfalto que  onde ns usamos o componente cockpit aqui.

14
00:01:02,900 --> 00:01:06,260
E adicionarei minha nova propriedade de login aqui.

15
00:01:06,290 --> 00:01:09,800
Essa  a que passamos, estamos extraindo na cabine.

16
00:01:09,800 --> 00:01:13,380
Agora, isso deve conter uma referncia a um mtodo executado.

17
00:01:13,380 --> 00:01:21,140
Ento, vamos adicionar nosso mtodo manipulador de log aqui em nosso arquivo Apogees e, em seguida, aqui eu quero alterar um estado dat

18
00:01:21,390 --> 00:01:23,870
verdadeiro para desativar o status de indicao.

19
00:01:23,870 --> 00:01:30,440
Digamos que antes de tudo vamos atribuir o manipulador de log in como uma funo para o log e Propp e ento eu

20
00:01:30,440 --> 00:01:32,620
vou para o meu estado do zapper.

21
00:01:32,660 --> 00:01:39,610
Sim caia todo o caminho at aqui e, em seguida, basta adicionar uma nova propriedade para tudo isso que  falso agora.

22
00:01:39,920 --> 00:01:45,420
E isso deve ser verdade, uma vez que clicamos nesse boto, digamos assim para baixo e, em seguida, voc faz o login no

23
00:01:45,420 --> 00:01:48,930
manipulador, todos chamam esse estado de set e eu configuro o indicado como true.

24
00:01:48,950 --> 00:01:50,340
 tudo o que estou fazendo aqui.

25
00:01:50,390 --> 00:01:53,340
Agora vamos dizer que eu quero mudar alguma coisa no meu componente pessoal sempre.

26
00:01:53,420 --> 00:01:55,130
Isso  definido como verdadeiro.

27
00:01:55,340 --> 00:02:00,830
Agora, o que podemos fazer,  claro,  que podemos tentar passar nossos estados para as pessoas.

28
00:02:00,830 --> 00:02:09,320
Podemos fazer este ano que, no Ira dessa pessoa, estamos estabelecendo a Propp autenticada e estabelecemos isso

29
00:02:09,320 --> 00:02:14,420
igual a esse estado de sindicado no componente da pessoa.

30
00:02:14,420 --> 00:02:18,730
Estamos recebendo este novo suporte e podemos pass-lo para o componente de pessoa nica.

31
00:02:18,890 --> 00:02:27,170
Ns podemos passar autenticados e isso vai se referir a este processo  autenticado, provavelmente, apenas configurar

32
00:02:27,170 --> 00:02:28,850
e sim cair.

33
00:02:29,240 --> 00:02:33,980
E ento o componente pessoa, podemos ento imprimir algum texto se ficarmos ofendidos.

34
00:02:34,010 --> 00:02:41,540
Ento, aqui vamos usar uma expresso ternria que poderamos dizer se isso estimular todos os vindicados, se isso for

35
00:02:41,540 --> 00:02:45,680
verdade, ento, em um derramamento, digamos um pargrafo, re-dizer tudo.

36
00:02:45,700 --> 00:02:46,710
Vindicated.

37
00:02:47,700 --> 00:02:50,530
Oberweis se isso no for verdade de uma sada.

38
00:02:50,580 --> 00:02:51,300
Agora.

39
00:02:51,590 --> 00:02:57,060
Agora, com isso no lugar, se salvarmos isso e recarregarmos por clique Mostrar pessoas funciona bem.

40
00:02:57,080 --> 00:03:01,620
E se um clique faz bom login, mas aqui vemos que estou autenticado e todos os usurios.

41
00:03:01,630 --> 00:03:04,360
Ento  nesse trabalho que estamos passando dados.

42
00:03:04,380 --> 00:03:10,310
Agora, essa  a maneira padro de transmitir dados e  a maneira recomendada para a maioria dos casos de uso.

43
00:03:10,310 --> 00:03:17,090
No entanto, s vezes voc tem algum estado global como o status de autenticao ou, por exemplo, em relao a uma

44
00:03:17,090 --> 00:03:19,570
cor de tema global configurada pelo usurio.

45
00:03:19,700 --> 00:03:20,960
Coisas como.

46
00:03:21,290 --> 00:03:26,570
Agora, passar os valores  certamente uma opo, mas voc pode us-lo na sua API de contexto para

47
00:03:26,570 --> 00:03:27,770
facilitar um pouco mais.

48
00:03:27,770 --> 00:03:30,150
Funciona assim no aplicativo.

49
00:03:30,200 --> 00:03:30,690
Sim.

50
00:03:30,750 --> 00:03:32,560
Primeiro de tudo criar contexto.

51
00:03:32,600 --> 00:03:39,380
Fazemos isso fora da classe oferecida as entradas e armazenadas em uma constante e vou nome-lo fora

52
00:03:39,380 --> 00:03:40,550
contexto como este.

53
00:03:40,550 --> 00:03:46,800
Fazemos isso com o contexto de criao de re-ato para que um novo mtodo introduzido pelo re-act 16 seja livre.

54
00:03:47,420 --> 00:03:53,360
E l eu posso configurar um valor padro como falso para autenticao falsa.

55
00:03:53,480 --> 00:03:55,110
Isso  opcional embora.

56
00:03:55,400 --> 00:03:58,390
A parte mais importante  como usamos o contexto off.

57
00:03:58,610 --> 00:04:06,250
Fazemos isso em nosso cdigo GSX e ou em contexto ou contexto em geral, trabalha com provedores e consumidores.

58
00:04:06,260 --> 00:04:12,540
Temos peas em nosso laboratrio onde fornecemos o contexto e  onde ns consumimos o asfalto conhecido.

59
00:04:12,590 --> 00:04:17,150
 aqui que fornecemos porque aqui conseguimos o seu status de justificativa.

60
00:04:17,150 --> 00:04:24,410
Ento agora estamos envolvendo todos os componentes onde planejamos extrair esse valor do contexto com

61
00:04:24,410 --> 00:04:28,130
um componente especial do componente de contexto.

62
00:04:28,160 --> 00:04:31,800
Agora o nome do componente  simplesmente o nome dessa constante aqui.

63
00:04:31,850 --> 00:04:36,350
Portanto, criar contexto cria um componente que voc pode usar o GSX.

64
00:04:36,500 --> 00:04:38,990
Ento agora temos o componente off context.

65
00:04:38,990 --> 00:04:41,790
No entanto, no usamos contexto fora como este.

66
00:04:41,900 --> 00:04:49,430
Em vez disso, acessamos o provedor de ponto, um subcomponente criado por reagir, por assim dizer, e isso  tambm o que

67
00:04:49,430 --> 00:04:57,310
fechamos aqui, com a tag de fechamento agora envolvida com contexto fora de contexto para bloco de construo mais amplo e importante.

68
00:04:57,310 --> 00:04:58,820
Agora  valorizar.

69
00:04:58,990 --> 00:05:04,750
Agora, obtemos esse valor inicial ou false porque inicializamos a criao do contexto com false.

70
00:05:04,870 --> 00:05:10,780
Mas se voc quiser ter um valor dinmico que pode mudar, adicionamos o valor prop e aviso tem que ser

71
00:05:10,780 --> 00:05:17,250
chamado de valor para o componente de provedor de contexto de dbito e definimos como igual ao valor que queremos usar.

72
00:05:17,350 --> 00:05:19,490
E o desvalor pode, claro, mudar.

73
00:05:19,570 --> 00:05:25,600
Ento aqui eu configuraria este estado autenticado e ele mudaria sempre que o estado mudasse.

74
00:05:25,600 --> 00:05:32,380
Ento agora estamos fornecendo este contexto para todos os componentes filhos l, no importa em que nvel eles esto.

75
00:05:32,380 --> 00:05:36,610
Ento, para dizer e isso, claro,  apenas um ano, mas isso poderia ser mais.

76
00:05:36,760 --> 00:05:40,280
E esse componente na verdade contm mais de um componente.

77
00:05:40,360 --> 00:05:46,450
Ento, no componente de pessoas, podemos agora nos livrar daquele Propp autenticado que estamos passando

78
00:05:46,450 --> 00:05:55,210
para uma nica pessoa e na captura Sim, ns tambm podemos nos livrar do que  apropriado se estamos passando para

79
00:05:55,210 --> 00:06:02,180
as pessoas e com removido, podemos ir para um nico componente de pessoa e  aqui que

80
00:06:02,180 --> 00:06:04,250
queremos usar nosso contexto corretamente.

81
00:06:04,250 --> 00:06:06,780
Ento, primeiro de tudo, precisamos ser capazes de import-lo.

82
00:06:06,860 --> 00:06:13,040
Ento, voltamos  queda arrebatadora e simplesmente exportamos nosso contexto fora daqui.

83
00:06:13,040 --> 00:06:19,820
Isso faz com que seja uma baleeira fora deste Faltu agora podemos ir para a nossa nica pessoa no cai duas pessoas.

84
00:06:19,850 --> 00:06:28,220
Este  um estranho para se trabalhar, mas pessoa e aqui em nosso componente pessoal, agora simplesmente importamos

85
00:06:28,400 --> 00:06:29,580
este contexto.

86
00:06:29,750 --> 00:06:32,640
Ento, ns importamos todo o contexto de.

87
00:06:32,660 --> 00:06:36,490
E agora precisamos ir at o nosso aplicativo.

88
00:06:36,550 --> 00:06:43,770
Arquivo JS que importamos fora do contexto e agora precisamos envolver o elemento onde queremos usar esse valor

89
00:06:43,770 --> 00:06:44,590
de contexto.

90
00:06:44,670 --> 00:06:52,850
No nosso caso, essa  a primeira linha aqui. Agora eu crio um novo componente de contexto, mas agora no

91
00:06:52,940 --> 00:06:59,210
provedor, mas consumidor, porque agora consumir esse valor armazenado no contexto e eu simplesmente vou

92
00:06:59,210 --> 00:07:04,270
envolver essa expresso inteira aqui com nosso componente de consumidor off context.

93
00:07:04,310 --> 00:07:10,670
Agora, neste componente do consumidor, ainda usamos chaves nicas, mas precisamos executar um mtodo

94
00:07:10,670 --> 00:07:13,990
que o re-ato ir executar para ns.

95
00:07:14,060 --> 00:07:20,570
Esse mtodo recebe um argumento e faz isso com os dados que estamos passando com o contexto.

96
00:07:20,570 --> 00:07:23,880
Isso poderia ser um objeto no nosso caso,  um booleano.

97
00:07:24,020 --> 00:07:30,600
Ento aqui est nosso estado de fora e voltamos ao GSX que queremos renderizar.

98
00:07:30,740 --> 00:07:33,970
Agora, no nosso caso, no precisamos mais checar se o prop  autenticado.

99
00:07:34,100 --> 00:07:40,880
Ns apenas verificamos se o que lembro  um bilho para ns  verdade, caso em que estamos digitando isso.

100
00:07:40,880 --> 00:07:42,800
Caso contrrio, no renderizemos nada.

101
00:07:43,100 --> 00:07:48,290
E agora estamos tirando proveito da API de contexto re-act 600 Intrade gratuita usada.

102
00:07:48,350 --> 00:07:53,180
E podemos passar dados sem precisar configurar essa cadeia de adereos.

103
00:07:53,540 --> 00:07:57,530
Ns agora recarregamos este componente em que clicamos Show people have a click log in.

104
00:07:57,680 --> 00:07:59,210
Ainda vemos que sou frequentemente negado.

105
00:07:59,240 --> 00:08:05,670
Mas agora, sem passar em torno de adereos, a abordagem dos adereos  recomendada para a maioria dos casos.

106
00:08:05,720 --> 00:08:10,310
Isso torna seus componentes mais reutilizveis e no os une muito.

107
00:08:10,310 --> 00:08:14,420
No entanto, a API de contexto  realmente tima para configuraes globais como essa.

