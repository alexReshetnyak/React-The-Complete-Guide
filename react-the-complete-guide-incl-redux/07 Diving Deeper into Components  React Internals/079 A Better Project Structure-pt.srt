1
00:00:02,190 --> 00:00:07,100
De volta ao nosso projeto inicial, trabalhamos para melhorar esse projeto.

2
00:00:07,140 --> 00:00:13,620
At agora, usamos apenas dois componentes, o componente do aplicativo, nosso principal componente e

3
00:00:13,620 --> 00:00:22,200
continer, que contm nosso estado e o componente funcional do componente da pessoa, que simplesmente exibe uma nica pessoa

4
00:00:22,290 --> 00:00:24,050
com esses dois componentes.

5
00:00:24,150 --> 00:00:28,290
Recebemos esta sada aqui e no h nada de errado com esta sada.

6
00:00:28,290 --> 00:00:30,060
Definitivamente est funcionando bem.

7
00:00:30,240 --> 00:00:35,520
Mas  claro que nos bastidores ainda podemos ajustar os EUA um pouco.

8
00:00:35,550 --> 00:00:40,970
Por exemplo, normalmente voc dividiria essa aplicao em mais componentes do que isso.

9
00:00:40,980 --> 00:00:44,910
A questo sempre  o que deve entrar em seu prprio componente.

10
00:00:45,150 --> 00:00:51,870
E o que voc agrupa em um componente mais alto no componente raiz por exemplo.

11
00:00:51,870 --> 00:00:58,810
Agora, se analisarmos os nossos componentes existentes, vemos que o componente pessoa est bem focado.

12
00:00:58,830 --> 00:01:03,150
Ele exibe o carto de uma pessoa a informao de uma pessoa.

13
00:01:03,270 --> 00:01:05,820
Ele faz um clique nesse carto.

14
00:01:05,850 --> 00:01:12,810
Portanto, esse componente no precisa mais dividir o que voc colocou em seu prprio componente.

15
00:01:12,810 --> 00:01:16,280
Voc poderia terceirizar a entrada para o seu prprio componente.

16
00:01:16,410 --> 00:01:22,650
quiser criar um componente de entrada genrico em toda a sua aplicao onde voc realmente muda o estilo.

17
00:01:22,650 --> 00:01:24,860
Isso pode ter sentido se voc

18
00:01:25,020 --> 00:01:30,500
Mas se esse no  o objetivo de inserir seu prprio componente, no faz muito sentido.

19
00:01:30,510 --> 00:01:33,340
Ento, para ns, definitivamente podemos deix-lo aqui.

20
00:01:33,630 --> 00:01:41,010
E o mesmo para os pargrafos, se voc quiser criar algum componente do Rapparee do pargrafo personalizado, que fornece

21
00:01:41,020 --> 00:01:48,360
a todos os seus pargrafos algum estilo e comportamento especficos que voc pode querer colocar em seu prprio componente.

22
00:01:48,630 --> 00:01:56,010
Se  apenas sobre um estilo global, embora use para folha de estilos global os ndices como arquivo

23
00:01:56,010 --> 00:02:01,290
e simplesmente configure seus estilos l, ento o componente pessoa realmente est finalizado.

24
00:02:01,290 --> 00:02:04,060
Ns provavelmente no precisamos fazer muito mais aqui.

25
00:02:04,140 --> 00:02:11,960
Ns podemos dividir o arquivo do aplicativo js, embora ns conseguimos afirmar que ns realmente fazemos muitas coisas l.

26
00:02:12,120 --> 00:02:18,810
Se tivermos uma olhada no nosso mtodo de renderizao, que no decide o que este componente  responsvel

27
00:02:18,810 --> 00:02:19,620
pela renderizao.

28
00:02:19,830 --> 00:02:28,050
Ns vemos que ns renderizamos uma lista de pessoas aqui, mas,  claro, temos esse boto alternativo.

29
00:02:28,050 --> 00:02:35,220
Agora, normalmente, componentes de contineres como o componente de captura, de modo que os componentes que tambm gerenciam o

30
00:02:35,790 --> 00:02:39,740
estado no devem estar envolvidos com o fato de renderizar demais.

31
00:02:40,020 --> 00:02:47,890
Coloque uma srie de palavras l para fazer Meffert enviar Shippey em bruto e no conter GSX demais.

32
00:02:47,970 --> 00:02:55,590
componente de aplicativo, especialmente para uma pequena aplicao como essa, podemos ainda dividir isso em mais componentes.

33
00:02:55,590 --> 00:03:01,490
Ento, embora no seja necessariamente a pior prtica para ter esse tipo de

34
00:03:01,530 --> 00:03:07,680
Por exemplo, pode fazer sentido criar um componente de lista de pessoas ou o componente de uma pessoa

35
00:03:07,680 --> 00:03:08,730
como podemos nome-lo.

36
00:03:08,850 --> 00:03:16,230
Poderamos ento simplesmente passar por uma srie de pessoas nesse componente e, dentro do componente dessa pessoa,

37
00:03:16,530 --> 00:03:19,580
faramos o mapeamento e renderizamos uma lista.

38
00:03:19,620 --> 00:03:26,340
Isso nos permitiria terceirizar todo esse cdigo e, no final, apenas importar pessoas para o nosso componente e

39
00:03:26,610 --> 00:03:31,400
sempre renderiz-lo se as pessoas do Show forem verdadeiras ou no o renderizassem.

40
00:03:31,430 --> 00:03:37,950
diviso e, em seguida, um componente de cockpit e o componente de uma pessoa como sempre na vida  opcional.

41
00:03:37,950 --> 00:03:44,320
Portanto, esta  uma melhoria e a melhoria de nmero que podemos fazer e, claro,  puramente opcional 

42
00:03:44,340 --> 00:03:52,710
terceirizar nossa cabine de comando em seu prprio componente, de modo que, no final, o nosso componente de aplicativo realmente tenha apenas esta unidade de

43
00:03:52,710 --> 00:03:59,010
 uma boa prtica, uma vez que tornar o nosso componente de aplicativo mais focado e nos dar esses

44
00:03:59,010 --> 00:04:05,070
outros componentes que tambm tm um foco claro em vez de ter tudo misturado no componente do aplicativo.

45
00:04:05,370 --> 00:04:13,220
Ento, vamos criar esses novos componentes para isso na pasta de origem ou criar a pasta de arquivo de uma pessoa, desculpe-me e

46
00:04:13,230 --> 00:04:18,830
l uma pessoa comea J. S. arquivo de componente.

47
00:04:18,900 --> 00:04:25,080
a pasta da pessoa para ter esse tipo de aninhamento porque uma pessoa realmente  apenas

48
00:04:25,080 --> 00:04:31,770
um nico elemento em que estamos prestes a renderizar uma lista no componente da pessoa. puramente opcional.

49
00:04:31,770 --> 00:04:36,720
Agora, na minha opinio, tambm faz sentido mover a pasta da pessoa para

50
00:04:36,750 --> 00:04:43,020
Mas ter esse tipo de estrutura definitivamente faz sentido, podemos melhorar isso ainda mais em nossa pasta

51
00:04:43,020 --> 00:04:43,670
de origem.

52
00:04:43,680 --> 00:04:48,830
Podemos tambm adicionar coisas como pasta de recursos que contm imagens ou coisas assim.

53
00:04:49,050 --> 00:04:56,970
Portanto, pode fazer sentido criar uma pasta de componentes na pasta de origem que contm todos os nossos componentes,

54
00:04:57,150 --> 00:05:02,820
como o componente da pessoa, para que possamos ver claramente que o computador entra.

55
00:05:02,820 --> 00:05:09,130
Ns tambm podemos ter a pasta de recursos como mencionei, que contm imagens que inclumos e assim por diante.

56
00:05:09,510 --> 00:05:18,510
ter na pasta de origem a pasta de contineres que contm todos os nossos contineres, como o U.

57
00:05:18,870 --> 00:05:21,650
Tambm podemos S. e a respectiva visualizao  a seguinte.

58
00:05:21,870 --> 00:05:25,900
Ento, podemos transferir dados para a pasta de continer para mover pastas de teste.

59
00:05:25,920 --> 00:05:28,200
Embora ainda no tenham trabalhado com isso.

60
00:05:28,380 --> 00:05:34,260
Ento, agora reestruturamos nosso aplicativo para que apenas os compartilhamentos de ndices cassem diretamente na pasta de origem,

61
00:05:34,740 --> 00:05:40,330
ento tenha uma lista dos contineres que conhecemos e, em seguida, temos uma lista dos componentes que conhecemos.

62
00:05:40,440 --> 00:05:44,850
Claro que isso vai atrasar o pedido por agora porque todas as nossas importaes esto erradas agora.

63
00:05:45,030 --> 00:05:51,660
Ento, o objetivo agora  corrigir essas importaes antes de as prximas palestras continuar trabalhando no componente

64
00:05:51,660 --> 00:05:52,410
dessa pessoa.

65
00:05:52,560 --> 00:05:56,520
E j mencionei isso no componente do cockpit.

66
00:05:56,670 --> 00:05:57,970
Ento cockpit.

67
00:05:58,270 --> 00:06:05,260
J. S. Eu acho que isso faz sentido, ento vamos consertar as importaes antes de

68
00:06:05,260 --> 00:06:08,820
seguirmos com a carne real para a frente de um cockpit e o componente de Pearse na prxima palestra.

69
00:06:08,820 --> 00:06:15,060
Em relao s importaes em aplicaes, precisamos chegar ao componente pessoa.

70
00:06:15,060 --> 00:06:22,650
subiremos um nvel porque, ento, iremos deixar a pasta de contineres e voltaremos na pasta de origem e depois

71
00:06:22,650 --> 00:06:29,310
de subir um nvel, queremos entrar na pasta de componentes e l na pasta da pessoa

72
00:06:29,310 --> 00:06:38,160
e, em seguida, pessoa pessoa faz o que o novo POV como chegar a cadeiras pessoa arquivo do nosso arquivo Apogees.

73
00:06:38,160 --> 00:06:42,110
Por enquanto, vamos remov-lo em breve, ao mesmo tempo que

74
00:06:42,240 --> 00:06:50,320
Deep-Sea  como antes que o Potthast est correto porque ainda est sentado ao lado de Apogees no arquivo

75
00:06:50,560 --> 00:06:54,680
JSA, tambm precisamos ajustar a importao apontando para Epicharmus l.

76
00:06:54,730 --> 00:06:57,090
J no est sentado na mesma pasta.

77
00:06:57,100 --> 00:07:01,590
Em vez disso, precisamos entrar na pasta de contineres e l encontraremos a abertura.

78
00:07:01,620 --> 00:07:01,960
Falso.

79
00:07:01,990 --> 00:07:07,460
Precisamos ajustar esta importao e faz isso por enquanto.

80
00:07:07,470 --> 00:07:14,730
claro, mas precisamos preench-los com vida e ento podemos realmente ver uma estrutura de componentes melhorada e focada.

81
00:07:14,730 --> 00:07:22,210
Em seguida, precisamos criar o JSM dessa pessoa, o arquivo do cockpit Achebe ou eles foram criados, 

