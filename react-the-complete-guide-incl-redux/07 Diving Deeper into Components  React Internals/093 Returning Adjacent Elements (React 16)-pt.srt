1
00:00:02,240 --> 00:00:08,830
Durante as ltimas palestras, tivemos um olhar super detalhado em toda a teoria por trs de reagir quando est fazendo

2
00:00:08,830 --> 00:00:12,310
nos bastidores como  criar componente do ciclo de vida.

3
00:00:12,310 --> 00:00:18,710
E isso  importante,  claro, como podemos ver os antecedentes radicais.

4
00:00:18,850 --> 00:00:26,290
Este conceito por trs reagir para otimizar reage, pois  algo que voc tambm ver nos projetos do

5
00:00:26,300 --> 00:00:27,780
curso que vamos construir.

6
00:00:27,880 --> 00:00:33,310
Isso, naturalmente, torna ainda mais fcil de entender para ver quando usar um ciclo de vida como

7
00:00:33,310 --> 00:00:38,620
chegar  web a partir do componente que monta e onde usar um componente puro, por exemplo.

8
00:00:38,620 --> 00:00:45,610
uma primeira idia e h mais coisas que voc ver nos projetos do curso que eu quero apresentar agora.

9
00:00:45,610 --> 00:00:47,290
Ainda assim, esta deve ser

10
00:00:47,590 --> 00:00:55,960
E uma coisa  algo que eu mencionei anteriormente, voc aprende que nossos componentes normalmente possuem um elemento de embrulho que voc no deve

11
00:00:55,990 --> 00:01:02,650
ter e vrios elementos se sentam um ao lado do outro no nvel de raiz dentro do seu mtodo

12
00:01:02,650 --> 00:01:07,830
de renderizao ou para ser precisos dentro da declarao de retorno de seu mtodo de renderizao.

13
00:01:07,870 --> 00:01:14,340
Esta  uma restrio do re-ato  tipo de maneira afrouxa de re-agir 16, por exemplo,

14
00:01:14,380 --> 00:01:19,830
em porcentagem de J. S. No temos problema em devolver essa classe.

15
00:01:19,840 --> 00:01:21,120
Ns simplesmente retornamos uma matriz aqui.

16
00:01:21,130 --> 00:01:28,540
Tenha em mente que estamos mapeando esta matriz de javascript em uma matriz de J como elementos x.

17
00:01:28,540 --> 00:01:30,210
E isso  um importante take away.

18
00:01:30,220 --> 00:01:33,310
Voc pode retornar uma srie de elementos.

19
00:01:33,340 --> 00:01:38,450
Isso  algo que est OK, no elemento sentado um ao lado do outro.

20
00:01:38,590 --> 00:01:43,740
Mas se  uma srie de elementos GSX X, como se estivesse aqui, ele funciona.

21
00:01:43,810 --> 00:01:47,800
E  claro que voc pode fazer isso aqui tambm pessoalmente.

22
00:01:47,870 --> 00:01:52,000
Sim, voc pode retornar uma srie de elementos DS grtis.

23
00:01:52,090 --> 00:02:00,870
Cada item da matriz tambm precisa ter uma chave, como  o caso aqui para o nosso percentual. isso manualmente, ento voc poderia, claro, ter uma matriz com o primeiro pargrafo,

24
00:02:01,210 --> 00:02:07,630
ento um segundo elemento e o primeiro elemento aqui.

25
00:02:07,630 --> 00:02:19,910
Portanto, no importa se voc gerar automaticamente a matriz com o mtodo do mapa ou se voc fizer

26
00:02:19,910 --> 00:02:20,380
Esta seria uma matriz vlida.

27
00:02:22,620 --> 00:02:25,230
Voc precisa mant-lo.

28
00:02:25,440 --> 00:02:26,920
Ento, deixe-me comentar a primeira declarao de retorno por enquanto e deixe-me salvar este cdigo atualizado.

29
00:02:26,940 --> 00:02:32,450
Agora volte para nossa aplicao.

30
00:02:32,490 --> 00:02:34,130
Abra o console recarregado.

31
00:02:34,140 --> 00:02:36,870
E pessoas alvo.

32
00:02:37,960 --> 00:02:40,020
Voc v que, na verdade, recebemos um erro entre que cada criana em uma matriz deveria ter uma chave.

33
00:02:40,060 --> 00:02:45,570
Voc tambm v que o Stahl's est faltando.

34
00:02:45,610 --> 00:02:47,740
Isso simplesmente acontece porque j no

35
00:02:47,740 --> 00:02:53,270
temos esse elemento de embrulho que teve a classe de pessoa que, nesse caso, era necessria,

36
00:02:53,270 --> 00:02:59,970
porque aqui o reembarque de Dave no  apenas uma obrigao, mas algo que todos precisamos para a Stolley.

37
00:02:59,970 --> 00:03:00,860
Ento, neste caso, estamos girando, nem mesmo  timo, mas voc pode faz-lo.

38
00:03:01,090 --> 00:03:05,690
E se voc adicionar uma chave com uma ID exclusiva,  claro, voc pode codific-la.

39
00:03:05,800 --> 00:03:11,060
Se no for gerado dinamicamente, como  o caso, voc .

40
00:03:11,080 --> 00:03:14,670
Ento, se voc fizer isso, salve isso e recarregue o aplicativo para alternar pessoas sem erro para ser visto.

41
00:03:14,980 --> 00:03:23,710
Ainda neste exemplo, voc no  a coisa mais til, porque voc realmente precisa da div. Wrapping.

42
00:03:23,710 --> 00:03:30,150
Mas eu queria destacar que voc pode retornar arrays.

43
00:03:30,400 --> 00:03:34,540
Agora vou voltar ao meu antigo cdigo aqui ainda e voc

44
00:03:34,590 --> 00:03:39,900
na maioria das vezes ter um cdigo como esse e no retornar os arrays.

45
00:03:39,900 --> 00:03:41,080
A exceo so componentes que manipulam a renderizao de listas como o componente de uma pessoa.

46
00:03:41,080 --> 00:03:47,340
L,  muito conveniente que no tenhamos que mudar Raptor, a

47
00:03:47,610 --> 00:03:53,080
matriz  atualizada para transformar a matriz em um diff.

48
00:03:53,080 --> 00:03:56,240
Agora, h outra exceo que  considerada uma cabine de comando apenas a cair.

49
00:03:56,250 --> 00:04:01,990
L, todos ns temos EVER wrapping diff para aplicar ao cockpit classe B.

50
00:04:02,280 --> 00:04:07,580
Confira DC como  encontrado, embora ns realmente no precisemos de classe de cockpit, exceto

51
00:04:07,620 --> 00:04:14,940
os botes nos quais queremos escopo para este componente. Bem, ns poderamos simplesmente criar nossa prpria classe de boto para isso,

52
00:04:14,940 --> 00:04:22,960
embora possamos definir uma classe de boto aqui para habere combinado com a classe de leitura e tambm para ler e deslizar.

53
00:04:23,470 --> 00:04:32,170
Agora, no h nenhuma classe de cockpit l e tudo o que temos que fazer no nosso cdigo agora  atribudo a esta

54
00:04:32,170 --> 00:04:39,070
classe de boto, de modo que, para o nosso boto, possamos ter o boto de classes como padro.

55
00:04:39,070 --> 00:04:48,300
Tenha em mente os mdulos da ISS.

56
00:04:48,310 --> 00:04:49,950
classes para que as classes sejam lidas.

57
00:04:49,960 --> 00:04:57,200
Agora, d-nos esta classe de boto, porque ns a definimos aqui no arquivo C S S e, para o caso em que queremos adicionar a classe de leitura, simplesmente teremos uma srie de

58
00:04:57,200 --> 00:05:05,260
Mas, antes da dvida, todas as classes so pressionadas e, no final, apenas Joyner  com um espao em branco.

59
00:05:05,620 --> 00:05:14,230
Agora, se isso, se salvarmos esse cdigo e voltarmos ao boto do aplicativo, parece e funciona como antes.

60
00:05:14,240 --> 00:05:20,050
Mas agora, esta div diviso  redundante.

61
00:05:20,270 --> 00:05:23,240
Podemos remover o nome da classe l e ainda temos o mesmo estilo de boto.

62
00:05:23,240 --> 00:05:28,040
Ento,  redundante e seria bom se voc pudesse se livrar disso.

63
00:05:28,280 --> 00:05:31,350
Agora, uma soluo  remov-la e devolver uma srie de elementos aqui.

64
00:05:31,370 --> 00:05:35,530
Mas tambm h outra alternativa.

65
00:05:35,780 --> 00:05:38,060
Podemos criar um componente de ordem superior para isso.

66
00:05:38,240 --> 00:05:42,190
Ento vou entrar na fonte e criarei uma nova

67
00:05:42,650 --> 00:05:50,990
pasta que nomear o HELOC para componentes de ordem superior, os componentes de ordem superior so componentes absolutamente re-atuais normais.

68
00:05:51,560 --> 00:05:56,420
Eles tm uma especialidade, embora no sejam

69
00:05:56,750 --> 00:06:04,220
representativos, mas envolvem nossos componentes para adicionar uma determinada funcionalidade.

70
00:06:04,220 --> 00:06:05,730
Por exemplo, podemos criar um componente alks para auxiliares e este componente ter uma nica tarefa.

71
00:06:05,750 --> 00:06:13,170
Ser uma funo alks que obtm adereos e que retorna

72
00:06:13,250 --> 00:06:23,030
o X de Jael, obviamente, precisa importar, porque, novamente,  apenas um componente normal.

73
00:06:23,060 --> 00:06:27,600
Tudo o que eu quero fazer

74
00:06:27,630 --> 00:06:38,040
 querer produzir talvez crianas embrulhadas em chaves ou nem mesmo precisamos fazer isso.

75
00:06:38,040 --> 00:06:39,100
No podemos simplesmente retornar crianas Propst assim e agora exportar um padro.

76
00:06:39,210 --> 00:06:47,730
Alks funcionam.

77
00:06:47,850 --> 00:06:49,880
Este componente pode parecer intil porque

78
00:06:49,950 --> 00:06:56,100
tudo o que faz  retornar o que foi passado entre a tag de abertura e de fechamento.

79
00:06:56,130 --> 00:06:58,200
Isso, no entanto,  enorme porque agora podemos us-lo como componente alks e o componente do cockpit aqui.

80
00:06:58,590 --> 00:07:05,640
L, podemos importar alks com um A de capital a partir de dois nveis at a agncia G-S.

81
00:07:05,970 --> 00:07:15,380
Sem a extenso do arquivo.

82
00:07:15,540 --> 00:07:17,090
Como sempre e agora podemos conter nosso cdigo aqui com nosso componente de alks personalizado.

83
00:07:17,090 --> 00:07:25,840
Aquele que acabamos de criar agora, no temos mais um erro aqui porque temos um componente rapin,

84
00:07:25,950 --> 00:07:33,000
mas na verdade no criamos um elemento HVM envolvente porque o alks est vazio.

85
00:07:33,000 --> 00:07:39,160
Podemos apenas devolver adereos para crianas.

86
00:07:39,180 --> 00:07:41,680
Essa  uma chave para tirar.

87
00:07:41,690 --> 00:07:43,060
Ns no precisamos raptus e at temos adereos.

88
00:07:43,200 --> 00:07:46,230
As crianas so ento adjacentes aos elementos HVM l, como  o caso aqui.

89
00:07:46,230 --> 00:07:51,090
Estas so as crianas.

90
00:07:51,090 --> 00:07:52,550
Ainda funcionar no re-ato 16.

91
00:07:52,770 --> 00:07:55,310
Isso  muito legal, porque

92
00:07:55,710 --> 00:08:02,370
s vezes voc no deseja apresentar um elemento HVM separado como uma div diviso.

93
00:08:02,370 --> 00:08:03,090
Se voc no

94
00:08:03,270 --> 00:08:08,460
precisa por razes de estilo, ele pode at mesmo destruir seu restyling se voc estiver usando blocos flex ou algo assim.

95
00:08:08,460 --> 00:08:10,270
Ento, se isso, se salvarmos, obtemos um aplicativo de trabalho.

96
00:08:10,440 --> 00:08:14,680
Nenhum erro pode ser visto, exceto para o reboque definido, mas nunca usado, de um boi.

97
00:08:14,730 --> 00:08:20,920
Isso  porque nem sejamos re-agir tratar o elemento para que no possamos remov-lo, at

98
00:08:20,940 --> 00:08:27,180
mesmo torn-lo ainda mais enxuta, porque tudo o que fazemos  distribuir os filhos do prop.

99
00:08:27,180 --> 00:08:31,020
Ento, agora com uma configurao muito magra, mas ns salvamos este elemento extra-redundante HVM M-L aqui no cockpit.

100
00:08:31,080 --> 00:08:38,910
Esta div que realmente no precisamos.

101
00:08:38,910 --> 00:08:41,570
Isso  algo que eu queria trazer 

102
00:08:41,580 --> 00:08:47,640
sua ateno que voc pode retornar arrays como em pessoas e que voc pode retornar os filhos de

103
00:08:47,640 --> 00:08:54,180
prop como um boi e mesmo que o DS possa ser adjacente ao re-agir est bem com esse re-agir 16

104
00:08:54,180 --> 00:09:00,960
pelo menos algo que voc tem que ter em mente e algo que lhe permite salvar esse elemento div desnecessrio.

105
00:09:01,140 --> 00:09:03,690
Tivemos que usar antes desta soluo aqui.

106
00:09:03,690 --> 00:09:06,160
&nbsp;

