1
00:00:02,190 --> 00:00:07,100
Wracajc do naszego projektu pocztkowego, nad ktrym pracowalimy, poprawmy ten projekt.

2
00:00:07,140 --> 00:00:13,620
Do tej pory uywamy tylko dwch komponentw, komponentu aplikacji, naszego gwnego komponentu i kontenera, ktry zawiera nasz

3
00:00:13,620 --> 00:00:22,200
stan i skadnik osoby, funkcjonalny komponent, ktry po prostu wyprowadza jedn osob. Dziki tym dwm komponentom razem

4
00:00:22,290 --> 00:00:24,050
otrzymujemy ten

5
00:00:24,150 --> 00:00:28,290
wynik tutaj. I nie ma nic zego w tym

6
00:00:28,290 --> 00:00:30,060
wyjciu, to na pewno dziaa dobrze.

7
00:00:30,240 --> 00:00:35,520
Ale oczywicie za kulisami wci moemy to troch poprawi.

8
00:00:35,550 --> 00:00:40,970
Na przykad zazwyczaj dzieli si t aplikacj na wicej komponentw ni

9
00:00:40,980 --> 00:00:44,910
to. Pytanie zawsze brzmi, co powinno i do

10
00:00:45,150 --> 00:00:51,870
wasnego komponentu i co grupuje si w wyszym komponencie, na przykad w komponencie root.

11
00:00:51,870 --> 00:00:58,810
Teraz, gdy przeanalizujemy nasze istniejce komponenty, widzimy, e element osoby jest do

12
00:00:58,830 --> 00:01:03,150
skupiony, wywietla kart jednej osoby, informacje jednej osoby,

13
00:01:03,270 --> 00:01:05,820
obsuguje kliknicie tej karty.

14
00:01:05,850 --> 00:01:12,810
Wic ten komponent nie potrzebuje ju podziau, co by woy we wasny komponent?

15
00:01:12,810 --> 00:01:16,280
Moesz przesa dane wejciowe do wasnego komponentu, co

16
00:01:16,410 --> 00:01:22,650
moe mie sens, jeli chcesz utworzy oglny skadnik wejciowy w aplikacji, w ktrym tak

17
00:01:22,650 --> 00:01:24,860
naprawd zmienisz tylko stylizacj.

18
00:01:25,020 --> 00:01:30,500
Ale jeli nie jest to celem, wprowadzanie danych do wasnego komponentu nie ma wikszego sensu.

19
00:01:30,510 --> 00:01:33,340
Tak wic dla nas na pewno moemy zostawi to tutaj.

20
00:01:33,630 --> 00:01:41,010
I tak samo w przypadku akapitw, jeli chcesz utworzy niestandardowy komponent opakowania akapitowego, ktry

21
00:01:41,020 --> 00:01:48,360
nadaje wszystkim akapitom okrelon stylistyk i zachowanie, moesz chcie umieci w swoim komponencie.

22
00:01:48,630 --> 00:01:56,010
Jeli jednak chodzi tylko o globaln stylizacj, uyj globalnego arkusza stylw, indeksu. css i po prostu skonfiguruj

23
00:01:56,010 --> 00:02:01,290
tam swoje style. Tak wic komponent osoby naprawd jest skoczony,

24
00:02:01,290 --> 00:02:04,060
prawdopodobnie nie musimy tutaj robi o wiele wicej.

25
00:02:04,140 --> 00:02:11,960
Moemy podzieli nasz aplikacj. Plik js chocia udao nam si stwierdzi, e faktycznie

26
00:02:12,120 --> 00:02:18,810
robimy tam wiele rzeczy, jeli przyjrzymy si naszej metodzie renderowania, ktra ostatecznie decyduje o tym,

27
00:02:18,810 --> 00:02:19,620
za co

28
00:02:19,830 --> 00:02:28,050
ten komponent jest odpowiedzialny za renderowanie, widzimy, e wylistowalimy list osb tutaj ale oczywicie mamy rwnie ten przecznik.

29
00:02:28,050 --> 00:02:35,220
Teraz zazwyczaj s to komponenty kontenerowe, takie jak aplikacja. js component, wic skadniki, ktre rwnie zarzdzaj stanem, nie

30
00:02:35,790 --> 00:02:39,740
powinny by zaangaowane w renderowanie interfejsu uytkownika za duo.

31
00:02:40,020 --> 00:02:47,890
Mwic innymi sowami, metoda renderowania powinna by raczej szczupa i zawiera zbyt mao jsx.

32
00:02:47,970 --> 00:02:55,590
Wic chocia niekoniecznie najgorsz praktyk jest posiadanie tego rodzaju komponentu aplikacji, szczeglnie w przypadku maej

33
00:02:55,590 --> 00:03:01,490
aplikacji takiej jak ta, moemy jeszcze podzieli to na wicej komponentw.

34
00:03:01,530 --> 00:03:07,680
Na przykad sensowne moe by utworzenie komponentu listy osb lub komponentu osoby, w jaki

35
00:03:07,680 --> 00:03:08,730
sposb moglibymy

36
00:03:08,850 --> 00:03:16,230
go nazwa, moglibymy wtedy po prostu przekaza t grup osb do tego komponentu i wewntrz skadnika

37
00:03:16,530 --> 00:03:19,580
tej osoby, wykonalibymy odwzorowanie i wyrenderowalimy lista.

38
00:03:19,620 --> 00:03:26,340
To pozwolioby nam na outsourcing caego tego kodu, a na kocu wystarczy zaimportowa osoby do naszego komponentu i

39
00:03:26,610 --> 00:03:31,400
albo wyrenderowa je, jeli parametr showPersons jest prawdziwy, czy nie wyrenderowa go.

40
00:03:31,430 --> 00:03:37,950
Jest to wic jedna poprawa, kolejnym ulepszeniem, ktre moemy zrobi, i oczywicie jest cakowicie opcjonalne,

41
00:03:37,950 --> 00:03:44,320
aby zleci nasz kokpit wasnemu komponentowi, tak aby ostatecznie komponent aplikacji zawiera tylko ten element

42
00:03:44,340 --> 00:03:52,710
div, a nastpnie komponent kokpitu i komponent osoby. . Jak zawsze w yciu, jest to opcjonalne, ale jest to

43
00:03:52,710 --> 00:03:59,010
dobra praktyka, poniewa sprawi, e nasz komponent aplikacji b dzie bardziej skoncentrowany i da nam

44
00:03:59,010 --> 00:04:05,070
te inne skadniki, ktre maj ... rwnie jasno, zamiast mieszania wszystkiego w komponencie aplikacji.

45
00:04:05,370 --> 00:04:13,220
Utwrzmy wic te nowe komponenty, bo w folderze rdowym utworz plik osb, folder

46
00:04:13,230 --> 00:04:18,830
przepraszam i tam osoby. plik komponentu js.

47
00:04:18,900 --> 00:04:25,080
Moim zdaniem sensowne jest przeniesienie folderu osoby do folderu osb, aby mie taki

48
00:04:25,080 --> 00:04:31,770
rodzaj zagniedania, poniewa dana osoba jest tak naprawd jednym z elementw, ktry i tak

49
00:04:31,770 --> 00:04:36,720
chcemy wyrenderowa w komponencie dla osb. Jest to cakowicie opcjonalne, ale majc tego rodzaju

50
00:04:36,750 --> 00:04:43,020
struktur na pewno ma sens, moemy poprawi to jeszcze bardziej. W naszym folderze rdowym moemy rwnie doda

51
00:04:43,020 --> 00:04:43,670
takie

52
00:04:43,680 --> 00:04:48,830
rzeczy jak folder zasobw, ktry zawiera obrazy lub podobne rzeczy, wic

53
00:04:49,050 --> 00:04:56,970
sensowne moe by utworzenie folderu skadnikw w folderze rdowym, ktry zawiera wszystkie nasze komponenty, takie jak skadnik

54
00:04:57,150 --> 00:05:02,820
osoby, abymy mogli wyranie zobaczy, e komponenty wejd tam, moemy rwnie mie

55
00:05:02,820 --> 00:05:09,130
folder zasobw, o ktrym wspomniaem, ktry zawiera obrazy, ktre doczamy i tak dalej.

56
00:05:09,510 --> 00:05:18,510
Moemy rwnie mie w folderze rdowym folder zawierajcy wszystkie nasze kontenery, takie

57
00:05:18,870 --> 00:05:21,650
jak aplikacja. js i jego odpowiedni plik

58
00:05:21,870 --> 00:05:25,900
css, dziki czemu moemy przenie dane do folderu kontenerw, a take przenie tam plik

59
00:05:25,920 --> 00:05:28,200
testowy, mimo e jeszcze z nim nie pracowalimy.

60
00:05:28,380 --> 00:05:34,260
Wic teraz zrestrukturyzowalimy nasz aplikacj, aby mie tylko indeks. Plik js bezporednio w folderze rdowym,

61
00:05:34,740 --> 00:05:40,330
a nastpnie list znanych kontenerw, a nastpnie list skadnikw, ktre znamy.

62
00:05:40,440 --> 00:05:44,850
Oczywicie to spowoduje przerwanie aplikacji, poniewa wszystkie nasze produkty importowane s teraz bdne.

63
00:05:45,030 --> 00:05:51,660
Tak wic celem jest teraz naprawienie tych importw, zanim w nastpnych wykadach bdziemy kontynuowa prac nad tym

64
00:05:51,660 --> 00:05:52,410
komponentem osoby

65
00:05:52,560 --> 00:05:56,520
i ju wspomniaem o tym na tym komponencie kokpitu w

66
00:05:56,670 --> 00:05:57,970
kokpicie. js

67
00:05:58,270 --> 00:06:05,260
Sdz, e ma to sens, wic naprawmy import, zanim przejdziemy do faktycznego zapotrzebowania na

68
00:06:05,260 --> 00:06:08,820
kokpit i komponenty osb w nastpnym wykadzie.

69
00:06:08,820 --> 00:06:15,060
W odniesieniu do przywozu, w aplikacji. js, musimy teraz dotrze do komponentu osoby,

70
00:06:15,060 --> 00:06:22,650
ale wkrtce usuniemy go, przechodzc o jeden poziom, poniewa wtedy opucimy folder kontenerw i wrcimy do

71
00:06:22,650 --> 00:06:29,310
folderu rdowego, a po przejciu do gry jeden poziom, chcemy przej do folderu komponentw

72
00:06:29,310 --> 00:06:38,160
i tam w folderze osoby, a nastpnie Person / Person. To bdzie nowa droga, jak dotrze

73
00:06:38,160 --> 00:06:42,110
do osoby. plik js z aplikacji. plik js.

74
00:06:42,240 --> 00:06:50,320
Aplikacja. cieka importu css jest wci poprawna, poniewa nadal znajduje si obok aplikacji. js. W indeksie. Plik js, musimy rwnie

75
00:06:50,560 --> 00:06:54,680
dostosowa import wskazujc na aplikacj. js, nie ma go ju w

76
00:06:54,730 --> 00:06:57,090
tym samym folderze, zamiast tego musimy przej

77
00:06:57,100 --> 00:07:01,590
do folderu kontenerw i tam znajdziemy aplikacj. Plik js, wic

78
00:07:01,620 --> 00:07:01,960
musimy

79
00:07:01,990 --> 00:07:07,460
rwnie dostosowa ten import. I to jest na razie,

80
00:07:07,470 --> 00:07:14,730
nastpnie musimy stworzy te osoby. js i kokpit. Plik JS lub zostay utworzone

81
00:07:14,730 --> 00:07:22,210
oczywicie, ale musimy wypeni je yciem, a nastpnie moemy naprawd zobaczy ulepszon i skoncentrowan struktur komponentw.

