1
00:00:02,020 --> 00:00:05,690
In the last lecture we added the withClass higher order component.

2
00:00:06,120 --> 00:00:11,310
This just like the aux component is a component which essentially wraps the props

3
00:00:11,310 --> 00:00:12,040
children

4
00:00:12,150 --> 00:00:18,220
so the part with the opening and classing tags and add something, like in this case the div.

5
00:00:18,250 --> 00:00:26,010
Now this is one way of doing that but we can also write the withClass higher order component differently.

6
00:00:26,280 --> 00:00:34,220
we can name it withClass with a lower case w and for that I need to delete the old one first.

7
00:00:34,440 --> 00:00:40,110
And this is also just one of the conventions for this kind of higher order component which is used a

8
00:00:40,110 --> 00:00:42,450
bit differently as you will see in a second.

9
00:00:42,510 --> 00:00:48,750
And here, I'll now create a constant withClass but this time, this is not a function which takes the

10
00:00:48,750 --> 00:00:54,540
props but a function which takes some configuration, like the class name

11
00:00:54,540 --> 00:01:03,430
and then this will return a function which receives the props and which will in the end then render

12
00:01:03,480 --> 00:01:13,850
something, like render a div with className equals class name

13
00:01:13,870 --> 00:01:22,390
so the argument we got up there. We will not only get class name, I expect another argument too, the wrapped

14
00:01:22,960 --> 00:01:29,870
component and the wrapped component will actually be used in here, wrapped component,

15
00:01:29,950 --> 00:01:33,150
a self-classing tag. There

16
00:01:33,220 --> 00:01:40,800
I will import react from react to be able to write this jsx code and then export a default of this

17
00:01:40,800 --> 00:01:42,320
withClass function.

18
00:01:42,560 --> 00:01:48,720
Now keep in mind, this withClass function is not a functional component, it's a normal javascript function

19
00:01:48,720 --> 00:01:55,070
which expects two arguments which then returns a function which qualifies as a functional component,

20
00:01:55,290 --> 00:01:57,000
this one here.

21
00:01:57,030 --> 00:01:59,460
Now what's the idea behind this approach?

22
00:01:59,760 --> 00:02:01,000
Let me show you.

23
00:02:01,290 --> 00:02:08,870
We have a valid jsx code here where we are wrapping a component but now we can use this a bit differently.

24
00:02:08,940 --> 00:02:16,410
We can go to our app.js file and get rid of this wrapper, which of course will throw an error

25
00:02:16,410 --> 00:02:23,340
so for now I will use my auxiliary component that I imported from the aux.js file.

26
00:02:23,340 --> 00:02:26,600
So I will wrap this with basically an invisible tag,

27
00:02:26,660 --> 00:02:28,470
that is what auxiliary does right,

28
00:02:28,500 --> 00:02:30,110
it just returns the children,

29
00:02:30,120 --> 00:02:33,800
it doesn't add a real html element.

30
00:02:33,970 --> 00:02:42,000
And now I will also import this new withClass function and I will leave it with a lowercase w at the

31
00:02:42,000 --> 00:02:47,910
beginning because I'm not about to use it as a component because this function as I just explained doesn't

32
00:02:47,910 --> 00:02:50,300
qualify as a component,

33
00:02:50,580 --> 00:02:53,230
it doesn't return jsx, right?

34
00:02:53,310 --> 00:03:01,660
It just returns another function. So now here I'm going to import this from the hoc folder with

35
00:03:01,660 --> 00:03:03,000
Class too

36
00:03:03,520 --> 00:03:07,420
and now I want to use withClass but I don't use it in my jsx code,

37
00:03:07,420 --> 00:03:12,740
I'm not going to wrap anything with it because again it doesn't qualify as a component.

38
00:03:13,150 --> 00:03:21,490
Instead I wrap my app here I'm exporting with it, I'm wrapping this with the withClass function and

39
00:03:21,490 --> 00:03:25,950
passing app as well as classes app to it,

40
00:03:26,020 --> 00:03:32,440
so the css class I want to assign. These are the two arguments the withClass function expects, it expects

41
00:03:32,440 --> 00:03:36,010
to component it should wrap and the class name.

42
00:03:36,010 --> 00:03:41,890
Now with this in place, let's also work on the person.js file where we still use withClass which

43
00:03:41,890 --> 00:03:42,880
doesn't exist anymore,

44
00:03:42,880 --> 00:03:44,290
we deleted this.

45
00:03:44,590 --> 00:03:48,600
So let's import withClass here from the withClass file,

46
00:03:48,670 --> 00:03:50,740
Lowercase w

47
00:03:50,930 --> 00:03:55,220
and let's also wrap this with this auxiliary component,

48
00:03:55,220 --> 00:04:06,050
so with aux here, let's wrap this too, let's wrap aux and then use withClass just as we used it in our other

49
00:04:06,410 --> 00:04:08,560
app.js file here.

50
00:04:09,690 --> 00:04:14,130
Let's use it by wrapping the person function

51
00:04:14,160 --> 00:04:20,340
we're exporting with withClass, so person will be our wrapped component

52
00:04:20,340 --> 00:04:23,220
and the second argument should be the class we want to attach,

53
00:04:23,220 --> 00:04:30,750
in this case person. Make sure all files are saved and now go back to the application and it should work

54
00:04:30,750 --> 00:04:33,060
as before just fine,

55
00:04:33,060 --> 00:04:40,010
however it doesn't. Click this button and it looks on the first look as if it would work fine

56
00:04:40,230 --> 00:04:46,620
but you see that all the dynamic elements, all the props on the persons are missing, the name, the age,

57
00:04:47,120 --> 00:04:50,020
we can't type or we can type but it doesn't update,

58
00:04:50,190 --> 00:04:54,380
we don't get an error but the props are missing. Now

59
00:04:54,420 --> 00:04:57,640
generally, our higher order component here is working

60
00:04:57,750 --> 00:05:06,090
and this is a pattern you will often see if you plan on changing your component like this, wrapping it

61
00:05:06,420 --> 00:05:09,660
or doing some other transformation with it.

62
00:05:09,660 --> 00:05:14,320
One thing you should never do here though is manipulating the wrapped component,

63
00:05:14,370 --> 00:05:16,610
just use it as we do here,

64
00:05:16,620 --> 00:05:20,870
don't start adding or changing its state or properties.

65
00:05:21,120 --> 00:05:26,700
And as a side note, you're not limited to returning a functional component here,

66
00:05:26,730 --> 00:05:30,050
you can also return a stateful component.

67
00:05:30,060 --> 00:05:35,910
Now let's find out what's wrong with these props before we have a look at this stateful component being

68
00:05:35,910 --> 00:05:36,920
returned here though.

69
00:05:37,140 --> 00:05:39,180
We'll have a look at both in the next lecture.

