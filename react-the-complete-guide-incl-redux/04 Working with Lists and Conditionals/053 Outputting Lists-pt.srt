1
00:00:02,200 --> 00:00:05,460
Ento, vamos comear sem colocar isso como uma lista real.

2
00:00:05,620 --> 00:00:11,510
Se tivermos uma aparncia, obtemos elementos gratuitos na matriz desta pessoa em nosso estado.

3
00:00:11,560 --> 00:00:17,000
Agora, novamente, em Auburn ou frameworks que voc pode saber se voc no faz isso, no  problema.

4
00:00:17,050 --> 00:00:18,530
 sempre diferente aqui.

5
00:00:18,650 --> 00:00:26,920
Em outros frameworks, como em voc, voc teria uma diretiva antes ou um Engy angular por agora em reao, voc no tem

6
00:00:26,920 --> 00:00:28,900
isso porque adivinhe o que.

7
00:00:29,120 --> 00:00:31,760
Tudo  javascript aqui como voc aprendeu.

8
00:00:32,170 --> 00:00:39,760
o contedo condicional que ns handly aqui com javascript normal tambm lida com listas com as ferramentas padro.

9
00:00:39,760 --> 00:00:40,950
Assim como com

10
00:00:40,990 --> 00:00:45,240
O Javascript nos d para trabalhar com listas.

11
00:00:45,340 --> 00:00:47,070
Como isso parece.

12
00:00:47,140 --> 00:00:55,820
No nosso caso, aqui, onde temos o Pobre da pessoa, usaremos novamente armaduras simples para renderizar algo dinmico

13
00:00:55,820 --> 00:00:58,400
dentro do nosso cdigo GSX.

14
00:00:58,760 --> 00:01:07,220
E ento queremos renderizar a nossa matriz de pessoas no estado para que essas pessoas do estado simplesmente se

15
00:01:07,220 --> 00:01:09,170
referem a essa matriz.

16
00:01:09,170 --> 00:01:10,860
Agora, isso sozinho no vai fazer o truque.

17
00:01:10,940 --> 00:01:15,190
Essa  uma matriz de objeto javascript, no  algo que podemos codificar palavras para.

18
00:01:15,260 --> 00:01:18,780
Tim L, no se entenderia algo re-ato aqui.

19
00:01:19,130 --> 00:01:24,930
Ento, precisamos palavras gentis dessa matriz de javascript que no  vlida.

20
00:01:24,950 --> 00:01:25,460
J.

21
00:01:25,480 --> 00:01:34,310
X 2 vlido J us X e Javascript goilla javascript nos oferece uma funo para converter arrays.

22
00:01:34,520 --> 00:01:42,500
 o mapa da funo do mapa simplesmente mapear cada elemento de uma dada matriz, como nossa matriz de

23
00:01:42,980 --> 00:01:45,070
pessoas, aqui em outra coisa.

24
00:01:45,320 --> 00:01:50,720
Ele faz isso executando um mtodo em cada elemento em uma determinada matriz.

25
00:01:50,720 --> 00:01:58,410
Ento, nesta matriz neste caso, esse mtodo ou esta funo so passados para o mtodo do mapa aqui.

26
00:01:58,820 --> 00:02:02,040
Leva o elemento da matriz como entrada.

27
00:02:02,060 --> 00:02:05,950
Ento, uma nica pessoa, o nome desse argumento depende totalmente de voc.

28
00:02:05,960 --> 00:02:11,580
Estou escrevendo aqui uma funo annima e atualmente estou escrevendo uma funo de seta.

29
00:02:11,750 --> 00:02:18,590
Ento, h uma funo de seta 6 que eu passo para o mtodo do mapa pode parecer estranha,

30
00:02:18,590 --> 00:02:25,070
mas na verdade  o jileira ESX da vanilla, mas o javascript no J  X nada assim.

31
00:02:25,100 --> 00:02:28,070
 por isso que est dentro de chaves simples.

32
00:02:28,670 --> 00:02:36,110
de pessoas e o Javascript fornece automaticamente como cada elemento como uma entrada para essa funo que executamos em cada elemento.

33
00:02:36,170 --> 00:02:43,250
Ento, esta funo aqui que eu passo como uma funo annima para o mtodo do mapa  executada em

34
00:02:43,340 --> 00:02:45,310
todos os elementos da matriz

35
00:02:45,320 --> 00:02:47,250
Ento, neste caso,  nossa pessoa.

36
00:02:47,270 --> 00:02:53,180
Mais uma vez, voc pode nomear o que quiser, mas uma vez que  uma srie de pessoas, a pessoa provavelmente faz sentido.

37
00:02:53,570 --> 00:02:55,670
E agora voc tem que devolver algo.

38
00:02:55,910 --> 00:03:01,010
Voc deve retornar o que voc deseja mapear neste item.

39
00:03:01,010 --> 00:03:03,850
Ento, temos uma srie de objetos e pessoas javascript.

40
00:03:03,870 --> 00:03:05,080
Seu nico objeto.

41
00:03:05,090 --> 00:03:10,530
Dois objetos trs objetos e queremos converter isso em outra coisa.

42
00:03:10,580 --> 00:03:15,830
O mtodo do mapa que estamos usando aqui convenientemente simplesmente retorna uma nova matriz.

43
00:03:16,010 --> 00:03:24,290
E, como eu apenas imprimo essa nova matriz como essa dentro da GSX, reagiremos basicamente, simplesmente tentamos levar

44
00:03:24,290 --> 00:03:28,700
os elementos individuais desta nova matriz e renderiz-los para Dom.

45
00:03:28,850 --> 00:03:31,490
Se eles so vlidos, ns x.

46
00:03:31,520 --> 00:03:38,270
Ento, nosso objetivo  simplesmente retornar ceria X aqui para que cada elemento da matriz da pessoa seja

47
00:03:38,390 --> 00:03:41,230
mapeado em um j como o representante x.

48
00:03:41,540 --> 00:03:49,940
pessoa pode ser representado como um componente de pessoa e meu projeto aqui e depois simplesmente atribumos um nome novamente.

49
00:03:49,940 --> 00:03:56,330
Ento, aqui, eu quero mape-lo em um componente de pessoa no final porque cada objeto javascript

50
00:03:56,480 --> 00:03:59,950
E aqui podemos usar a pessoa que recebemos como entrada.

51
00:04:00,080 --> 00:04:07,730
Portanto, o elemento individual para o qual a disfuno  executada e ns obtivemos a propriedade do nome no mesmo,

52
00:04:07,730 --> 00:04:15,200
claro, para a idade em que agora a idade da pessoa x  dividida em vrias linhas para facilitar

53
00:04:15,200 --> 00:04:15,930
a leitura.

54
00:04:16,160 --> 00:04:18,460
E isso  mesmo.

55
00:04:18,560 --> 00:04:25,410
Com isso, posso me livrar de todas as outras pessoas e eu as removerei por agora simplesmente.

56
00:04:25,520 --> 00:04:33,290
uma lista de pessoas clicando neles e mudar o nome no funcionar por enquanto, porque eles so removidos, os manipuladores os adicionaro em breve.

57
00:04:33,290 --> 00:04:37,040
E agora, o que isso levar  que ele ainda imprimir

58
00:04:37,820 --> 00:04:44,990
E  simplesmente simples ao mapear esta matriz de JavaScript em um javascript ainda excelente, mas uma

59
00:04:45,050 --> 00:04:51,820
matriz com objetos GSX dentro dele que reagem ir automaticamente puxar e renderizar para a tela.

60
00:04:52,190 --> 00:04:59,460
Vamos salvar o arquivo e ver o resultado se eu falar de minhas bolsas aqui, vemos todas as bolsas.

61
00:04:59,780 --> 00:05:06,460
Tambm recebemos um novo aviso, alm do que j sabemos, devemos atribuir uma propriedade chave.

62
00:05:06,550 --> 00:05:08,560
No, definitivamente vou voltar a isso.

63
00:05:08,570 --> 00:05:10,050
Isso  super importante.

64
00:05:10,070 --> 00:05:13,710
J podemos ver que, basicamente, ele est funcionando.

65
00:05:13,760 --> 00:05:19,910
Ele est representando essa lista de elementos mapeando nossa matriz em outra coisa.

66
00:05:19,910 --> 00:05:25,610
Agora vamos mergulhar mais profundamente nesta lista e aprender o que h com essa chave e como podemos

67
00:05:25,610 --> 00:05:30,390
reagir s mudanas em nossa matriz e como podemos modific-la usando nossos ouvintes de eventos.

