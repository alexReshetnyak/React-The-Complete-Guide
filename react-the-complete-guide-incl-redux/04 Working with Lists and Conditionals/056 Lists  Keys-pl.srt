1
00:00:02,850 --> 00:00:08,370
Umiecilimy ju troch pracy na listach i poprawilimy je, na przykad korzystajc z indeksu naszego elementu, aby

2
00:00:08,370 --> 00:00:15,390
uruchomi jaki kod, ktry naprawd bierze pod uwag element, ktry uruchamia. Nadal moemy to poprawi,

3
00:00:15,390 --> 00:00:22,320
na przykad, dbajc o ten bd, ktry

4
00:00:22,320 --> 00:00:29,190
otrzymujemy z brakujcym kluczem. Kluczowa podpora jest w rzeczywistoci wan wasnoci, ktr powinnimy doda podczas renderowania

5
00:00:29,190 --> 00:00:31,540
list danych i dlatego reaguje nam na to.

6
00:00:31,920 --> 00:00:35,130
Nie okrelilimy osobicie waciwoci klucza, tak naprawd

7
00:00:35,130 --> 00:00:41,970
jest to waciwo domylna, ktrej reagowanie oczekuje od elementu, niezalenie od tego, czy jest to

8
00:00:42,330 --> 00:00:47,210
komponent niestandardowy czy domylny element HTML, ktry renderujesz na licie,

9
00:00:47,220 --> 00:00:57,350
a wic po prostu przez odwzorowanie tablicy na elementy jsx . Ta kluczowa waciwo pomaga w skutecznym aktualizowaniu listy.

10
00:00:57,360 --> 00:01:00,980
Rozwamy tutaj przypadek, w ktrym usuwamy elementy z listy,

11
00:01:00,990 --> 00:01:02,650
oczywicie e dziaa, ale

12
00:01:02,730 --> 00:01:09,420
za kulisami reagujemy potrzebami, aby dowiedzie si, co waciwie musi zmieni w oglnej domenie, a my

13
00:01:09,420 --> 00:01:15,510
zagbimy si gbiej w to, co dokadnie reaguje w konkretna sekcja tutaj w trakcie, gdzie

14
00:01:15,510 --> 00:01:17,910
dam ci krtkie spojrzenie za kulisami.

15
00:01:17,910 --> 00:01:24,380
Ale w zasadzie to, co robi, ma co, co nazywa si wirtualn domen, gdzie porwnuje

16
00:01:24,390 --> 00:01:31,920
to, co teraz wyrenderowaoby, gdyby miao teraz wywoa metod renderowania, albo, gdyby rzeczywicie dopasowao rzeczywisty dom z wynikiem

17
00:01:31,920 --> 00:01:37,380
metody renderowania do poprzedniego domu. to wyszo. Zasadniczo robi to kompresj

18
00:01:37,380 --> 00:01:40,860
przyszoci z przeszoci. A jeli chodzi o

19
00:01:40,860 --> 00:01:46,180
listy, to oczywicie trzeba si dowiedzie, ktre elementy si zmieniy, a reakcja

20
00:01:46,200 --> 00:01:52,260
nie jest czowiekiem, nie wida tego wyranie, poniewa mamy trzy odrbne elementy o rnych

21
00:01:52,860 --> 00:01:54,780
nazwach, ktre przypadkowo kliknem.

22
00:01:54,780 --> 00:02:00,740
Wic nie widzi, e to Max, Manu i Stephanie, reaguj, ma tylko gar skadowych

23
00:02:01,170 --> 00:02:03,300
i nie sprawdza ich gboko,

24
00:02:03,300 --> 00:02:05,170
co byoby super nieskuteczne.

25
00:02:05,670 --> 00:02:08,700
Domylnie po prostu ponownie wywietli ca list,

26
00:02:08,700 --> 00:02:11,790
a dla dugiej listy jest to bardzo

27
00:02:11,790 --> 00:02:17,040
nieefektywne, dlatego powinnimy przypisa waciwo kluczow, aby umoliwi reagowanie w celu ledzenia

28
00:02:17,040 --> 00:02:24,720
poszczeglnych elementw, tak aby miaa wyran waciwo, ktr moe porwnaj rne elementy, aby dowiedzie si, ktre elementy

29
00:02:24,720 --> 00:02:26,800
si zmieniy, a ktre nie.

30
00:02:26,910 --> 00:02:31,680
Tak, e ponownie renderuje elementy, ktre si zmieniy, a nie ca list.

31
00:02:32,040 --> 00:02:38,870
Wic to, co robimy, to przypisujemy klucz, a teraz co tutaj przypiszemy? Co wyjtkowego.

32
00:02:39,180 --> 00:02:45,120
Zwykle masz pewn identyfikacj swoich elementw, jeli otrzymasz je z bazy danych

33
00:02:45,120 --> 00:02:45,790
lub

34
00:02:45,810 --> 00:02:53,370
czego podobnego, istnieje dua szansa, e masz identyfikator lub inny unikalny identyfikator, a Twoje imi

35
00:02:53,370 --> 00:02:56,250
bdzie unikalne, ale niekoniecznie jest gwarantowane.

36
00:02:56,250 --> 00:03:02,340
Wic moglibymy uy indeksu, poniewa po wszystkich zmianach indeksu dla kadego elementu w

37
00:03:02,340 --> 00:03:02,630
tablicy,

38
00:03:02,630 --> 00:03:03,210
prawda?

39
00:03:03,450 --> 00:03:04,110
Zgadza si,

40
00:03:04,110 --> 00:03:06,920
ale indeks jest rwnie czci samej listy.

41
00:03:07,020 --> 00:03:11,160
Jeli lista si zmieni, kady element otrzyma nowy indeks

42
00:03:11,160 --> 00:03:13,740
przynajmniej po kadym elemencie po zmianie.

43
00:03:13,740 --> 00:03:19,890
Indeks nie jest wic dobrym kluczem, ostatecznie nie pomoe zareagowa. Powinnimy wic sprbowa mie niepowtarzalny identyfikator i znowu, poniewa

44
00:03:19,890 --> 00:03:21,010
jest to po

45
00:03:21,240 --> 00:03:26,530
prostu fikcyjne dane, tutaj po prostu dodaj identyfikator. W prawdziwych danych szanse

46
00:03:26,550 --> 00:03:32,380
s wysokie, masz taki identyfikator. Identyfikator nie musi by liczb, moe by

47
00:03:32,460 --> 00:03:37,650
czym wyjtkowym, wic tutaj po prostu wbijam na klawiatur, aby uzyska unikalne identyfikatory.

48
00:03:37,650 --> 00:03:40,040
Teraz mog uy tego tutaj z

49
00:03:40,050 --> 00:03:48,240
identyfikatorem osoby, aby upewni si, e kady element ma unikalny klucz reagowania, ktry moe posuy do porwnania elementw przyszoci

50
00:03:48,240 --> 00:03:54,790
z elementami przeszoci i tylko zaktualizowa dom w miejscach, w ktrych musi go zaktualizowa .

51
00:03:55,020 --> 00:04:01,680
Teraz, jeli to przeadujemy i przeczymy osoby, kluczowe ostrzeenie zniknie. Otrzymujemy takie samo zachowanie jak poprzednio i

52
00:04:01,680 --> 00:04:06,230
moemy sprawdzi to, aby zobaczy, jak aktualizuje dom tutaj.

53
00:04:06,270 --> 00:04:12,390
Ale za kulisami mona to teraz zrobi w bardziej efektywny sposb, co oczywicie jest bardzo wane.

